unit fhir5_javascript;

{$I fhir5.inc}

{
  Copyright (c) 2011+, HL7 and Health Intersections Pty Ltd (http://www.healthintersections.com.au)
  All rights reserved.
  
  Redistribution and use in source and binary forms, with or without modification, 
  are permitted provided that the following conditions are met:
  
   * Redistributions of source code must retain the above copyright notice, this 
     list of conditions and the following disclaimer.
   * Redistributions in binary form must reproduce the above copyright notice, 
     this list of conditions and the following disclaimer in the documentation 
     and/or other materials provided with the distribution.
   * Neither the name of HL7 nor the names of its contributors may be used to 
     endorse or promote products derived from this software without specific 
     prior written permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
  POSSIBILITY OF SUCH DAMAGE.
  
}

{$I fhir.inc}

interface

// Generated on Fri, Aug 21, 2020 11:27+1000 for FHIR v4.5.0



uses
  fsl_javascript, fhir_javascript;

procedure registerFHIRTypes(js : TFHIRJavascript);
procedure registerFHIRTypesDef(js : TFHIRJavascript);

implementation

function v(xv : boolean) : String;
begin
  if xv then
    result := ''
  else
    result := '5';
end;

procedure defineBasePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
end;

procedure defineElementPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBasePropsJs(js, def, xv);
  js.registerElement(def, 'Element'+v(xv), 'id', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Element'+v(xv), 'extension', 'Extension'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineBackboneElementPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'BackboneElement'+v(xv), 'modifierExtension', 'Extension'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDataTypePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
end;

procedure defineBackboneTypePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'BackboneType'+v(xv), 'modifierExtension', 'Extension'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePrimitiveTypePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
end;

procedure defineAddressPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Address'+v(xv), 'use', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Address'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Address'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Address'+v(xv), 'city', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Address'+v(xv), 'district', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Address'+v(xv), 'state', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Address'+v(xv), 'postalCode', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Address'+v(xv), 'country', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Address'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineAddressJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Address'+v(xv), nil, js.FHIRFactoryJs);
  defineAddressPropsJs(js, def, xv);
end;

procedure defineAnnotationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Annotation'+v(xv), 'authorReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Annotation'+v(xv), 'authorString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Annotation'+v(xv), 'time', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Annotation'+v(xv), 'text', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineAnnotationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Annotation'+v(xv), nil, js.FHIRFactoryJs);
  defineAnnotationPropsJs(js, def, xv);
end;

procedure defineAttachmentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Attachment'+v(xv), 'contentType', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Attachment'+v(xv), 'language', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Attachment'+v(xv), 'data', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'Attachment'+v(xv), 'url', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Attachment'+v(xv), 'size', 'integer64'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Attachment'+v(xv), 'hash', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'Attachment'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Attachment'+v(xv), 'creation', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Attachment'+v(xv), 'height', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'Attachment'+v(xv), 'width', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'Attachment'+v(xv), 'frames', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'Attachment'+v(xv), 'duration', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'Attachment'+v(xv), 'pages', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
end;

procedure defineAttachmentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Attachment'+v(xv), nil, js.FHIRFactoryJs);
  defineAttachmentPropsJs(js, def, xv);
end;

procedure defineCodeableConceptPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'CodeableConcept'+v(xv), 'coding', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CodeableConcept'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCodeableConceptJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CodeableConcept'+v(xv), nil, js.FHIRFactoryJs);
  defineCodeableConceptPropsJs(js, def, xv);
end;

procedure defineCodeableReferencePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'CodeableReference'+v(xv), 'concept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CodeableReference'+v(xv), 'reference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCodeableReferenceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CodeableReference'+v(xv), nil, js.FHIRFactoryJs);
  defineCodeableReferencePropsJs(js, def, xv);
end;

procedure defineCodingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Coding'+v(xv), 'system', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Coding'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Coding'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Coding'+v(xv), 'display', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Coding'+v(xv), 'userSelected', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineCodingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Coding'+v(xv), nil, js.FHIRFactoryJs);
  defineCodingPropsJs(js, def, xv);
end;

procedure defineContactDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'ContactDetail'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ContactDetail'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineContactDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContactDetail'+v(xv), nil, js.FHIRFactoryJs);
  defineContactDetailPropsJs(js, def, xv);
end;

procedure defineContactPointPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'ContactPoint'+v(xv), 'system', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ContactPoint'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ContactPoint'+v(xv), 'use', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ContactPoint'+v(xv), 'rank', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ContactPoint'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineContactPointJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContactPoint'+v(xv), nil, js.FHIRFactoryJs);
  defineContactPointPropsJs(js, def, xv);
end;

procedure defineContributorPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Contributor'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Contributor'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Contributor'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineContributorJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Contributor'+v(xv), nil, js.FHIRFactoryJs);
  defineContributorPropsJs(js, def, xv);
end;

procedure defineDataRequirementCodeFilterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'DataRequirementCodeFilter'+v(xv), 'path', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DataRequirementCodeFilter'+v(xv), 'searchParam', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DataRequirementCodeFilter'+v(xv), 'valueSet', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DataRequirementCodeFilter'+v(xv), 'code', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDataRequirementCodeFilterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DataRequirementCodeFilter'+v(xv), nil, js.FHIRFactoryJs);
  defineDataRequirementCodeFilterPropsJs(js, def, xv);
end;

procedure defineDataRequirementDateFilterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'DataRequirementDateFilter'+v(xv), 'path', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DataRequirementDateFilter'+v(xv), 'searchParam', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DataRequirementDateFilter'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'DataRequirementDateFilter'+v(xv), 'valuePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DataRequirementDateFilter'+v(xv), 'valueDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineDataRequirementDateFilterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DataRequirementDateFilter'+v(xv), nil, js.FHIRFactoryJs);
  defineDataRequirementDateFilterPropsJs(js, def, xv);
end;

procedure defineDataRequirementSortPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'DataRequirementSort'+v(xv), 'path', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DataRequirementSort'+v(xv), 'direction', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineDataRequirementSortJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DataRequirementSort'+v(xv), nil, js.FHIRFactoryJs);
  defineDataRequirementSortPropsJs(js, def, xv);
end;

procedure defineDataRequirementPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'DataRequirement'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DataRequirement'+v(xv), 'subjectCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DataRequirement'+v(xv), 'subjectReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DataRequirement'+v(xv), 'codeFilter', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DataRequirement'+v(xv), 'dateFilter', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DataRequirement'+v(xv), 'limit', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'DataRequirement'+v(xv), 'sort', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDataRequirementJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DataRequirement'+v(xv), nil, js.FHIRFactoryJs);
  defineDataRequirementPropsJs(js, def, xv);
end;

procedure defineExpressionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Expression'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Expression'+v(xv), 'name', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Expression'+v(xv), 'language', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Expression'+v(xv), 'expression', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Expression'+v(xv), 'reference', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineExpressionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Expression'+v(xv), nil, js.FHIRFactoryJs);
  defineExpressionPropsJs(js, def, xv);
end;

procedure defineExtensionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Extension'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueBase64Binary', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueCode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueInstant', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueInteger64', 'integer64'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueMarkdown', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueOid', 'oid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Extension'+v(xv), 'valuePositiveInt', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueUrl', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueUuid', 'uuid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueAnnotation', 'Annotation'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueContactPoint', 'ContactPoint'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueCount', 'Count'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueDistance', 'Distance'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueHumanName', 'HumanName'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valuePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueSampledData', 'SampledData'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueSignature', 'Signature'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueContactDetail', 'ContactDetail'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueContributor', 'Contributor'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueDataRequirement', 'DataRequirement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueExpression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueParameterDefinition', 'ParameterDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueRelatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueTriggerDefinition', 'TriggerDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueUsageContext', 'UsageContext'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueDosage', 'Dosage'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Extension'+v(xv), 'valueMeta', 'Meta'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineExtensionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Extension'+v(xv), nil, js.FHIRFactoryJs);
  defineExtensionPropsJs(js, def, xv);
end;

procedure defineHumanNamePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'HumanName'+v(xv), 'use', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'HumanName'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'HumanName'+v(xv), 'family', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'HumanName'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineHumanNameJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('HumanName'+v(xv), nil, js.FHIRFactoryJs);
  defineHumanNamePropsJs(js, def, xv);
end;

procedure defineIdentifierPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Identifier'+v(xv), 'use', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Identifier'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Identifier'+v(xv), 'system', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Identifier'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Identifier'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Identifier'+v(xv), 'assigner', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineIdentifierJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Identifier'+v(xv), nil, js.FHIRFactoryJs);
  defineIdentifierPropsJs(js, def, xv);
end;

procedure defineMetaPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Meta'+v(xv), 'versionId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Meta'+v(xv), 'lastUpdated', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Meta'+v(xv), 'source', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Meta'+v(xv), 'security', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Meta'+v(xv), 'tag', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMetaJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Meta'+v(xv), nil, js.FHIRFactoryJs);
  defineMetaPropsJs(js, def, xv);
end;

procedure defineMoneyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Money'+v(xv), 'value', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'Money'+v(xv), 'currency', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineMoneyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Money'+v(xv), nil, js.FHIRFactoryJs);
  defineMoneyPropsJs(js, def, xv);
end;

procedure defineNarrativePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Narrative'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Narrative'+v(xv), 'div_', 'xhtml'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineNarrativeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Narrative'+v(xv), nil, js.FHIRFactoryJs);
  defineNarrativePropsJs(js, def, xv);
end;

procedure defineParameterDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'ParameterDefinition'+v(xv), 'name', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParameterDefinition'+v(xv), 'use', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParameterDefinition'+v(xv), 'min', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ParameterDefinition'+v(xv), 'max', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParameterDefinition'+v(xv), 'documentation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParameterDefinition'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParameterDefinition'+v(xv), 'profile', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineParameterDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ParameterDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineParameterDefinitionPropsJs(js, def, xv);
end;

procedure definePeriodPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Period'+v(xv), 'start', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Period'+v(xv), 'end_', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure definePeriodJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Period'+v(xv), nil, js.FHIRFactoryJs);
  definePeriodPropsJs(js, def, xv);
end;

procedure defineQuantityPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Quantity'+v(xv), 'value', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'Quantity'+v(xv), 'comparator', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Quantity'+v(xv), 'unit_', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Quantity'+v(xv), 'system', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Quantity'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineQuantityJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Quantity'+v(xv), nil, js.FHIRFactoryJs);
  defineQuantityPropsJs(js, def, xv);
end;

procedure defineRangePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Range'+v(xv), 'low', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Range'+v(xv), 'high', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineRangeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Range'+v(xv), nil, js.FHIRFactoryJs);
  defineRangePropsJs(js, def, xv);
end;

procedure defineRatioPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Ratio'+v(xv), 'numerator', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Ratio'+v(xv), 'denominator', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineRatioJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Ratio'+v(xv), nil, js.FHIRFactoryJs);
  defineRatioPropsJs(js, def, xv);
end;

procedure defineReferencePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Reference'+v(xv), 'reference', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Reference'+v(xv), 'type_', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Reference'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Reference'+v(xv), 'display', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineReferenceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Reference'+v(xv), nil, js.FHIRFactoryJs);
  defineReferencePropsJs(js, def, xv);
end;

procedure defineRelatedArtifactPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'RelatedArtifact'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RelatedArtifact'+v(xv), 'label_', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RelatedArtifact'+v(xv), 'display', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RelatedArtifact'+v(xv), 'citation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RelatedArtifact'+v(xv), 'url', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RelatedArtifact'+v(xv), 'document', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RelatedArtifact'+v(xv), 'resource', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineRelatedArtifactJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('RelatedArtifact'+v(xv), nil, js.FHIRFactoryJs);
  defineRelatedArtifactPropsJs(js, def, xv);
end;

procedure defineSampledDataPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'SampledData'+v(xv), 'origin', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SampledData'+v(xv), 'period', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'SampledData'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'SampledData'+v(xv), 'lowerLimit', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'SampledData'+v(xv), 'upperLimit', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'SampledData'+v(xv), 'dimensions', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'SampledData'+v(xv), 'data', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineSampledDataJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SampledData'+v(xv), nil, js.FHIRFactoryJs);
  defineSampledDataPropsJs(js, def, xv);
end;

procedure defineSignaturePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'Signature'+v(xv), 'type', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Signature'+v(xv), 'when', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Signature'+v(xv), 'who', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Signature'+v(xv), 'onBehalfOf', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Signature'+v(xv), 'targetFormat', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Signature'+v(xv), 'sigFormat', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Signature'+v(xv), 'data', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
end;

procedure defineSignatureJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Signature'+v(xv), nil, js.FHIRFactoryJs);
  defineSignaturePropsJs(js, def, xv);
end;

procedure defineTriggerDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'TriggerDefinition'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TriggerDefinition'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TriggerDefinition'+v(xv), 'timingTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TriggerDefinition'+v(xv), 'timingReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TriggerDefinition'+v(xv), 'timingDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'TriggerDefinition'+v(xv), 'timingDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'TriggerDefinition'+v(xv), 'data', 'DataRequirement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TriggerDefinition'+v(xv), 'condition', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTriggerDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TriggerDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineTriggerDefinitionPropsJs(js, def, xv);
end;

procedure defineUsageContextPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDataTypePropsJs(js, def, xv);
  js.registerElement(def, 'UsageContext'+v(xv), 'code', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'UsageContext'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'UsageContext'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'UsageContext'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'UsageContext'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineUsageContextJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('UsageContext'+v(xv), nil, js.FHIRFactoryJs);
  defineUsageContextPropsJs(js, def, xv);
end;

procedure defineAgePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineQuantityPropsJs(js, def, xv);
end;

procedure defineAgeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Age'+v(xv), nil, js.FHIRFactoryJs);
  defineAgePropsJs(js, def, xv);
end;

procedure defineCountPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineQuantityPropsJs(js, def, xv);
end;

procedure defineCountJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Count'+v(xv), nil, js.FHIRFactoryJs);
  defineCountPropsJs(js, def, xv);
end;

procedure defineDistancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineQuantityPropsJs(js, def, xv);
end;

procedure defineDistanceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Distance'+v(xv), nil, js.FHIRFactoryJs);
  defineDistancePropsJs(js, def, xv);
end;

procedure defineDosageDoseAndRatePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'DosageDoseAndRate'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DosageDoseAndRate'+v(xv), 'doseRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DosageDoseAndRate'+v(xv), 'doseQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DosageDoseAndRate'+v(xv), 'rateRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DosageDoseAndRate'+v(xv), 'rateRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DosageDoseAndRate'+v(xv), 'rateQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineDosageDoseAndRateJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DosageDoseAndRate'+v(xv), nil, js.FHIRFactoryJs);
  defineDosageDoseAndRatePropsJs(js, def, xv);
end;

procedure defineDosagePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneTypePropsJs(js, def, xv);
  js.registerElement(def, 'Dosage'+v(xv), 'sequence', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'Dosage'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Dosage'+v(xv), 'additionalInstruction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Dosage'+v(xv), 'patientInstruction', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Dosage'+v(xv), 'timing', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Dosage'+v(xv), 'asNeededBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Dosage'+v(xv), 'asNeededCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Dosage'+v(xv), 'site', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Dosage'+v(xv), 'route', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Dosage'+v(xv), 'method', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Dosage'+v(xv), 'doseAndRate', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Dosage'+v(xv), 'maxDosePerPeriod', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Dosage'+v(xv), 'maxDosePerAdministration', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Dosage'+v(xv), 'maxDosePerLifetime', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineDosageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Dosage'+v(xv), nil, js.FHIRFactoryJs);
  defineDosagePropsJs(js, def, xv);
end;

procedure defineDurationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineQuantityPropsJs(js, def, xv);
end;

procedure defineDurationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Duration'+v(xv), nil, js.FHIRFactoryJs);
  defineDurationPropsJs(js, def, xv);
end;

procedure defineElementDefinitionSlicingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'ElementDefinitionSlicing'+v(xv), 'discriminator', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ElementDefinitionSlicing'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionSlicing'+v(xv), 'ordered', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ElementDefinitionSlicing'+v(xv), 'rules', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineElementDefinitionSlicingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ElementDefinitionSlicing'+v(xv), nil, js.FHIRFactoryJs);
  defineElementDefinitionSlicingPropsJs(js, def, xv);
end;

procedure defineElementDefinitionSlicingDiscriminatorPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'ElementDefinitionSlicingDiscriminator'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionSlicingDiscriminator'+v(xv), 'path', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineElementDefinitionSlicingDiscriminatorJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ElementDefinitionSlicingDiscriminator'+v(xv), nil, js.FHIRFactoryJs);
  defineElementDefinitionSlicingDiscriminatorPropsJs(js, def, xv);
end;

procedure defineElementDefinitionBasePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'ElementDefinitionBase'+v(xv), 'path', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionBase'+v(xv), 'min', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionBase'+v(xv), 'max', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineElementDefinitionBaseJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ElementDefinitionBase'+v(xv), nil, js.FHIRFactoryJs);
  defineElementDefinitionBasePropsJs(js, def, xv);
end;

procedure defineElementDefinitionTypePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'ElementDefinitionType'+v(xv), 'code', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionType'+v(xv), 'versioning', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineElementDefinitionTypeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ElementDefinitionType'+v(xv), nil, js.FHIRFactoryJs);
  defineElementDefinitionTypePropsJs(js, def, xv);
end;

procedure defineElementDefinitionExamplePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'label_', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueBase64Binary', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueCode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueInstant', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueInteger64', 'integer64'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueMarkdown', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueOid', 'oid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valuePositiveInt', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueUrl', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueUuid', 'uuid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueAnnotation', 'Annotation'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueContactPoint', 'ContactPoint'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueCount', 'Count'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueDistance', 'Distance'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueHumanName', 'HumanName'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valuePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueSampledData', 'SampledData'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueSignature', 'Signature'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueContactDetail', 'ContactDetail'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueContributor', 'Contributor'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueDataRequirement', 'DataRequirement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueExpression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueParameterDefinition', 'ParameterDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueRelatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueTriggerDefinition', 'TriggerDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueUsageContext', 'UsageContext'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueDosage', 'Dosage'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinitionExample'+v(xv), 'valueMeta', 'Meta'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineElementDefinitionExampleJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ElementDefinitionExample'+v(xv), nil, js.FHIRFactoryJs);
  defineElementDefinitionExamplePropsJs(js, def, xv);
end;

procedure defineElementDefinitionConstraintPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'ElementDefinitionConstraint'+v(xv), 'key', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionConstraint'+v(xv), 'requirements', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionConstraint'+v(xv), 'severity', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionConstraint'+v(xv), 'human', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionConstraint'+v(xv), 'expression', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionConstraint'+v(xv), 'xpath', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionConstraint'+v(xv), 'source', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineElementDefinitionConstraintJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ElementDefinitionConstraint'+v(xv), nil, js.FHIRFactoryJs);
  defineElementDefinitionConstraintPropsJs(js, def, xv);
end;

procedure defineElementDefinitionBindingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'ElementDefinitionBinding'+v(xv), 'strength', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionBinding'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionBinding'+v(xv), 'valueSet', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineElementDefinitionBindingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ElementDefinitionBinding'+v(xv), nil, js.FHIRFactoryJs);
  defineElementDefinitionBindingPropsJs(js, def, xv);
end;

procedure defineElementDefinitionMappingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'ElementDefinitionMapping'+v(xv), 'identity', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionMapping'+v(xv), 'language', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionMapping'+v(xv), 'map', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinitionMapping'+v(xv), 'comment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineElementDefinitionMappingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ElementDefinitionMapping'+v(xv), nil, js.FHIRFactoryJs);
  defineElementDefinitionMappingPropsJs(js, def, xv);
end;

procedure defineElementDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneTypePropsJs(js, def, xv);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'path', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'sliceName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'sliceIsConstraining', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'label_', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'code', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'slicing', 'Element'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'short', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'definition', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'comment', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'requirements', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'min', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'max', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'base', 'Element'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'contentReference', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'type', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueBase64Binary', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueCode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueInstant', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueInteger64', 'integer64'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueMarkdown', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueOid', 'oid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValuePositiveInt', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueUrl', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueUuid', 'uuid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueAnnotation', 'Annotation'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueContactPoint', 'ContactPoint'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueCount', 'Count'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueDistance', 'Distance'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueHumanName', 'HumanName'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValuePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueSampledData', 'SampledData'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueSignature', 'Signature'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueContactDetail', 'ContactDetail'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueContributor', 'Contributor'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueDataRequirement', 'DataRequirement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueExpression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueParameterDefinition', 'ParameterDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueRelatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueTriggerDefinition', 'TriggerDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueUsageContext', 'UsageContext'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueDosage', 'Dosage'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'defaultValueMeta', 'Meta'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'meaningWhenMissing', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'orderMeaning', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedBase64Binary', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedCode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedInstant', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedInteger64', 'integer64'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedMarkdown', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedOid', 'oid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedPositiveInt', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedUrl', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedUuid', 'uuid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedAnnotation', 'Annotation'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedContactPoint', 'ContactPoint'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedCount', 'Count'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedDistance', 'Distance'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedHumanName', 'HumanName'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedSampledData', 'SampledData'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedSignature', 'Signature'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedContactDetail', 'ContactDetail'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedContributor', 'Contributor'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedDataRequirement', 'DataRequirement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedExpression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedParameterDefinition', 'ParameterDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedRelatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedTriggerDefinition', 'TriggerDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedUsageContext', 'UsageContext'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedDosage', 'Dosage'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'fixedMeta', 'Meta'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternBase64Binary', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternCode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternInstant', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternInteger64', 'integer64'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternMarkdown', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternOid', 'oid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternPositiveInt', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternUrl', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternUuid', 'uuid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternAnnotation', 'Annotation'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternContactPoint', 'ContactPoint'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternCount', 'Count'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternDistance', 'Distance'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternHumanName', 'HumanName'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternSampledData', 'SampledData'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternSignature', 'Signature'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternContactDetail', 'ContactDetail'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternContributor', 'Contributor'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternDataRequirement', 'DataRequirement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternExpression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternParameterDefinition', 'ParameterDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternRelatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternTriggerDefinition', 'TriggerDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternUsageContext', 'UsageContext'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternDosage', 'Dosage'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'patternMeta', 'Meta'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'example', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'minValueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'minValueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'minValueInstant', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'minValueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'minValueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'minValueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'minValueInteger64', 'integer64'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'minValuePositiveInt', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'minValueUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'minValueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'maxValueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'maxValueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'maxValueInstant', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'maxValueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'maxValueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'maxValueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'maxValueInteger64', 'integer64'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'maxValuePositiveInt', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'maxValueUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'maxValueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'maxLength', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'constraint', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'mustSupport', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'isModifier', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'isModifierReason', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'isSummary', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'binding', 'Element'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ElementDefinition'+v(xv), 'mapping', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineElementDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ElementDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineElementDefinitionPropsJs(js, def, xv);
end;

procedure defineMarketingStatusPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneTypePropsJs(js, def, xv);
  js.registerElement(def, 'MarketingStatus'+v(xv), 'country', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MarketingStatus'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MarketingStatus'+v(xv), 'status', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MarketingStatus'+v(xv), 'dateRange', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MarketingStatus'+v(xv), 'restoreDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineMarketingStatusJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MarketingStatus'+v(xv), nil, js.FHIRFactoryJs);
  defineMarketingStatusPropsJs(js, def, xv);
end;

procedure defineOrderedDistributionIntervalPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'OrderedDistributionInterval'+v(xv), 'rankOrder', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'OrderedDistributionInterval'+v(xv), 'intervalStatistic', 'Statistic'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineOrderedDistributionIntervalJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('OrderedDistributionInterval'+v(xv), nil, js.FHIRFactoryJs);
  defineOrderedDistributionIntervalPropsJs(js, def, xv);
end;

procedure defineOrderedDistributionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneTypePropsJs(js, def, xv);
  js.registerElement(def, 'OrderedDistribution'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OrderedDistribution'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OrderedDistribution'+v(xv), 'numberOfIntervals', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'OrderedDistribution'+v(xv), 'bottomOfFirstInterval', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'OrderedDistribution'+v(xv), 'interval', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OrderedDistribution'+v(xv), 'topOfInterval', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineOrderedDistributionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('OrderedDistribution'+v(xv), nil, js.FHIRFactoryJs);
  defineOrderedDistributionPropsJs(js, def, xv);
end;

procedure definePopulationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneTypePropsJs(js, def, xv);
  js.registerElement(def, 'Population'+v(xv), 'ageRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Population'+v(xv), 'ageCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Population'+v(xv), 'gender', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Population'+v(xv), 'race', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Population'+v(xv), 'physiologicalCondition', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure definePopulationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Population'+v(xv), nil, js.FHIRFactoryJs);
  definePopulationPropsJs(js, def, xv);
end;

procedure defineProdCharacteristicPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneTypePropsJs(js, def, xv);
  js.registerElement(def, 'ProdCharacteristic'+v(xv), 'height', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProdCharacteristic'+v(xv), 'width', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProdCharacteristic'+v(xv), 'depth', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProdCharacteristic'+v(xv), 'weight', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProdCharacteristic'+v(xv), 'nominalVolume', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProdCharacteristic'+v(xv), 'externalDiameter', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProdCharacteristic'+v(xv), 'shape', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ProdCharacteristic'+v(xv), 'image', 'Attachment'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ProdCharacteristic'+v(xv), 'scoring', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineProdCharacteristicJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ProdCharacteristic'+v(xv), nil, js.FHIRFactoryJs);
  defineProdCharacteristicPropsJs(js, def, xv);
end;

procedure defineProductShelfLifePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneTypePropsJs(js, def, xv);
  js.registerElement(def, 'ProductShelfLife'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProductShelfLife'+v(xv), 'periodQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProductShelfLife'+v(xv), 'periodString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ProductShelfLife'+v(xv), 'specialPrecautionsForStorage', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineProductShelfLifeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ProductShelfLife'+v(xv), nil, js.FHIRFactoryJs);
  defineProductShelfLifePropsJs(js, def, xv);
end;

procedure defineStatisticSampleSizePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'StatisticSampleSize'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StatisticSampleSize'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StatisticSampleSize'+v(xv), 'numberOfStudies', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'StatisticSampleSize'+v(xv), 'numberOfParticipants', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'StatisticSampleSize'+v(xv), 'knownDataCount', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
end;

procedure defineStatisticSampleSizeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StatisticSampleSize'+v(xv), nil, js.FHIRFactoryJs);
  defineStatisticSampleSizePropsJs(js, def, xv);
end;

procedure defineStatisticAttributeEstimatePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'StatisticAttributeEstimate'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StatisticAttributeEstimate'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StatisticAttributeEstimate'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StatisticAttributeEstimate'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StatisticAttributeEstimate'+v(xv), 'level', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'StatisticAttributeEstimate'+v(xv), 'range', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StatisticAttributeEstimate'+v(xv), 'attributeEstimate', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineStatisticAttributeEstimateJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StatisticAttributeEstimate'+v(xv), nil, js.FHIRFactoryJs);
  defineStatisticAttributeEstimatePropsJs(js, def, xv);
end;

procedure defineStatisticAttributeEstimateAttributeEstimatePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'StatisticAttributeEstimateAttributeEstimate'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StatisticAttributeEstimateAttributeEstimate'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StatisticAttributeEstimateAttributeEstimate'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StatisticAttributeEstimateAttributeEstimate'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StatisticAttributeEstimateAttributeEstimate'+v(xv), 'level', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'StatisticAttributeEstimateAttributeEstimate'+v(xv), 'range', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineStatisticAttributeEstimateAttributeEstimateJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StatisticAttributeEstimateAttributeEstimate'+v(xv), nil, js.FHIRFactoryJs);
  defineStatisticAttributeEstimateAttributeEstimatePropsJs(js, def, xv);
end;

procedure defineStatisticModelCharacteristicPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'StatisticModelCharacteristic'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StatisticModelCharacteristic'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StatisticModelCharacteristic'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'StatisticModelCharacteristic'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StatisticModelCharacteristic'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StatisticModelCharacteristic'+v(xv), 'variable', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineStatisticModelCharacteristicJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StatisticModelCharacteristic'+v(xv), nil, js.FHIRFactoryJs);
  defineStatisticModelCharacteristicPropsJs(js, def, xv);
end;

procedure defineStatisticModelCharacteristicVariablePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'StatisticModelCharacteristicVariable'+v(xv), 'variableDefinition', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StatisticModelCharacteristicVariable'+v(xv), 'handling', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StatisticModelCharacteristicVariable'+v(xv), 'valueCategory', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StatisticModelCharacteristicVariable'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StatisticModelCharacteristicVariable'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineStatisticModelCharacteristicVariableJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StatisticModelCharacteristicVariable'+v(xv), nil, js.FHIRFactoryJs);
  defineStatisticModelCharacteristicVariablePropsJs(js, def, xv);
end;

procedure defineStatisticPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneTypePropsJs(js, def, xv);
  js.registerElement(def, 'Statistic'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Statistic'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Statistic'+v(xv), 'statisticType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Statistic'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Statistic'+v(xv), 'numberOfEvents', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'Statistic'+v(xv), 'sampleSize', 'Element'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Statistic'+v(xv), 'attributeEstimate', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Statistic'+v(xv), 'modelCharacteristic', 'Element'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineStatisticJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Statistic'+v(xv), nil, js.FHIRFactoryJs);
  defineStatisticPropsJs(js, def, xv);
end;

procedure defineTimingRepeatPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineElementPropsJs(js, def, xv);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'boundsDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'boundsRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'boundsPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'count', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'countMax', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'duration', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'durationMax', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'durationUnit', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'frequency', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'frequencyMax', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'period', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'periodMax', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'periodUnit', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TimingRepeat'+v(xv), 'offset', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTimingRepeatJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TimingRepeat'+v(xv), nil, js.FHIRFactoryJs);
  defineTimingRepeatPropsJs(js, def, xv);
end;

procedure defineTimingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneTypePropsJs(js, def, xv);
  js.registerElement(def, 'Timing'+v(xv), 'repeat', 'Element'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Timing'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTimingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Timing'+v(xv), nil, js.FHIRFactoryJs);
  defineTimingPropsJs(js, def, xv);
end;

procedure defineResourcePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBasePropsJs(js, def, xv);
  js.registerElement(def, 'Resource'+v(xv), 'id', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Resource'+v(xv), 'meta', 'Meta'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Resource'+v(xv), 'implicitRules', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Resource'+v(xv), 'language', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineDomainResourcePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineResourcePropsJs(js, def, xv);
  js.registerElement(def, 'DomainResource'+v(xv), 'text', 'Narrative'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DomainResource'+v(xv), 'contained', 'Resource'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DomainResource'+v(xv), 'extension', 'Extension'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DomainResource'+v(xv), 'modifierExtension', 'Extension'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCanonicalResourcePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CanonicalResource'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineMetadataResourcePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'MetadataResource'+v(xv), 'approvalDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'MetadataResource'+v(xv), 'lastReviewDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'MetadataResource'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineAccountCoveragePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AccountCoverage'+v(xv), 'coverage', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AccountCoverage'+v(xv), 'priority', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
end;

procedure defineAccountCoverageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AccountCoverage'+v(xv), nil, js.FHIRFactoryJs);
  defineAccountCoveragePropsJs(js, def, xv);
end;

procedure defineAccountGuarantorPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AccountGuarantor'+v(xv), 'party', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AccountGuarantor'+v(xv), 'onHold', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'AccountGuarantor'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineAccountGuarantorJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AccountGuarantor'+v(xv), nil, js.FHIRFactoryJs);
  defineAccountGuarantorPropsJs(js, def, xv);
end;

procedure defineAccountPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Account'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Account'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Account'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Account'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Account'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Account'+v(xv), 'servicePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Account'+v(xv), 'coverage', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Account'+v(xv), 'owner', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Account'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Account'+v(xv), 'guarantor', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Account'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineAccountJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Account'+v(xv), nil, js.FHIRFactoryJs);
  defineAccountPropsJs(js, def, xv);
end;

procedure defineActivityDefinitionParticipantPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ActivityDefinitionParticipant'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinitionParticipant'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineActivityDefinitionParticipantJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ActivityDefinitionParticipant'+v(xv), nil, js.FHIRFactoryJs);
  defineActivityDefinitionParticipantPropsJs(js, def, xv);
end;

procedure defineActivityDefinitionDynamicValuePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ActivityDefinitionDynamicValue'+v(xv), 'path', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinitionDynamicValue'+v(xv), 'expression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineActivityDefinitionDynamicValueJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ActivityDefinitionDynamicValue'+v(xv), nil, js.FHIRFactoryJs);
  defineActivityDefinitionDynamicValuePropsJs(js, def, xv);
end;

procedure defineActivityDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineMetadataResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'subtitle', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'subjectCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'subjectReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'usage', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'approvalDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'lastReviewDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'topic', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'author', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'editor', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'reviewer', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'endorser', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'relatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'kind', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'profile', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'intent', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'priority', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'doNotPerform', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'timingTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'timingDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'timingAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'timingPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'timingRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'timingDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'participant', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'productReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'productCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'dosage', 'Dosage'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'bodySite', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'specimenRequirement', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'observationRequirement', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'observationResultRequirement', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'transform', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ActivityDefinition'+v(xv), 'dynamicValue', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineActivityDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ActivityDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineActivityDefinitionPropsJs(js, def, xv);
end;

procedure defineAdministrableProductDefinitionPropertyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AdministrableProductDefinitionProperty'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinitionProperty'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinitionProperty'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinitionProperty'+v(xv), 'valueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'AdministrableProductDefinitionProperty'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'AdministrableProductDefinitionProperty'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinitionProperty'+v(xv), 'status', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineAdministrableProductDefinitionPropertyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AdministrableProductDefinitionProperty'+v(xv), nil, js.FHIRFactoryJs);
  defineAdministrableProductDefinitionPropertyPropsJs(js, def, xv);
end;

procedure defineAdministrableProductDefinitionRouteOfAdministrationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AdministrableProductDefinitionRouteOfAdministration'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinitionRouteOfAdministration'+v(xv), 'firstDose', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinitionRouteOfAdministration'+v(xv), 'maxSingleDose', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinitionRouteOfAdministration'+v(xv), 'maxDosePerDay', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinitionRouteOfAdministration'+v(xv), 'maxDosePerTreatmentPeriod', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinitionRouteOfAdministration'+v(xv), 'maxTreatmentPeriod', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinitionRouteOfAdministration'+v(xv), 'targetSpecies', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineAdministrableProductDefinitionRouteOfAdministrationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AdministrableProductDefinitionRouteOfAdministration'+v(xv), nil, js.FHIRFactoryJs);
  defineAdministrableProductDefinitionRouteOfAdministrationPropsJs(js, def, xv);
end;

procedure defineAdministrableProductDefinitionRouteOfAdministrationTargetSpeciesPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AdministrableProductDefinitionRouteOfAdministrationTargetSpecies'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinitionRouteOfAdministrationTargetSpecies'+v(xv), 'withdrawalPeriod', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineAdministrableProductDefinitionRouteOfAdministrationTargetSpeciesJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AdministrableProductDefinitionRouteOfAdministrationTargetSpecies'+v(xv), nil, js.FHIRFactoryJs);
  defineAdministrableProductDefinitionRouteOfAdministrationTargetSpeciesPropsJs(js, def, xv);
end;

procedure defineAdministrableProductDefinitionRouteOfAdministrationTargetSpeciesWithdrawalPeriodPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AdministrableProductDefinitionRouteOfAdministrationTargetSpeciesWithdrawalPeriod'+v(xv), 'tissue', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinitionRouteOfAdministrationTargetSpeciesWithdrawalPeriod'+v(xv), 'value', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinitionRouteOfAdministrationTargetSpeciesWithdrawalPeriod'+v(xv), 'supportingInformation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineAdministrableProductDefinitionRouteOfAdministrationTargetSpeciesWithdrawalPeriodJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AdministrableProductDefinitionRouteOfAdministrationTargetSpeciesWithdrawalPeriod'+v(xv), nil, js.FHIRFactoryJs);
  defineAdministrableProductDefinitionRouteOfAdministrationTargetSpeciesWithdrawalPeriodPropsJs(js, def, xv);
end;

procedure defineAdministrableProductDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'AdministrableProductDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdministrableProductDefinition'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdministrableProductDefinition'+v(xv), 'administrableDoseForm', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinition'+v(xv), 'unitOfPresentation', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdministrableProductDefinition'+v(xv), 'producedFrom', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdministrableProductDefinition'+v(xv), 'ingredient', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdministrableProductDefinition'+v(xv), 'device', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdministrableProductDefinition'+v(xv), 'property', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdministrableProductDefinition'+v(xv), 'routeOfAdministration', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineAdministrableProductDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AdministrableProductDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineAdministrableProductDefinitionPropsJs(js, def, xv);
end;

procedure defineAdverseEventParticipantPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AdverseEventParticipant'+v(xv), 'function', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEventParticipant'+v(xv), 'actor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineAdverseEventParticipantJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AdverseEventParticipant'+v(xv), nil, js.FHIRFactoryJs);
  defineAdverseEventParticipantPropsJs(js, def, xv);
end;

procedure defineAdverseEventSuspectEntityPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AdverseEventSuspectEntity'+v(xv), 'instanceCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEventSuspectEntity'+v(xv), 'instanceReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEventSuspectEntity'+v(xv), 'causality', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineAdverseEventSuspectEntityJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AdverseEventSuspectEntity'+v(xv), nil, js.FHIRFactoryJs);
  defineAdverseEventSuspectEntityPropsJs(js, def, xv);
end;

procedure defineAdverseEventSuspectEntityCausalityPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AdverseEventSuspectEntityCausality'+v(xv), 'assessmentMethod', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEventSuspectEntityCausality'+v(xv), 'entityRelatedness', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEventSuspectEntityCausality'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineAdverseEventSuspectEntityCausalityJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AdverseEventSuspectEntityCausality'+v(xv), nil, js.FHIRFactoryJs);
  defineAdverseEventSuspectEntityCausalityPropsJs(js, def, xv);
end;

procedure defineAdverseEventContributingFactorPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AdverseEventContributingFactor'+v(xv), 'itemReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEventContributingFactor'+v(xv), 'itemCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineAdverseEventContributingFactorJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AdverseEventContributingFactor'+v(xv), nil, js.FHIRFactoryJs);
  defineAdverseEventContributingFactorPropsJs(js, def, xv);
end;

procedure defineAdverseEventPreventiveActionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AdverseEventPreventiveAction'+v(xv), 'itemReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEventPreventiveAction'+v(xv), 'itemCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineAdverseEventPreventiveActionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AdverseEventPreventiveAction'+v(xv), nil, js.FHIRFactoryJs);
  defineAdverseEventPreventiveActionPropsJs(js, def, xv);
end;

procedure defineAdverseEventMitigatingActionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AdverseEventMitigatingAction'+v(xv), 'itemReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEventMitigatingAction'+v(xv), 'itemCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineAdverseEventMitigatingActionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AdverseEventMitigatingAction'+v(xv), nil, js.FHIRFactoryJs);
  defineAdverseEventMitigatingActionPropsJs(js, def, xv);
end;

procedure defineAdverseEventSupportingInfoPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AdverseEventSupportingInfo'+v(xv), 'itemReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEventSupportingInfo'+v(xv), 'itemCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineAdverseEventSupportingInfoJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AdverseEventSupportingInfo'+v(xv), nil, js.FHIRFactoryJs);
  defineAdverseEventSupportingInfoPropsJs(js, def, xv);
end;

procedure defineAdverseEventPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'actuality', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'occurrenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'occurrencePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'occurrenceTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'detected', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'recordedDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'resultingCondition', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'seriousness', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'outcome', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'recorder', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'participant', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'suspectEntity', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'contributingFactor', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'preventiveAction', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'mitigatingAction', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'supportingInfo', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AdverseEvent'+v(xv), 'study', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineAdverseEventJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AdverseEvent'+v(xv), nil, js.FHIRFactoryJs);
  defineAdverseEventPropsJs(js, def, xv);
end;

procedure defineAllergyIntoleranceReactionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AllergyIntoleranceReaction'+v(xv), 'substance', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AllergyIntoleranceReaction'+v(xv), 'manifestation', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AllergyIntoleranceReaction'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AllergyIntoleranceReaction'+v(xv), 'onset', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'AllergyIntoleranceReaction'+v(xv), 'severity', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AllergyIntoleranceReaction'+v(xv), 'exposureRoute', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AllergyIntoleranceReaction'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineAllergyIntoleranceReactionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AllergyIntoleranceReaction'+v(xv), nil, js.FHIRFactoryJs);
  defineAllergyIntoleranceReactionPropsJs(js, def, xv);
end;

procedure defineAllergyIntolerancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'clinicalStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'verificationStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'criticality', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'onsetDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'onsetAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'onsetPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'onsetRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'onsetString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'recordedDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'recorder', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'asserter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'lastOccurrence', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AllergyIntolerance'+v(xv), 'reaction', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineAllergyIntoleranceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AllergyIntolerance'+v(xv), nil, js.FHIRFactoryJs);
  defineAllergyIntolerancePropsJs(js, def, xv);
end;

procedure defineAppointmentParticipantPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AppointmentParticipant'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AppointmentParticipant'+v(xv), 'actor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AppointmentParticipant'+v(xv), 'required', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AppointmentParticipant'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AppointmentParticipant'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineAppointmentParticipantJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AppointmentParticipant'+v(xv), nil, js.FHIRFactoryJs);
  defineAppointmentParticipantPropsJs(js, def, xv);
end;

procedure defineAppointmentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Appointment'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Appointment'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Appointment'+v(xv), 'cancelationReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Appointment'+v(xv), 'serviceCategory', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Appointment'+v(xv), 'serviceType', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Appointment'+v(xv), 'specialty', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Appointment'+v(xv), 'appointmentType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Appointment'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Appointment'+v(xv), 'priority', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Appointment'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Appointment'+v(xv), 'supportingInformation', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Appointment'+v(xv), 'start', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Appointment'+v(xv), 'end_', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Appointment'+v(xv), 'minutesDuration', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'Appointment'+v(xv), 'slot', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Appointment'+v(xv), 'created', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Appointment'+v(xv), 'comment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Appointment'+v(xv), 'patientInstruction', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Appointment'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Appointment'+v(xv), 'participant', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Appointment'+v(xv), 'requestedPeriod', 'Period'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineAppointmentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Appointment'+v(xv), nil, js.FHIRFactoryJs);
  defineAppointmentPropsJs(js, def, xv);
end;

procedure defineAppointmentResponsePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'AppointmentResponse'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AppointmentResponse'+v(xv), 'appointment', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AppointmentResponse'+v(xv), 'start', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'AppointmentResponse'+v(xv), 'end_', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'AppointmentResponse'+v(xv), 'participantType', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AppointmentResponse'+v(xv), 'actor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AppointmentResponse'+v(xv), 'participantStatus', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AppointmentResponse'+v(xv), 'comment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineAppointmentResponseJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AppointmentResponse'+v(xv), nil, js.FHIRFactoryJs);
  defineAppointmentResponsePropsJs(js, def, xv);
end;

procedure defineAuditEventAgentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AuditEventAgent'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEventAgent'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AuditEventAgent'+v(xv), 'who', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEventAgent'+v(xv), 'altId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AuditEventAgent'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AuditEventAgent'+v(xv), 'requestor', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'AuditEventAgent'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEventAgent'+v(xv), 'media', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEventAgent'+v(xv), 'network', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEventAgent'+v(xv), 'purposeOfUse', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineAuditEventAgentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AuditEventAgent'+v(xv), nil, js.FHIRFactoryJs);
  defineAuditEventAgentPropsJs(js, def, xv);
end;

procedure defineAuditEventAgentNetworkPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AuditEventAgentNetwork'+v(xv), 'address', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AuditEventAgentNetwork'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineAuditEventAgentNetworkJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AuditEventAgentNetwork'+v(xv), nil, js.FHIRFactoryJs);
  defineAuditEventAgentNetworkPropsJs(js, def, xv);
end;

procedure defineAuditEventSourcePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AuditEventSource'+v(xv), 'site', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AuditEventSource'+v(xv), 'observer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEventSource'+v(xv), 'type', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineAuditEventSourceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AuditEventSource'+v(xv), nil, js.FHIRFactoryJs);
  defineAuditEventSourcePropsJs(js, def, xv);
end;

procedure defineAuditEventEntityPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AuditEventEntity'+v(xv), 'what', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEventEntity'+v(xv), 'type', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEventEntity'+v(xv), 'role', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEventEntity'+v(xv), 'lifecycle', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEventEntity'+v(xv), 'securityLabel', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AuditEventEntity'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AuditEventEntity'+v(xv), 'query', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'AuditEventEntity'+v(xv), 'detail', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineAuditEventEntityJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AuditEventEntity'+v(xv), nil, js.FHIRFactoryJs);
  defineAuditEventEntityPropsJs(js, def, xv);
end;

procedure defineAuditEventEntityDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'AuditEventEntityDetail'+v(xv), 'type_', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AuditEventEntityDetail'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AuditEventEntityDetail'+v(xv), 'valueBase64Binary', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
end;

procedure defineAuditEventEntityDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AuditEventEntityDetail'+v(xv), nil, js.FHIRFactoryJs);
  defineAuditEventEntityDetailPropsJs(js, def, xv);
end;

procedure defineAuditEventPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'AuditEvent'+v(xv), 'type', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEvent'+v(xv), 'subtype', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AuditEvent'+v(xv), 'action', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AuditEvent'+v(xv), 'severity', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'AuditEvent'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEvent'+v(xv), 'recorded', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'AuditEvent'+v(xv), 'outcome', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEvent'+v(xv), 'purposeOfEvent', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AuditEvent'+v(xv), 'agent', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'AuditEvent'+v(xv), 'source', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'AuditEvent'+v(xv), 'entity', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineAuditEventJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('AuditEvent'+v(xv), nil, js.FHIRFactoryJs);
  defineAuditEventPropsJs(js, def, xv);
end;

procedure defineBasicPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Basic'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Basic'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Basic'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Basic'+v(xv), 'created', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Basic'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineBasicJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Basic'+v(xv), nil, js.FHIRFactoryJs);
  defineBasicPropsJs(js, def, xv);
end;

procedure defineBinaryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Binary'+v(xv), 'contentType', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Binary'+v(xv), 'securityContext', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Binary'+v(xv), 'data', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
end;

procedure defineBinaryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Binary'+v(xv), nil, js.FHIRFactoryJs);
  defineBinaryPropsJs(js, def, xv);
end;

procedure defineBiologicallyDerivedProductCollectionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'BiologicallyDerivedProductCollection'+v(xv), 'collector', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'BiologicallyDerivedProductCollection'+v(xv), 'source', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'BiologicallyDerivedProductCollection'+v(xv), 'collectedDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'BiologicallyDerivedProductCollection'+v(xv), 'collectedPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineBiologicallyDerivedProductCollectionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('BiologicallyDerivedProductCollection'+v(xv), nil, js.FHIRFactoryJs);
  defineBiologicallyDerivedProductCollectionPropsJs(js, def, xv);
end;

procedure defineBiologicallyDerivedProductProcessingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'BiologicallyDerivedProductProcessing'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BiologicallyDerivedProductProcessing'+v(xv), 'procedure', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'BiologicallyDerivedProductProcessing'+v(xv), 'additive', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'BiologicallyDerivedProductProcessing'+v(xv), 'timeDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'BiologicallyDerivedProductProcessing'+v(xv), 'timePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineBiologicallyDerivedProductProcessingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('BiologicallyDerivedProductProcessing'+v(xv), nil, js.FHIRFactoryJs);
  defineBiologicallyDerivedProductProcessingPropsJs(js, def, xv);
end;

procedure defineBiologicallyDerivedProductManipulationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'BiologicallyDerivedProductManipulation'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BiologicallyDerivedProductManipulation'+v(xv), 'timeDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'BiologicallyDerivedProductManipulation'+v(xv), 'timePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineBiologicallyDerivedProductManipulationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('BiologicallyDerivedProductManipulation'+v(xv), nil, js.FHIRFactoryJs);
  defineBiologicallyDerivedProductManipulationPropsJs(js, def, xv);
end;

procedure defineBiologicallyDerivedProductStoragePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'BiologicallyDerivedProductStorage'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BiologicallyDerivedProductStorage'+v(xv), 'temperature', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'BiologicallyDerivedProductStorage'+v(xv), 'scale', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BiologicallyDerivedProductStorage'+v(xv), 'duration', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineBiologicallyDerivedProductStorageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('BiologicallyDerivedProductStorage'+v(xv), nil, js.FHIRFactoryJs);
  defineBiologicallyDerivedProductStoragePropsJs(js, def, xv);
end;

procedure defineBiologicallyDerivedProductPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'BiologicallyDerivedProduct'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'BiologicallyDerivedProduct'+v(xv), 'productCategory', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BiologicallyDerivedProduct'+v(xv), 'productCode', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'BiologicallyDerivedProduct'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BiologicallyDerivedProduct'+v(xv), 'request', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'BiologicallyDerivedProduct'+v(xv), 'quantity', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'BiologicallyDerivedProduct'+v(xv), 'parent', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'BiologicallyDerivedProduct'+v(xv), 'collection', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'BiologicallyDerivedProduct'+v(xv), 'processing', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'BiologicallyDerivedProduct'+v(xv), 'manipulation', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'BiologicallyDerivedProduct'+v(xv), 'storage', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineBiologicallyDerivedProductJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('BiologicallyDerivedProduct'+v(xv), nil, js.FHIRFactoryJs);
  defineBiologicallyDerivedProductPropsJs(js, def, xv);
end;

procedure defineBodyStructurePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'BodyStructure'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'BodyStructure'+v(xv), 'active', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'BodyStructure'+v(xv), 'morphology', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'BodyStructure'+v(xv), 'location', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'BodyStructure'+v(xv), 'locationQualifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'BodyStructure'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BodyStructure'+v(xv), 'image', 'Attachment'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'BodyStructure'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineBodyStructureJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('BodyStructure'+v(xv), nil, js.FHIRFactoryJs);
  defineBodyStructurePropsJs(js, def, xv);
end;

procedure defineBundleLinkPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'BundleLink'+v(xv), 'relation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BundleLink'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineBundleLinkJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('BundleLink'+v(xv), nil, js.FHIRFactoryJs);
  defineBundleLinkPropsJs(js, def, xv);
end;

procedure defineBundleEntryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'BundleEntry'+v(xv), 'link', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'BundleEntry'+v(xv), 'fullUrl', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BundleEntry'+v(xv), 'resource', 'Resource'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'BundleEntry'+v(xv), 'search', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'BundleEntry'+v(xv), 'request', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'BundleEntry'+v(xv), 'response', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineBundleEntryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('BundleEntry'+v(xv), nil, js.FHIRFactoryJs);
  defineBundleEntryPropsJs(js, def, xv);
end;

procedure defineBundleEntrySearchPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'BundleEntrySearch'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BundleEntrySearch'+v(xv), 'score', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
end;

procedure defineBundleEntrySearchJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('BundleEntrySearch'+v(xv), nil, js.FHIRFactoryJs);
  defineBundleEntrySearchPropsJs(js, def, xv);
end;

procedure defineBundleEntryRequestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'BundleEntryRequest'+v(xv), 'method', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BundleEntryRequest'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BundleEntryRequest'+v(xv), 'ifNoneMatch', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BundleEntryRequest'+v(xv), 'ifModifiedSince', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'BundleEntryRequest'+v(xv), 'ifMatch', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BundleEntryRequest'+v(xv), 'ifNoneExist', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineBundleEntryRequestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('BundleEntryRequest'+v(xv), nil, js.FHIRFactoryJs);
  defineBundleEntryRequestPropsJs(js, def, xv);
end;

procedure defineBundleEntryResponsePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'BundleEntryResponse'+v(xv), 'status', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BundleEntryResponse'+v(xv), 'location', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BundleEntryResponse'+v(xv), 'etag', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'BundleEntryResponse'+v(xv), 'lastModified', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'BundleEntryResponse'+v(xv), 'outcome', 'Resource'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineBundleEntryResponseJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('BundleEntryResponse'+v(xv), nil, js.FHIRFactoryJs);
  defineBundleEntryResponsePropsJs(js, def, xv);
end;

procedure defineBundlePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Bundle'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Bundle'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Bundle'+v(xv), 'timestamp', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Bundle'+v(xv), 'total', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Bundle'+v(xv), 'link', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Bundle'+v(xv), 'entry', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Bundle'+v(xv), 'signature', 'Signature'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineBundleJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Bundle'+v(xv), nil, js.FHIRFactoryJs);
  defineBundlePropsJs(js, def, xv);
end;

procedure defineCapabilityStatementSoftwarePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatementSoftware'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementSoftware'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementSoftware'+v(xv), 'releaseDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineCapabilityStatementSoftwareJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatementSoftware'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementSoftwarePropsJs(js, def, xv);
end;

procedure defineCapabilityStatementImplementationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatementImplementation'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementImplementation'+v(xv), 'url', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementImplementation'+v(xv), 'custodian', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCapabilityStatementImplementationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatementImplementation'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementImplementationPropsJs(js, def, xv);
end;

procedure defineCapabilityStatementRestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatementRest'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRest'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRest'+v(xv), 'security', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CapabilityStatementRest'+v(xv), 'resource', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatementRest'+v(xv), 'interaction', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatementRest'+v(xv), 'searchParam', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatementRest'+v(xv), 'operation', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCapabilityStatementRestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatementRest'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementRestPropsJs(js, def, xv);
end;

procedure defineCapabilityStatementRestSecurityPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatementRestSecurity'+v(xv), 'cors', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CapabilityStatementRestSecurity'+v(xv), 'service', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatementRestSecurity'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCapabilityStatementRestSecurityJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatementRestSecurity'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementRestSecurityPropsJs(js, def, xv);
end;

procedure defineCapabilityStatementRestResourcePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatementRestResource'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRestResource'+v(xv), 'profile', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRestResource'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRestResource'+v(xv), 'interaction', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatementRestResource'+v(xv), 'versioning', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRestResource'+v(xv), 'readHistory', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CapabilityStatementRestResource'+v(xv), 'updateCreate', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CapabilityStatementRestResource'+v(xv), 'conditionalCreate', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CapabilityStatementRestResource'+v(xv), 'conditionalRead', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRestResource'+v(xv), 'conditionalUpdate', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CapabilityStatementRestResource'+v(xv), 'conditionalDelete', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRestResource'+v(xv), 'searchParam', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatementRestResource'+v(xv), 'operation', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCapabilityStatementRestResourceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatementRestResource'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementRestResourcePropsJs(js, def, xv);
end;

procedure defineCapabilityStatementRestResourceInteractionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatementRestResourceInteraction'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRestResourceInteraction'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCapabilityStatementRestResourceInteractionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatementRestResourceInteraction'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementRestResourceInteractionPropsJs(js, def, xv);
end;

procedure defineCapabilityStatementRestResourceSearchParamPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatementRestResourceSearchParam'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRestResourceSearchParam'+v(xv), 'definition', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRestResourceSearchParam'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRestResourceSearchParam'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCapabilityStatementRestResourceSearchParamJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatementRestResourceSearchParam'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementRestResourceSearchParamPropsJs(js, def, xv);
end;

procedure defineCapabilityStatementRestResourceOperationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatementRestResourceOperation'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRestResourceOperation'+v(xv), 'definition', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRestResourceOperation'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCapabilityStatementRestResourceOperationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatementRestResourceOperation'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementRestResourceOperationPropsJs(js, def, xv);
end;

procedure defineCapabilityStatementRestInteractionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatementRestInteraction'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementRestInteraction'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCapabilityStatementRestInteractionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatementRestInteraction'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementRestInteractionPropsJs(js, def, xv);
end;

procedure defineCapabilityStatementMessagingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatementMessaging'+v(xv), 'endpoint', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatementMessaging'+v(xv), 'reliableCache', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementMessaging'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementMessaging'+v(xv), 'supportedMessage', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCapabilityStatementMessagingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatementMessaging'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementMessagingPropsJs(js, def, xv);
end;

procedure defineCapabilityStatementMessagingEndpointPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatementMessagingEndpoint'+v(xv), 'protocol', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CapabilityStatementMessagingEndpoint'+v(xv), 'address', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCapabilityStatementMessagingEndpointJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatementMessagingEndpoint'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementMessagingEndpointPropsJs(js, def, xv);
end;

procedure defineCapabilityStatementMessagingSupportedMessagePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatementMessagingSupportedMessage'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementMessagingSupportedMessage'+v(xv), 'definition', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCapabilityStatementMessagingSupportedMessageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatementMessagingSupportedMessage'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementMessagingSupportedMessagePropsJs(js, def, xv);
end;

procedure defineCapabilityStatementDocumentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatementDocument'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementDocument'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatementDocument'+v(xv), 'profile', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCapabilityStatementDocumentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatementDocument'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementDocumentPropsJs(js, def, xv);
end;

procedure defineCapabilityStatementPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'kind', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'software', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'implementation', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'fhirVersion', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'rest', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'messaging', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatement'+v(xv), 'document', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCapabilityStatementJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatement'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatementPropsJs(js, def, xv);
end;

procedure defineCapabilityStatement2SoftwarePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatement2Software'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2Software'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2Software'+v(xv), 'releaseDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineCapabilityStatement2SoftwareJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatement2Software'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatement2SoftwarePropsJs(js, def, xv);
end;

procedure defineCapabilityStatement2ImplementationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatement2Implementation'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2Implementation'+v(xv), 'url', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2Implementation'+v(xv), 'custodian', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCapabilityStatement2ImplementationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatement2Implementation'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatement2ImplementationPropsJs(js, def, xv);
end;

procedure defineCapabilityStatement2RestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatement2Rest'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2Rest'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2Rest'+v(xv), 'resource', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatement2Rest'+v(xv), 'interaction', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatement2Rest'+v(xv), 'searchParam', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatement2Rest'+v(xv), 'operation', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCapabilityStatement2RestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatement2Rest'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatement2RestPropsJs(js, def, xv);
end;

procedure defineCapabilityStatement2RestResourcePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatement2RestResource'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2RestResource'+v(xv), 'profile', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2RestResource'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2RestResource'+v(xv), 'interaction', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatement2RestResource'+v(xv), 'searchParam', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatement2RestResource'+v(xv), 'operation', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCapabilityStatement2RestResourceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatement2RestResource'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatement2RestResourcePropsJs(js, def, xv);
end;

procedure defineCapabilityStatement2RestResourceInteractionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatement2RestResourceInteraction'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2RestResourceInteraction'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCapabilityStatement2RestResourceInteractionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatement2RestResourceInteraction'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatement2RestResourceInteractionPropsJs(js, def, xv);
end;

procedure defineCapabilityStatement2RestResourceSearchParamPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatement2RestResourceSearchParam'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2RestResourceSearchParam'+v(xv), 'definition', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2RestResourceSearchParam'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2RestResourceSearchParam'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCapabilityStatement2RestResourceSearchParamJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatement2RestResourceSearchParam'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatement2RestResourceSearchParamPropsJs(js, def, xv);
end;

procedure defineCapabilityStatement2RestResourceOperationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatement2RestResourceOperation'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2RestResourceOperation'+v(xv), 'definition', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2RestResourceOperation'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCapabilityStatement2RestResourceOperationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatement2RestResourceOperation'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatement2RestResourceOperationPropsJs(js, def, xv);
end;

procedure defineCapabilityStatement2RestInteractionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatement2RestInteraction'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2RestInteraction'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCapabilityStatement2RestInteractionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatement2RestInteraction'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatement2RestInteractionPropsJs(js, def, xv);
end;

procedure defineCapabilityStatement2PropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'kind', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'software', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'implementation', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'fhirVersion', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CapabilityStatement2'+v(xv), 'rest', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCapabilityStatement2Js(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CapabilityStatement2'+v(xv), nil, js.FHIRFactoryJs);
  defineCapabilityStatement2PropsJs(js, def, xv);
end;

procedure defineCarePlanActivityPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CarePlanActivity'+v(xv), 'outcome', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlanActivity'+v(xv), 'progress', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlanActivity'+v(xv), 'reference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlanActivity'+v(xv), 'detail', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCarePlanActivityJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CarePlanActivity'+v(xv), nil, js.FHIRFactoryJs);
  defineCarePlanActivityPropsJs(js, def, xv);
end;

procedure defineCarePlanActivityDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'kind', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'goal', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'statusReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'doNotPerform', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'scheduledTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'scheduledPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'scheduledString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'location', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'reportedBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'reportedReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'performer', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'productCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'productReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'dailyAmount', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlanActivityDetail'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCarePlanActivityDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CarePlanActivityDetail'+v(xv), nil, js.FHIRFactoryJs);
  defineCarePlanActivityDetailPropsJs(js, def, xv);
end;

procedure defineCarePlanPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'CarePlan'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'replaces', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'intent', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'created', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'contributor', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'careTeam', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'addresses', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'supportingInfo', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'goal', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'activity', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CarePlan'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCarePlanJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CarePlan'+v(xv), nil, js.FHIRFactoryJs);
  defineCarePlanPropsJs(js, def, xv);
end;

procedure defineCareTeamParticipantPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CareTeamParticipant'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CareTeamParticipant'+v(xv), 'member', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CareTeamParticipant'+v(xv), 'onBehalfOf', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CareTeamParticipant'+v(xv), 'coveragePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CareTeamParticipant'+v(xv), 'coverageTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCareTeamParticipantJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CareTeamParticipant'+v(xv), nil, js.FHIRFactoryJs);
  defineCareTeamParticipantPropsJs(js, def, xv);
end;

procedure defineCareTeamPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'CareTeam'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CareTeam'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CareTeam'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CareTeam'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CareTeam'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CareTeam'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CareTeam'+v(xv), 'participant', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CareTeam'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CareTeam'+v(xv), 'managingOrganization', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CareTeam'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CareTeam'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCareTeamJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CareTeam'+v(xv), nil, js.FHIRFactoryJs);
  defineCareTeamPropsJs(js, def, xv);
end;

procedure defineCatalogEntryRelatedEntryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CatalogEntryRelatedEntry'+v(xv), 'relationship', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CatalogEntryRelatedEntry'+v(xv), 'target', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCatalogEntryRelatedEntryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CatalogEntryRelatedEntry'+v(xv), nil, js.FHIRFactoryJs);
  defineCatalogEntryRelatedEntryPropsJs(js, def, xv);
end;

procedure defineCatalogEntryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'orderable', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'referencedItem', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'relatedEntry', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'updatedBy', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'estimatedDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'billingCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'billingSummary', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'scheduleSummary', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'limitationSummary', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CatalogEntry'+v(xv), 'regulatorySummary', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCatalogEntryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CatalogEntry'+v(xv), nil, js.FHIRFactoryJs);
  defineCatalogEntryPropsJs(js, def, xv);
end;

procedure defineChargeItemPerformerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ChargeItemPerformer'+v(xv), 'function', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItemPerformer'+v(xv), 'actor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineChargeItemPerformerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ChargeItemPerformer'+v(xv), nil, js.FHIRFactoryJs);
  defineChargeItemPerformerPropsJs(js, def, xv);
end;

procedure defineChargeItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ChargeItem'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'context', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'occurrenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'occurrencePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'occurrenceTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'performer', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'performingOrganization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'requestingOrganization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'costCenter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'bodysite', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'factorOverride', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'priceOverride', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'overrideReason', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'enterer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'enteredDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'reason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'service', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'productReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'productCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'account', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItem'+v(xv), 'supportingInformation', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineChargeItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ChargeItem'+v(xv), nil, js.FHIRFactoryJs);
  defineChargeItemPropsJs(js, def, xv);
end;

procedure defineChargeItemDefinitionApplicabilityPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ChargeItemDefinitionApplicability'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ChargeItemDefinitionApplicability'+v(xv), 'language', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ChargeItemDefinitionApplicability'+v(xv), 'expression', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineChargeItemDefinitionApplicabilityJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ChargeItemDefinitionApplicability'+v(xv), nil, js.FHIRFactoryJs);
  defineChargeItemDefinitionApplicabilityPropsJs(js, def, xv);
end;

procedure defineChargeItemDefinitionPropertyGroupPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ChargeItemDefinitionPropertyGroup'+v(xv), 'applicability', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItemDefinitionPropertyGroup'+v(xv), 'priceComponent', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineChargeItemDefinitionPropertyGroupJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ChargeItemDefinitionPropertyGroup'+v(xv), nil, js.FHIRFactoryJs);
  defineChargeItemDefinitionPropertyGroupPropsJs(js, def, xv);
end;

procedure defineChargeItemDefinitionPropertyGroupPriceComponentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ChargeItemDefinitionPropertyGroupPriceComponent'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ChargeItemDefinitionPropertyGroupPriceComponent'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItemDefinitionPropertyGroupPriceComponent'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ChargeItemDefinitionPropertyGroupPriceComponent'+v(xv), 'amount', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineChargeItemDefinitionPropertyGroupPriceComponentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ChargeItemDefinitionPropertyGroupPriceComponent'+v(xv), nil, js.FHIRFactoryJs);
  defineChargeItemDefinitionPropertyGroupPriceComponentPropsJs(js, def, xv);
end;

procedure defineChargeItemDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineMetadataResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'approvalDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'lastReviewDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'instance', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'applicability', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ChargeItemDefinition'+v(xv), 'propertyGroup', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineChargeItemDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ChargeItemDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineChargeItemDefinitionPropsJs(js, def, xv);
end;

procedure defineCitationSummaryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationSummary'+v(xv), 'style', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationSummary'+v(xv), 'text', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCitationSummaryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationSummary'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationSummaryPropsJs(js, def, xv);
end;

procedure defineCitationVariantCitationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationVariantCitation'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationVariantCitation'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationVariantCitation'+v(xv), 'baseCitation', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCitationVariantCitationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationVariantCitation'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationVariantCitationPropsJs(js, def, xv);
end;

procedure defineCitationJournalPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationJournal'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CitationJournal'+v(xv), 'country', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationJournal'+v(xv), 'journalIssue', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationJournal'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCitationJournalJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationJournal'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationJournalPropsJs(js, def, xv);
end;

procedure defineCitationJournalJournalIssuePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationJournalJournalIssue'+v(xv), 'citedMedium', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationJournalJournalIssue'+v(xv), 'volume', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationJournalJournalIssue'+v(xv), 'issue', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationJournalJournalIssue'+v(xv), 'publicationDate', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCitationJournalJournalIssueJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationJournalJournalIssue'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationJournalJournalIssuePropsJs(js, def, xv);
end;

procedure defineCitationJournalJournalIssuePublicationDatePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationJournalJournalIssuePublicationDate'+v(xv), 'date', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CitationJournalJournalIssuePublicationDate'+v(xv), 'year', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationJournalJournalIssuePublicationDate'+v(xv), 'month', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationJournalJournalIssuePublicationDate'+v(xv), 'day', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationJournalJournalIssuePublicationDate'+v(xv), 'season', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationJournalJournalIssuePublicationDate'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCitationJournalJournalIssuePublicationDateJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationJournalJournalIssuePublicationDate'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationJournalJournalIssuePublicationDatePropsJs(js, def, xv);
end;

procedure defineCitationPublicationInfoPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationPublicationInfo'+v(xv), 'publishedIn', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationPublicationInfo'+v(xv), 'entryDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CitationPublicationInfo'+v(xv), 'revisionDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CitationPublicationInfo'+v(xv), 'pageCount', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCitationPublicationInfoJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationPublicationInfo'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationPublicationInfoPropsJs(js, def, xv);
end;

procedure defineCitationPublicationInfoPublishedInPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationPublicationInfoPublishedIn'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationPublicationInfoPublishedIn'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CitationPublicationInfoPublishedIn'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationPublicationInfoPublishedIn'+v(xv), 'publisher', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationPublicationInfoPublishedIn'+v(xv), 'publisherLocation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationPublicationInfoPublishedIn'+v(xv), 'startDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineCitationPublicationInfoPublishedInJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationPublicationInfoPublishedIn'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationPublicationInfoPublishedInPropsJs(js, def, xv);
end;

procedure defineCitationAlternativeTitlePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationAlternativeTitle'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationAlternativeTitle'+v(xv), 'language', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationAlternativeTitle'+v(xv), 'title', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCitationAlternativeTitleJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationAlternativeTitle'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationAlternativeTitlePropsJs(js, def, xv);
end;

procedure defineCitationPaginationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationPagination'+v(xv), 'pageString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationPagination'+v(xv), 'firstPage', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationPagination'+v(xv), 'lastPage', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCitationPaginationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationPagination'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationPaginationPropsJs(js, def, xv);
end;

procedure defineCitationArticleUrlPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationArticleUrl'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationArticleUrl'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCitationArticleUrlJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationArticleUrl'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationArticleUrlPropsJs(js, def, xv);
end;

procedure defineCitationAlternativeAbstractPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationAlternativeAbstract'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationAlternativeAbstract'+v(xv), 'language', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationAlternativeAbstract'+v(xv), 'abstract', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationAlternativeAbstract'+v(xv), 'abstractCopyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCitationAlternativeAbstractJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationAlternativeAbstract'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationAlternativeAbstractPropsJs(js, def, xv);
end;

procedure defineCitationContributorshipPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationContributorship'+v(xv), 'complete', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CitationContributorship'+v(xv), 'entry', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CitationContributorship'+v(xv), 'summary', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCitationContributorshipJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationContributorship'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationContributorshipPropsJs(js, def, xv);
end;

procedure defineCitationContributorshipEntryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationContributorshipEntry'+v(xv), 'name', 'HumanName'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationContributorshipEntry'+v(xv), 'initials', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationContributorshipEntry'+v(xv), 'collectiveName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationContributorshipEntry'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CitationContributorshipEntry'+v(xv), 'affiliationInfo', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CitationContributorshipEntry'+v(xv), 'address', 'Address'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CitationContributorshipEntry'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CitationContributorshipEntry'+v(xv), 'contribution', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CitationContributorshipEntry'+v(xv), 'notAnAuthor', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CitationContributorshipEntry'+v(xv), 'correspondingAuthor', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CitationContributorshipEntry'+v(xv), 'listOrder', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
end;

procedure defineCitationContributorshipEntryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationContributorshipEntry'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationContributorshipEntryPropsJs(js, def, xv);
end;

procedure defineCitationContributorshipEntryAffiliationInfoPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationContributorshipEntryAffiliationInfo'+v(xv), 'affiliation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationContributorshipEntryAffiliationInfo'+v(xv), 'role', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationContributorshipEntryAffiliationInfo'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCitationContributorshipEntryAffiliationInfoJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationContributorshipEntryAffiliationInfo'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationContributorshipEntryAffiliationInfoPropsJs(js, def, xv);
end;

procedure defineCitationContributorshipSummaryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationContributorshipSummary'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationContributorshipSummary'+v(xv), 'style', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationContributorshipSummary'+v(xv), 'source', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationContributorshipSummary'+v(xv), 'value', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCitationContributorshipSummaryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationContributorshipSummary'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationContributorshipSummaryPropsJs(js, def, xv);
end;

procedure defineCitationAlternativeFormPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationAlternativeForm'+v(xv), 'publishingModel', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationAlternativeForm'+v(xv), 'language', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationAlternativeForm'+v(xv), 'journalIssue', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationAlternativeForm'+v(xv), 'pagination', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationAlternativeForm'+v(xv), 'publicationInfo', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCitationAlternativeFormJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationAlternativeForm'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationAlternativeFormPropsJs(js, def, xv);
end;

procedure defineCitationAlternativeFormJournalIssuePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationAlternativeFormJournalIssue'+v(xv), 'citedMedium', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationAlternativeFormJournalIssue'+v(xv), 'volume', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationAlternativeFormJournalIssue'+v(xv), 'issue', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationAlternativeFormJournalIssue'+v(xv), 'publicationDate', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCitationAlternativeFormJournalIssueJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationAlternativeFormJournalIssue'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationAlternativeFormJournalIssuePropsJs(js, def, xv);
end;

procedure defineCitationAlternativeFormJournalIssuePublicationDatePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationAlternativeFormJournalIssuePublicationDate'+v(xv), 'date', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CitationAlternativeFormJournalIssuePublicationDate'+v(xv), 'year', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationAlternativeFormJournalIssuePublicationDate'+v(xv), 'month', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationAlternativeFormJournalIssuePublicationDate'+v(xv), 'day', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationAlternativeFormJournalIssuePublicationDate'+v(xv), 'season', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationAlternativeFormJournalIssuePublicationDate'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCitationAlternativeFormJournalIssuePublicationDateJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationAlternativeFormJournalIssuePublicationDate'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationAlternativeFormJournalIssuePublicationDatePropsJs(js, def, xv);
end;

procedure defineCitationAlternativeFormPaginationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationAlternativeFormPagination'+v(xv), 'pageString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationAlternativeFormPagination'+v(xv), 'firstPage', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationAlternativeFormPagination'+v(xv), 'lastPage', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCitationAlternativeFormPaginationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationAlternativeFormPagination'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationAlternativeFormPaginationPropsJs(js, def, xv);
end;

procedure defineCitationAlternativeFormPublicationInfoPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationAlternativeFormPublicationInfo'+v(xv), 'publishedIn', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationAlternativeFormPublicationInfo'+v(xv), 'entryDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CitationAlternativeFormPublicationInfo'+v(xv), 'revisionDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CitationAlternativeFormPublicationInfo'+v(xv), 'pageCount', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCitationAlternativeFormPublicationInfoJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationAlternativeFormPublicationInfo'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationAlternativeFormPublicationInfoPropsJs(js, def, xv);
end;

procedure defineCitationAlternativeFormPublicationInfoPublishedInPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationAlternativeFormPublicationInfoPublishedIn'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationAlternativeFormPublicationInfoPublishedIn'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationAlternativeFormPublicationInfoPublishedIn'+v(xv), 'publisher', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationAlternativeFormPublicationInfoPublishedIn'+v(xv), 'publisherLocation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationAlternativeFormPublicationInfoPublishedIn'+v(xv), 'startDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineCitationAlternativeFormPublicationInfoPublishedInJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationAlternativeFormPublicationInfoPublishedIn'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationAlternativeFormPublicationInfoPublishedInPropsJs(js, def, xv);
end;

procedure defineCitationKeywordListPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationKeywordList'+v(xv), 'owner', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationKeywordList'+v(xv), 'keyword', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCitationKeywordListJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationKeywordList'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationKeywordListPropsJs(js, def, xv);
end;

procedure defineCitationKeywordListKeywordPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationKeywordListKeyword'+v(xv), 'majorTopic', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CitationKeywordListKeyword'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCitationKeywordListKeywordJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationKeywordListKeyword'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationKeywordListKeywordPropsJs(js, def, xv);
end;

procedure defineCitationMedlinePubMedPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationMedlinePubMed'+v(xv), 'medlineState', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationMedlinePubMed'+v(xv), 'owner', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationMedlinePubMed'+v(xv), 'pmid', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'CitationMedlinePubMed'+v(xv), 'pmidVersion', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'CitationMedlinePubMed'+v(xv), 'dateCreated', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CitationMedlinePubMed'+v(xv), 'dateCompleted', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CitationMedlinePubMed'+v(xv), 'dateRevised', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CitationMedlinePubMed'+v(xv), 'pubMedPubDate', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CitationMedlinePubMed'+v(xv), 'publicationState', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationMedlinePubMed'+v(xv), 'relatedArticle', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCitationMedlinePubMedJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationMedlinePubMed'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationMedlinePubMedPropsJs(js, def, xv);
end;

procedure defineCitationMedlinePubMedPubMedPubDatePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationMedlinePubMedPubMedPubDate'+v(xv), 'publicationState', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationMedlinePubMedPubMedPubDate'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineCitationMedlinePubMedPubMedPubDateJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationMedlinePubMedPubMedPubDate'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationMedlinePubMedPubMedPubDatePropsJs(js, def, xv);
end;

procedure defineCitationMedlinePubMedRelatedArticlePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CitationMedlinePubMedRelatedArticle'+v(xv), 'citationReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CitationMedlinePubMedRelatedArticle'+v(xv), 'citationMarkdown', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CitationMedlinePubMedRelatedArticle'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCitationMedlinePubMedRelatedArticleJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CitationMedlinePubMedRelatedArticle'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationMedlinePubMedRelatedArticlePropsJs(js, def, xv);
end;

procedure defineCitationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineMetadataResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Citation'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Citation'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Citation'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Citation'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Citation'+v(xv), 'relatedIdentifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Citation'+v(xv), 'summary', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Citation'+v(xv), 'dateCited', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Citation'+v(xv), 'variantCitation', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Citation'+v(xv), 'publishingModel', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Citation'+v(xv), 'journal', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Citation'+v(xv), 'publicationInfo', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Citation'+v(xv), 'articleTitle', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Citation'+v(xv), 'alternativeTitle', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Citation'+v(xv), 'pagination', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Citation'+v(xv), 'articleUrl', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Citation'+v(xv), 'abstract', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Citation'+v(xv), 'abstractCopyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Citation'+v(xv), 'alternativeAbstract', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Citation'+v(xv), 'contributorship', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Citation'+v(xv), 'articleLanguage', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Citation'+v(xv), 'alternativeForm', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Citation'+v(xv), 'classifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Citation'+v(xv), 'keywordList', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Citation'+v(xv), 'relatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Citation'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Citation'+v(xv), 'medlinePubMed', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCitationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Citation'+v(xv), nil, js.FHIRFactoryJs);
  defineCitationPropsJs(js, def, xv);
end;

procedure defineClaimRelatedPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimRelated'+v(xv), 'claim', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimRelated'+v(xv), 'relationship', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimRelated'+v(xv), 'reference', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClaimRelatedJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimRelated'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimRelatedPropsJs(js, def, xv);
end;

procedure defineClaimPayeePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimPayee'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimPayee'+v(xv), 'party', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClaimPayeeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimPayee'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimPayeePropsJs(js, def, xv);
end;

procedure defineClaimCareTeamPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimCareTeam'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimCareTeam'+v(xv), 'provider', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimCareTeam'+v(xv), 'responsible', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ClaimCareTeam'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimCareTeam'+v(xv), 'qualification', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClaimCareTeamJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimCareTeam'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimCareTeamPropsJs(js, def, xv);
end;

procedure defineClaimSupportingInfoPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimSupportingInfo'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimSupportingInfo'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimSupportingInfo'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimSupportingInfo'+v(xv), 'timingDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ClaimSupportingInfo'+v(xv), 'timingPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimSupportingInfo'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ClaimSupportingInfo'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClaimSupportingInfo'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimSupportingInfo'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimSupportingInfo'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimSupportingInfo'+v(xv), 'reason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClaimSupportingInfoJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimSupportingInfo'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimSupportingInfoPropsJs(js, def, xv);
end;

procedure defineClaimDiagnosisPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimDiagnosis'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimDiagnosis'+v(xv), 'diagnosisCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimDiagnosis'+v(xv), 'diagnosisReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimDiagnosis'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimDiagnosis'+v(xv), 'onAdmission', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimDiagnosis'+v(xv), 'packageCode', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClaimDiagnosisJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimDiagnosis'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimDiagnosisPropsJs(js, def, xv);
end;

procedure defineClaimProcedurePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimProcedure'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimProcedure'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimProcedure'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ClaimProcedure'+v(xv), 'procedureCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimProcedure'+v(xv), 'procedureReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimProcedure'+v(xv), 'udi', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClaimProcedureJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimProcedure'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimProcedurePropsJs(js, def, xv);
end;

procedure defineClaimInsurancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimInsurance'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimInsurance'+v(xv), 'focal', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ClaimInsurance'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimInsurance'+v(xv), 'coverage', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimInsurance'+v(xv), 'businessArrangement', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClaimInsurance'+v(xv), 'claimResponse', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClaimInsuranceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimInsurance'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimInsurancePropsJs(js, def, xv);
end;

procedure defineClaimAccidentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimAccident'+v(xv), 'date', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ClaimAccident'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimAccident'+v(xv), 'locationAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimAccident'+v(xv), 'locationReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClaimAccidentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimAccident'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimAccidentPropsJs(js, def, xv);
end;

procedure defineClaimItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimItem'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'revenue', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'programCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'servicedDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'servicedPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'locationCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'locationAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'locationReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'net', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'udi', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'bodySite', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'subSite', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimItem'+v(xv), 'detail', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClaimItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimItem'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimItemPropsJs(js, def, xv);
end;

procedure defineClaimItemDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimItemDetail'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimItemDetail'+v(xv), 'revenue', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItemDetail'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItemDetail'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItemDetail'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimItemDetail'+v(xv), 'programCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimItemDetail'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItemDetail'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItemDetail'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ClaimItemDetail'+v(xv), 'net', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItemDetail'+v(xv), 'udi', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimItemDetail'+v(xv), 'subDetail', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClaimItemDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimItemDetail'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimItemDetailPropsJs(js, def, xv);
end;

procedure defineClaimItemDetailSubDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimItemDetailSubDetail'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimItemDetailSubDetail'+v(xv), 'revenue', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItemDetailSubDetail'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItemDetailSubDetail'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItemDetailSubDetail'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimItemDetailSubDetail'+v(xv), 'programCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimItemDetailSubDetail'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItemDetailSubDetail'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItemDetailSubDetail'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ClaimItemDetailSubDetail'+v(xv), 'net', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimItemDetailSubDetail'+v(xv), 'udi', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClaimItemDetailSubDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimItemDetailSubDetail'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimItemDetailSubDetailPropsJs(js, def, xv);
end;

procedure defineClaimPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Claim'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Claim'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Claim'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'subType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'use', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Claim'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'billablePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'created', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Claim'+v(xv), 'enterer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'insurer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'provider', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'priority', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'fundsReserve', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'related', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Claim'+v(xv), 'prescription', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'originalPrescription', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'payee', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'referral', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'facility', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'careTeam', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Claim'+v(xv), 'supportingInfo', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Claim'+v(xv), 'diagnosis', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Claim'+v(xv), 'procedure', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Claim'+v(xv), 'insurance', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Claim'+v(xv), 'accident', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Claim'+v(xv), 'item', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Claim'+v(xv), 'total', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClaimJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Claim'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimPropsJs(js, def, xv);
end;

procedure defineClaimResponseItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimResponseItem'+v(xv), 'itemSequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimResponseItem'+v(xv), 'adjudication', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponseItem'+v(xv), 'detail', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClaimResponseItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimResponseItem'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimResponseItemPropsJs(js, def, xv);
end;

procedure defineClaimResponseItemAdjudicationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimResponseItemAdjudication'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseItemAdjudication'+v(xv), 'reason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseItemAdjudication'+v(xv), 'amount', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseItemAdjudication'+v(xv), 'value', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
end;

procedure defineClaimResponseItemAdjudicationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimResponseItemAdjudication'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimResponseItemAdjudicationPropsJs(js, def, xv);
end;

procedure defineClaimResponseItemDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimResponseItemDetail'+v(xv), 'detailSequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimResponseItemDetail'+v(xv), 'adjudication', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponseItemDetail'+v(xv), 'subDetail', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClaimResponseItemDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimResponseItemDetail'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimResponseItemDetailPropsJs(js, def, xv);
end;

procedure defineClaimResponseItemDetailSubDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimResponseItemDetailSubDetail'+v(xv), 'subDetailSequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimResponseItemDetailSubDetail'+v(xv), 'adjudication', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClaimResponseItemDetailSubDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimResponseItemDetailSubDetail'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimResponseItemDetailSubDetailPropsJs(js, def, xv);
end;

procedure defineClaimResponseAddItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'provider', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'programCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'servicedDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'servicedPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'locationCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'locationAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'locationReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'net', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'bodySite', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'subSite', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'adjudication', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponseAddItem'+v(xv), 'detail', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClaimResponseAddItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimResponseAddItem'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimResponseAddItemPropsJs(js, def, xv);
end;

procedure defineClaimResponseAddItemDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimResponseAddItemDetail'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItemDetail'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponseAddItemDetail'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItemDetail'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItemDetail'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ClaimResponseAddItemDetail'+v(xv), 'net', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItemDetail'+v(xv), 'adjudication', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponseAddItemDetail'+v(xv), 'subDetail', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClaimResponseAddItemDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimResponseAddItemDetail'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimResponseAddItemDetailPropsJs(js, def, xv);
end;

procedure defineClaimResponseAddItemDetailSubDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimResponseAddItemDetailSubDetail'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItemDetailSubDetail'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponseAddItemDetailSubDetail'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItemDetailSubDetail'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItemDetailSubDetail'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ClaimResponseAddItemDetailSubDetail'+v(xv), 'net', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseAddItemDetailSubDetail'+v(xv), 'adjudication', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClaimResponseAddItemDetailSubDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimResponseAddItemDetailSubDetail'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimResponseAddItemDetailSubDetailPropsJs(js, def, xv);
end;

procedure defineClaimResponseTotalPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimResponseTotal'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseTotal'+v(xv), 'amount', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClaimResponseTotalJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimResponseTotal'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimResponseTotalPropsJs(js, def, xv);
end;

procedure defineClaimResponsePaymentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimResponsePayment'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponsePayment'+v(xv), 'adjustment', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponsePayment'+v(xv), 'adjustmentReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponsePayment'+v(xv), 'date', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ClaimResponsePayment'+v(xv), 'amount', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponsePayment'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClaimResponsePaymentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimResponsePayment'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimResponsePaymentPropsJs(js, def, xv);
end;

procedure defineClaimResponseProcessNotePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimResponseProcessNote'+v(xv), 'number', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimResponseProcessNote'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClaimResponseProcessNote'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClaimResponseProcessNote'+v(xv), 'language', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClaimResponseProcessNoteJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimResponseProcessNote'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimResponseProcessNotePropsJs(js, def, xv);
end;

procedure defineClaimResponseInsurancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimResponseInsurance'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimResponseInsurance'+v(xv), 'focal', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ClaimResponseInsurance'+v(xv), 'coverage', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponseInsurance'+v(xv), 'businessArrangement', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClaimResponseInsurance'+v(xv), 'claimResponse', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClaimResponseInsuranceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimResponseInsurance'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimResponseInsurancePropsJs(js, def, xv);
end;

procedure defineClaimResponseErrorPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClaimResponseError'+v(xv), 'itemSequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimResponseError'+v(xv), 'detailSequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimResponseError'+v(xv), 'subDetailSequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ClaimResponseError'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClaimResponseErrorJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimResponseError'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimResponseErrorPropsJs(js, def, xv);
end;

procedure defineClaimResponsePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'subType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'use', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'created', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'insurer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'requestor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'request', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'outcome', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'disposition', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'preAuthRef', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'preAuthPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'payeeType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'item', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'addItem', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'adjudication', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'total', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'payment', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'fundsReserve', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'formCode', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'form', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'processNote', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'communicationRequest', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'insurance', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClaimResponse'+v(xv), 'error', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClaimResponseJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClaimResponse'+v(xv), nil, js.FHIRFactoryJs);
  defineClaimResponsePropsJs(js, def, xv);
end;

procedure defineClinicalImpressionFindingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClinicalImpressionFinding'+v(xv), 'item', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalImpressionFinding'+v(xv), 'basis', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineClinicalImpressionFindingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClinicalImpressionFinding'+v(xv), nil, js.FHIRFactoryJs);
  defineClinicalImpressionFindingPropsJs(js, def, xv);
end;

procedure defineClinicalImpressionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'statusReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'effectiveDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'performer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'previous', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'problem', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'summary', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'finding', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'prognosisCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'prognosisReference', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'supportingInfo', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalImpression'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClinicalImpressionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClinicalImpression'+v(xv), nil, js.FHIRFactoryJs);
  defineClinicalImpressionPropsJs(js, def, xv);
end;

procedure defineClinicalUseIssueContraindicationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClinicalUseIssueContraindication'+v(xv), 'diseaseSymptomProcedure', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueContraindication'+v(xv), 'diseaseStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueContraindication'+v(xv), 'comorbidity', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalUseIssueContraindication'+v(xv), 'indication', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalUseIssueContraindication'+v(xv), 'otherTherapy', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClinicalUseIssueContraindicationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClinicalUseIssueContraindication'+v(xv), nil, js.FHIRFactoryJs);
  defineClinicalUseIssueContraindicationPropsJs(js, def, xv);
end;

procedure defineClinicalUseIssueContraindicationOtherTherapyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClinicalUseIssueContraindicationOtherTherapy'+v(xv), 'therapyRelationshipType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueContraindicationOtherTherapy'+v(xv), 'medicationCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueContraindicationOtherTherapy'+v(xv), 'medicationReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClinicalUseIssueContraindicationOtherTherapyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClinicalUseIssueContraindicationOtherTherapy'+v(xv), nil, js.FHIRFactoryJs);
  defineClinicalUseIssueContraindicationOtherTherapyPropsJs(js, def, xv);
end;

procedure defineClinicalUseIssueIndicationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClinicalUseIssueIndication'+v(xv), 'diseaseSymptomProcedure', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueIndication'+v(xv), 'diseaseStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueIndication'+v(xv), 'comorbidity', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalUseIssueIndication'+v(xv), 'intendedEffect', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueIndication'+v(xv), 'duration', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueIndication'+v(xv), 'undesirableEffect', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalUseIssueIndication'+v(xv), 'otherTherapy', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineClinicalUseIssueIndicationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClinicalUseIssueIndication'+v(xv), nil, js.FHIRFactoryJs);
  defineClinicalUseIssueIndicationPropsJs(js, def, xv);
end;

procedure defineClinicalUseIssueInteractionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClinicalUseIssueInteraction'+v(xv), 'interactant', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalUseIssueInteraction'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueInteraction'+v(xv), 'effect', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueInteraction'+v(xv), 'incidence', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueInteraction'+v(xv), 'management', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClinicalUseIssueInteractionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClinicalUseIssueInteraction'+v(xv), nil, js.FHIRFactoryJs);
  defineClinicalUseIssueInteractionPropsJs(js, def, xv);
end;

procedure defineClinicalUseIssueInteractionInteractantPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClinicalUseIssueInteractionInteractant'+v(xv), 'itemReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueInteractionInteractant'+v(xv), 'itemCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClinicalUseIssueInteractionInteractantJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClinicalUseIssueInteractionInteractant'+v(xv), nil, js.FHIRFactoryJs);
  defineClinicalUseIssueInteractionInteractantPropsJs(js, def, xv);
end;

procedure defineClinicalUseIssueUndesirableEffectPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ClinicalUseIssueUndesirableEffect'+v(xv), 'symptomConditionEffect', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueUndesirableEffect'+v(xv), 'classification', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssueUndesirableEffect'+v(xv), 'frequencyOfOccurrence', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClinicalUseIssueUndesirableEffectJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClinicalUseIssueUndesirableEffect'+v(xv), nil, js.FHIRFactoryJs);
  defineClinicalUseIssueUndesirableEffectPropsJs(js, def, xv);
end;

procedure defineClinicalUseIssuePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ClinicalUseIssue'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalUseIssue'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClinicalUseIssue'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssue'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalUseIssue'+v(xv), 'status', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssue'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ClinicalUseIssue'+v(xv), 'contraindication', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssue'+v(xv), 'indication', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssue'+v(xv), 'interaction', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ClinicalUseIssue'+v(xv), 'population', 'Population'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ClinicalUseIssue'+v(xv), 'undesirableEffect', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineClinicalUseIssueJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ClinicalUseIssue'+v(xv), nil, js.FHIRFactoryJs);
  defineClinicalUseIssuePropsJs(js, def, xv);
end;

procedure defineCodeSystemFilterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CodeSystemFilter'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystemFilter'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystemFilter'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCodeSystemFilterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CodeSystemFilter'+v(xv), nil, js.FHIRFactoryJs);
  defineCodeSystemFilterPropsJs(js, def, xv);
end;

procedure defineCodeSystemPropertyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CodeSystemProperty'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystemProperty'+v(xv), 'uri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystemProperty'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystemProperty'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCodeSystemPropertyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CodeSystemProperty'+v(xv), nil, js.FHIRFactoryJs);
  defineCodeSystemPropertyPropsJs(js, def, xv);
end;

procedure defineCodeSystemConceptPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CodeSystemConcept'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystemConcept'+v(xv), 'display', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystemConcept'+v(xv), 'definition', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystemConcept'+v(xv), 'designation', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CodeSystemConcept'+v(xv), 'property', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CodeSystemConcept'+v(xv), 'concept', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCodeSystemConceptJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CodeSystemConcept'+v(xv), nil, js.FHIRFactoryJs);
  defineCodeSystemConceptPropsJs(js, def, xv);
end;

procedure defineCodeSystemConceptDesignationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CodeSystemConceptDesignation'+v(xv), 'language', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystemConceptDesignation'+v(xv), 'use', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CodeSystemConceptDesignation'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCodeSystemConceptDesignationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CodeSystemConceptDesignation'+v(xv), nil, js.FHIRFactoryJs);
  defineCodeSystemConceptDesignationPropsJs(js, def, xv);
end;

procedure defineCodeSystemConceptPropertyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CodeSystemConceptProperty'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystemConceptProperty'+v(xv), 'valueCode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystemConceptProperty'+v(xv), 'valueCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CodeSystemConceptProperty'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystemConceptProperty'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'CodeSystemConceptProperty'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CodeSystemConceptProperty'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CodeSystemConceptProperty'+v(xv), 'valueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
end;

procedure defineCodeSystemConceptPropertyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CodeSystemConceptProperty'+v(xv), nil, js.FHIRFactoryJs);
  defineCodeSystemConceptPropertyPropsJs(js, def, xv);
end;

procedure defineCodeSystemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'CodeSystem'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'caseSensitive', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'valueSet', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'hierarchyMeaning', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'compositional', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'versionNeeded', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'content', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'supplements', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'count', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'filter', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'property', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CodeSystem'+v(xv), 'concept', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCodeSystemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CodeSystem'+v(xv), nil, js.FHIRFactoryJs);
  defineCodeSystemPropsJs(js, def, xv);
end;

procedure defineCommunicationPayloadPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CommunicationPayload'+v(xv), 'contentAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CommunicationPayload'+v(xv), 'contentReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CommunicationPayload'+v(xv), 'contentCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCommunicationPayloadJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CommunicationPayload'+v(xv), nil, js.FHIRFactoryJs);
  defineCommunicationPayloadPropsJs(js, def, xv);
end;

procedure defineCommunicationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Communication'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Communication'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Communication'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Communication'+v(xv), 'inResponseTo', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Communication'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Communication'+v(xv), 'statusReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Communication'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Communication'+v(xv), 'priority', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Communication'+v(xv), 'medium', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Communication'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Communication'+v(xv), 'topic', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Communication'+v(xv), 'about', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Communication'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Communication'+v(xv), 'sent', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Communication'+v(xv), 'received', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Communication'+v(xv), 'recipient', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Communication'+v(xv), 'sender', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Communication'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Communication'+v(xv), 'payload', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Communication'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCommunicationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Communication'+v(xv), nil, js.FHIRFactoryJs);
  defineCommunicationPropsJs(js, def, xv);
end;

procedure defineCommunicationRequestPayloadPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CommunicationRequestPayload'+v(xv), 'contentAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CommunicationRequestPayload'+v(xv), 'contentReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CommunicationRequestPayload'+v(xv), 'contentCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCommunicationRequestPayloadJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CommunicationRequestPayload'+v(xv), nil, js.FHIRFactoryJs);
  defineCommunicationRequestPayloadPropsJs(js, def, xv);
end;

procedure defineCommunicationRequestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'replaces', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'groupIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'statusReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'priority', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'doNotPerform', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'medium', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'about', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'payload', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'occurrenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'occurrencePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'authoredOn', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'requester', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'recipient', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'informationProvider', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CommunicationRequest'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCommunicationRequestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CommunicationRequest'+v(xv), nil, js.FHIRFactoryJs);
  defineCommunicationRequestPropsJs(js, def, xv);
end;

procedure defineCompartmentDefinitionResourcePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CompartmentDefinitionResource'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CompartmentDefinitionResource'+v(xv), 'documentation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCompartmentDefinitionResourceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CompartmentDefinitionResource'+v(xv), nil, js.FHIRFactoryJs);
  defineCompartmentDefinitionResourcePropsJs(js, def, xv);
end;

procedure defineCompartmentDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'search', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CompartmentDefinition'+v(xv), 'resource', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCompartmentDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CompartmentDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineCompartmentDefinitionPropsJs(js, def, xv);
end;

procedure defineCompositionAttesterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CompositionAttester'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CompositionAttester'+v(xv), 'time', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CompositionAttester'+v(xv), 'party', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCompositionAttesterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CompositionAttester'+v(xv), nil, js.FHIRFactoryJs);
  defineCompositionAttesterPropsJs(js, def, xv);
end;

procedure defineCompositionRelatesToPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CompositionRelatesTo'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CompositionRelatesTo'+v(xv), 'targetIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CompositionRelatesTo'+v(xv), 'targetReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCompositionRelatesToJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CompositionRelatesTo'+v(xv), nil, js.FHIRFactoryJs);
  defineCompositionRelatesToPropsJs(js, def, xv);
end;

procedure defineCompositionEventPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CompositionEvent'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CompositionEvent'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CompositionEvent'+v(xv), 'detail', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCompositionEventJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CompositionEvent'+v(xv), nil, js.FHIRFactoryJs);
  defineCompositionEventPropsJs(js, def, xv);
end;

procedure defineCompositionSectionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CompositionSection'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CompositionSection'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CompositionSection'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CompositionSection'+v(xv), 'focus', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CompositionSection'+v(xv), 'text', 'Narrative'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CompositionSection'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CompositionSection'+v(xv), 'orderedBy', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CompositionSection'+v(xv), 'entry', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CompositionSection'+v(xv), 'emptyReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CompositionSection'+v(xv), 'section', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCompositionSectionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CompositionSection'+v(xv), nil, js.FHIRFactoryJs);
  defineCompositionSectionPropsJs(js, def, xv);
end;

procedure defineCompositionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Composition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Composition'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Composition'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Composition'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Composition'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Composition'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Composition'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Composition'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Composition'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Composition'+v(xv), 'confidentiality', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Composition'+v(xv), 'attester', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Composition'+v(xv), 'custodian', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Composition'+v(xv), 'relatesTo', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Composition'+v(xv), 'event', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Composition'+v(xv), 'section', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCompositionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Composition'+v(xv), nil, js.FHIRFactoryJs);
  defineCompositionPropsJs(js, def, xv);
end;

procedure defineConceptMapGroupPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConceptMapGroup'+v(xv), 'source', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroup'+v(xv), 'sourceVersion', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroup'+v(xv), 'target', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroup'+v(xv), 'targetVersion', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroup'+v(xv), 'element', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConceptMapGroup'+v(xv), 'unmapped', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineConceptMapGroupJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConceptMapGroup'+v(xv), nil, js.FHIRFactoryJs);
  defineConceptMapGroupPropsJs(js, def, xv);
end;

procedure defineConceptMapGroupElementPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConceptMapGroupElement'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroupElement'+v(xv), 'display', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroupElement'+v(xv), 'noMap', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ConceptMapGroupElement'+v(xv), 'target', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineConceptMapGroupElementJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConceptMapGroupElement'+v(xv), nil, js.FHIRFactoryJs);
  defineConceptMapGroupElementPropsJs(js, def, xv);
end;

procedure defineConceptMapGroupElementTargetPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConceptMapGroupElementTarget'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroupElementTarget'+v(xv), 'display', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroupElementTarget'+v(xv), 'relationship', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroupElementTarget'+v(xv), 'comment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroupElementTarget'+v(xv), 'dependsOn', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConceptMapGroupElementTarget'+v(xv), 'product', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineConceptMapGroupElementTargetJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConceptMapGroupElementTarget'+v(xv), nil, js.FHIRFactoryJs);
  defineConceptMapGroupElementTargetPropsJs(js, def, xv);
end;

procedure defineConceptMapGroupElementTargetDependsOnPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConceptMapGroupElementTargetDependsOn'+v(xv), 'property_', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroupElementTargetDependsOn'+v(xv), 'system', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroupElementTargetDependsOn'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroupElementTargetDependsOn'+v(xv), 'display', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineConceptMapGroupElementTargetDependsOnJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConceptMapGroupElementTargetDependsOn'+v(xv), nil, js.FHIRFactoryJs);
  defineConceptMapGroupElementTargetDependsOnPropsJs(js, def, xv);
end;

procedure defineConceptMapGroupUnmappedPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConceptMapGroupUnmapped'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroupUnmapped'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroupUnmapped'+v(xv), 'display', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMapGroupUnmapped'+v(xv), 'url', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineConceptMapGroupUnmappedJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConceptMapGroupUnmapped'+v(xv), nil, js.FHIRFactoryJs);
  defineConceptMapGroupUnmappedPropsJs(js, def, xv);
end;

procedure defineConceptMapPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ConceptMap'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'sourceUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'sourceCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'targetUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'targetCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConceptMap'+v(xv), 'group', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineConceptMapJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConceptMap'+v(xv), nil, js.FHIRFactoryJs);
  defineConceptMapPropsJs(js, def, xv);
end;

procedure defineConditionStagePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConditionStage'+v(xv), 'summary', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConditionStage'+v(xv), 'assessment', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConditionStage'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineConditionStageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConditionStage'+v(xv), nil, js.FHIRFactoryJs);
  defineConditionStagePropsJs(js, def, xv);
end;

procedure defineConditionEvidencePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConditionEvidence'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConditionEvidence'+v(xv), 'detail', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineConditionEvidenceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConditionEvidence'+v(xv), nil, js.FHIRFactoryJs);
  defineConditionEvidencePropsJs(js, def, xv);
end;

procedure defineConditionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Condition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Condition'+v(xv), 'clinicalStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'verificationStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Condition'+v(xv), 'severity', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'bodySite', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Condition'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'onsetDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Condition'+v(xv), 'onsetAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'onsetPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'onsetRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'onsetString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Condition'+v(xv), 'abatementDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Condition'+v(xv), 'abatementAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'abatementPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'abatementRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'abatementString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Condition'+v(xv), 'recordedDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Condition'+v(xv), 'recorder', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'asserter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Condition'+v(xv), 'stage', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Condition'+v(xv), 'evidence', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Condition'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineConditionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Condition'+v(xv), nil, js.FHIRFactoryJs);
  defineConditionPropsJs(js, def, xv);
end;

procedure defineConditionDefinitionObservationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConditionDefinitionObservation'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConditionDefinitionObservation'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineConditionDefinitionObservationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConditionDefinitionObservation'+v(xv), nil, js.FHIRFactoryJs);
  defineConditionDefinitionObservationPropsJs(js, def, xv);
end;

procedure defineConditionDefinitionMedicationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConditionDefinitionMedication'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConditionDefinitionMedication'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineConditionDefinitionMedicationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConditionDefinitionMedication'+v(xv), nil, js.FHIRFactoryJs);
  defineConditionDefinitionMedicationPropsJs(js, def, xv);
end;

procedure defineConditionDefinitionPreconditionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConditionDefinitionPrecondition'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConditionDefinitionPrecondition'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConditionDefinitionPrecondition'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConditionDefinitionPrecondition'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineConditionDefinitionPreconditionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConditionDefinitionPrecondition'+v(xv), nil, js.FHIRFactoryJs);
  defineConditionDefinitionPreconditionPropsJs(js, def, xv);
end;

procedure defineConditionDefinitionQuestionnairePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConditionDefinitionQuestionnaire'+v(xv), 'purpose', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConditionDefinitionQuestionnaire'+v(xv), 'reference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineConditionDefinitionQuestionnaireJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConditionDefinitionQuestionnaire'+v(xv), nil, js.FHIRFactoryJs);
  defineConditionDefinitionQuestionnairePropsJs(js, def, xv);
end;

procedure defineConditionDefinitionPlanPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConditionDefinitionPlan'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConditionDefinitionPlan'+v(xv), 'reference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineConditionDefinitionPlanJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConditionDefinitionPlan'+v(xv), nil, js.FHIRFactoryJs);
  defineConditionDefinitionPlanPropsJs(js, def, xv);
end;

procedure defineConditionDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineMetadataResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'subtitle', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'severity', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'bodySite', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'stage', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'hasSeverity', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'hasBodySite', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'hasStage', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'observation', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'medication', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'precondition', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'team', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'questionnaire', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConditionDefinition'+v(xv), 'plan', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineConditionDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConditionDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineConditionDefinitionPropsJs(js, def, xv);
end;

procedure defineConsentPolicyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConsentPolicy'+v(xv), 'authority', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConsentPolicy'+v(xv), 'uri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineConsentPolicyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConsentPolicy'+v(xv), nil, js.FHIRFactoryJs);
  defineConsentPolicyPropsJs(js, def, xv);
end;

procedure defineConsentVerificationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConsentVerification'+v(xv), 'verified', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ConsentVerification'+v(xv), 'verificationType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConsentVerification'+v(xv), 'verifiedBy', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConsentVerification'+v(xv), 'verifiedWith', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineConsentVerificationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConsentVerification'+v(xv), nil, js.FHIRFactoryJs);
  defineConsentVerificationPropsJs(js, def, xv);
end;

procedure defineConsentProvisionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConsentProvision'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConsentProvision'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConsentProvision'+v(xv), 'actor', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConsentProvision'+v(xv), 'action', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConsentProvision'+v(xv), 'securityLabel', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConsentProvision'+v(xv), 'purpose', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConsentProvision'+v(xv), 'class', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConsentProvision'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConsentProvision'+v(xv), 'dataPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConsentProvision'+v(xv), 'data', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ConsentProvision'+v(xv), 'provision', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineConsentProvisionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConsentProvision'+v(xv), nil, js.FHIRFactoryJs);
  defineConsentProvisionPropsJs(js, def, xv);
end;

procedure defineConsentProvisionActorPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConsentProvisionActor'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ConsentProvisionActor'+v(xv), 'reference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineConsentProvisionActorJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConsentProvisionActor'+v(xv), nil, js.FHIRFactoryJs);
  defineConsentProvisionActorPropsJs(js, def, xv);
end;

procedure defineConsentProvisionDataPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ConsentProvisionData'+v(xv), 'meaning', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ConsentProvisionData'+v(xv), 'reference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineConsentProvisionDataJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ConsentProvisionData'+v(xv), nil, js.FHIRFactoryJs);
  defineConsentProvisionDataPropsJs(js, def, xv);
end;

procedure defineConsentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Consent'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Consent'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Consent'+v(xv), 'scope', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Consent'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Consent'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Consent'+v(xv), 'dateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Consent'+v(xv), 'performer', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Consent'+v(xv), 'manager', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Consent'+v(xv), 'controller', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Consent'+v(xv), 'sourceAttachment', 'Attachment'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Consent'+v(xv), 'sourceReference', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Consent'+v(xv), 'policy', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Consent'+v(xv), 'policyRule', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Consent'+v(xv), 'verification', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Consent'+v(xv), 'provision', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineConsentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Consent'+v(xv), nil, js.FHIRFactoryJs);
  defineConsentPropsJs(js, def, xv);
end;

procedure defineContractContentDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractContentDefinition'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractContentDefinition'+v(xv), 'subType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractContentDefinition'+v(xv), 'publisher', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractContentDefinition'+v(xv), 'publicationDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ContractContentDefinition'+v(xv), 'publicationStatus', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ContractContentDefinition'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineContractContentDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractContentDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineContractContentDefinitionPropsJs(js, def, xv);
end;

procedure defineContractTermPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractTerm'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTerm'+v(xv), 'issued', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ContractTerm'+v(xv), 'applies', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTerm'+v(xv), 'topicCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTerm'+v(xv), 'topicReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTerm'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTerm'+v(xv), 'subType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTerm'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ContractTerm'+v(xv), 'securityLabel', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTerm'+v(xv), 'offer', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTerm'+v(xv), 'asset', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTerm'+v(xv), 'action', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTerm'+v(xv), 'group', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineContractTermJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractTerm'+v(xv), nil, js.FHIRFactoryJs);
  defineContractTermPropsJs(js, def, xv);
end;

procedure defineContractTermSecurityLabelPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractTermSecurityLabel'+v(xv), 'classification', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermSecurityLabel'+v(xv), 'category', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermSecurityLabel'+v(xv), 'control', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineContractTermSecurityLabelJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractTermSecurityLabel'+v(xv), nil, js.FHIRFactoryJs);
  defineContractTermSecurityLabelPropsJs(js, def, xv);
end;

procedure defineContractTermOfferPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractTermOffer'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermOffer'+v(xv), 'party', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermOffer'+v(xv), 'topic', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermOffer'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermOffer'+v(xv), 'decision', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermOffer'+v(xv), 'decisionMode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermOffer'+v(xv), 'answer', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermOffer'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineContractTermOfferJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractTermOffer'+v(xv), nil, js.FHIRFactoryJs);
  defineContractTermOfferPropsJs(js, def, xv);
end;

procedure defineContractTermOfferPartyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractTermOfferParty'+v(xv), 'reference', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermOfferParty'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineContractTermOfferPartyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractTermOfferParty'+v(xv), nil, js.FHIRFactoryJs);
  defineContractTermOfferPartyPropsJs(js, def, xv);
end;

procedure defineContractTermOfferAnswerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractTermOfferAnswer'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ContractTermOfferAnswer'+v(xv), 'valueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ContractTermOfferAnswer'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ContractTermOfferAnswer'+v(xv), 'valueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ContractTermOfferAnswer'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ContractTermOfferAnswer'+v(xv), 'valueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ContractTermOfferAnswer'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ContractTermOfferAnswer'+v(xv), 'valueUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ContractTermOfferAnswer'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermOfferAnswer'+v(xv), 'valueCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermOfferAnswer'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermOfferAnswer'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineContractTermOfferAnswerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractTermOfferAnswer'+v(xv), nil, js.FHIRFactoryJs);
  defineContractTermOfferAnswerPropsJs(js, def, xv);
end;

procedure defineContractTermAssetPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractTermAsset'+v(xv), 'scope', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAsset'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermAsset'+v(xv), 'typeReference', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermAsset'+v(xv), 'subtype', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermAsset'+v(xv), 'relationship', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAsset'+v(xv), 'context', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermAsset'+v(xv), 'condition', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ContractTermAsset'+v(xv), 'periodType', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermAsset'+v(xv), 'period', 'Period'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermAsset'+v(xv), 'usePeriod', 'Period'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermAsset'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ContractTermAsset'+v(xv), 'answer', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermAsset'+v(xv), 'valuedItem', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineContractTermAssetJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractTermAsset'+v(xv), nil, js.FHIRFactoryJs);
  defineContractTermAssetPropsJs(js, def, xv);
end;

procedure defineContractTermAssetContextPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractTermAssetContext'+v(xv), 'reference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAssetContext'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermAssetContext'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineContractTermAssetContextJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractTermAssetContext'+v(xv), nil, js.FHIRFactoryJs);
  defineContractTermAssetContextPropsJs(js, def, xv);
end;

procedure defineContractTermAssetValuedItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractTermAssetValuedItem'+v(xv), 'entityCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAssetValuedItem'+v(xv), 'entityReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAssetValuedItem'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAssetValuedItem'+v(xv), 'effectiveTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ContractTermAssetValuedItem'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAssetValuedItem'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAssetValuedItem'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ContractTermAssetValuedItem'+v(xv), 'points', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ContractTermAssetValuedItem'+v(xv), 'net', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAssetValuedItem'+v(xv), 'payment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ContractTermAssetValuedItem'+v(xv), 'paymentDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ContractTermAssetValuedItem'+v(xv), 'responsible', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAssetValuedItem'+v(xv), 'recipient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineContractTermAssetValuedItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractTermAssetValuedItem'+v(xv), nil, js.FHIRFactoryJs);
  defineContractTermAssetValuedItemPropsJs(js, def, xv);
end;

procedure defineContractTermActionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'doNotPerform', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'subject', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'intent', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'status', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'context', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'occurrenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'occurrencePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'occurrenceTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'requester', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'performerType', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'performerRole', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'performer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermAction'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineContractTermActionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractTermAction'+v(xv), nil, js.FHIRFactoryJs);
  defineContractTermActionPropsJs(js, def, xv);
end;

procedure defineContractTermActionSubjectPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractTermActionSubject'+v(xv), 'reference', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ContractTermActionSubject'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineContractTermActionSubjectJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractTermActionSubject'+v(xv), nil, js.FHIRFactoryJs);
  defineContractTermActionSubjectPropsJs(js, def, xv);
end;

procedure defineContractSignerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractSigner'+v(xv), 'type', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractSigner'+v(xv), 'party', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractSigner'+v(xv), 'signature', 'Signature'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineContractSignerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractSigner'+v(xv), nil, js.FHIRFactoryJs);
  defineContractSignerPropsJs(js, def, xv);
end;

procedure defineContractFriendlyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractFriendly'+v(xv), 'contentAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractFriendly'+v(xv), 'contentReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineContractFriendlyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractFriendly'+v(xv), nil, js.FHIRFactoryJs);
  defineContractFriendlyPropsJs(js, def, xv);
end;

procedure defineContractLegalPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractLegal'+v(xv), 'contentAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractLegal'+v(xv), 'contentReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineContractLegalJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractLegal'+v(xv), nil, js.FHIRFactoryJs);
  defineContractLegalPropsJs(js, def, xv);
end;

procedure defineContractRulePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ContractRule'+v(xv), 'contentAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ContractRule'+v(xv), 'contentReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineContractRuleJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ContractRule'+v(xv), nil, js.FHIRFactoryJs);
  defineContractRulePropsJs(js, def, xv);
end;

procedure defineContractPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Contract'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Contract'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Contract'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Contract'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Contract'+v(xv), 'legalState', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Contract'+v(xv), 'instantiatesCanonical', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Contract'+v(xv), 'instantiatesUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Contract'+v(xv), 'contentDerivative', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Contract'+v(xv), 'issued', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Contract'+v(xv), 'applies', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Contract'+v(xv), 'expirationType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Contract'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Contract'+v(xv), 'authority', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Contract'+v(xv), 'domain', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Contract'+v(xv), 'site', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Contract'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Contract'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Contract'+v(xv), 'subtitle', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Contract'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Contract'+v(xv), 'scope', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Contract'+v(xv), 'topicCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Contract'+v(xv), 'topicReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Contract'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Contract'+v(xv), 'subType', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Contract'+v(xv), 'contentDefinition', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Contract'+v(xv), 'term', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Contract'+v(xv), 'supportingInfo', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Contract'+v(xv), 'relevantHistory', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Contract'+v(xv), 'signer', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Contract'+v(xv), 'friendly', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Contract'+v(xv), 'legal', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Contract'+v(xv), 'rule', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Contract'+v(xv), 'legallyBindingAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Contract'+v(xv), 'legallyBindingReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineContractJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Contract'+v(xv), nil, js.FHIRFactoryJs);
  defineContractPropsJs(js, def, xv);
end;

procedure defineCoverageClassPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CoverageClass'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageClass'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CoverageClass'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCoverageClassJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CoverageClass'+v(xv), nil, js.FHIRFactoryJs);
  defineCoverageClassPropsJs(js, def, xv);
end;

procedure defineCoverageCostToBeneficiaryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CoverageCostToBeneficiary'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageCostToBeneficiary'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageCostToBeneficiary'+v(xv), 'valueMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageCostToBeneficiary'+v(xv), 'exception', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCoverageCostToBeneficiaryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CoverageCostToBeneficiary'+v(xv), nil, js.FHIRFactoryJs);
  defineCoverageCostToBeneficiaryPropsJs(js, def, xv);
end;

procedure defineCoverageCostToBeneficiaryExceptionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CoverageCostToBeneficiaryException'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageCostToBeneficiaryException'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCoverageCostToBeneficiaryExceptionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CoverageCostToBeneficiaryException'+v(xv), nil, js.FHIRFactoryJs);
  defineCoverageCostToBeneficiaryExceptionPropsJs(js, def, xv);
end;

procedure defineCoveragePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Coverage'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Coverage'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Coverage'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Coverage'+v(xv), 'policyHolder', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Coverage'+v(xv), 'subscriber', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Coverage'+v(xv), 'subscriberId', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Coverage'+v(xv), 'beneficiary', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Coverage'+v(xv), 'dependent', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Coverage'+v(xv), 'relationship', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Coverage'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Coverage'+v(xv), 'payor', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Coverage'+v(xv), 'class', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Coverage'+v(xv), 'order', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'Coverage'+v(xv), 'network', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Coverage'+v(xv), 'costToBeneficiary', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Coverage'+v(xv), 'subrogation', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Coverage'+v(xv), 'contract', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCoverageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Coverage'+v(xv), nil, js.FHIRFactoryJs);
  defineCoveragePropsJs(js, def, xv);
end;

procedure defineCoverageEligibilityRequestSupportingInfoPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CoverageEligibilityRequestSupportingInfo'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'CoverageEligibilityRequestSupportingInfo'+v(xv), 'information', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequestSupportingInfo'+v(xv), 'appliesToAll', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineCoverageEligibilityRequestSupportingInfoJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CoverageEligibilityRequestSupportingInfo'+v(xv), nil, js.FHIRFactoryJs);
  defineCoverageEligibilityRequestSupportingInfoPropsJs(js, def, xv);
end;

procedure defineCoverageEligibilityRequestInsurancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CoverageEligibilityRequestInsurance'+v(xv), 'focal', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CoverageEligibilityRequestInsurance'+v(xv), 'coverage', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequestInsurance'+v(xv), 'businessArrangement', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCoverageEligibilityRequestInsuranceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CoverageEligibilityRequestInsurance'+v(xv), nil, js.FHIRFactoryJs);
  defineCoverageEligibilityRequestInsurancePropsJs(js, def, xv);
end;

procedure defineCoverageEligibilityRequestItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CoverageEligibilityRequestItem'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequestItem'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequestItem'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CoverageEligibilityRequestItem'+v(xv), 'provider', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequestItem'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequestItem'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequestItem'+v(xv), 'facility', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequestItem'+v(xv), 'diagnosis', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CoverageEligibilityRequestItem'+v(xv), 'detail', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCoverageEligibilityRequestItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CoverageEligibilityRequestItem'+v(xv), nil, js.FHIRFactoryJs);
  defineCoverageEligibilityRequestItemPropsJs(js, def, xv);
end;

procedure defineCoverageEligibilityRequestItemDiagnosisPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CoverageEligibilityRequestItemDiagnosis'+v(xv), 'diagnosisCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequestItemDiagnosis'+v(xv), 'diagnosisReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCoverageEligibilityRequestItemDiagnosisJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CoverageEligibilityRequestItemDiagnosis'+v(xv), nil, js.FHIRFactoryJs);
  defineCoverageEligibilityRequestItemDiagnosisPropsJs(js, def, xv);
end;

procedure defineCoverageEligibilityRequestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'priority', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'servicedDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'servicedPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'created', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'enterer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'provider', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'insurer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'facility', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'supportingInfo', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'insurance', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CoverageEligibilityRequest'+v(xv), 'item', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCoverageEligibilityRequestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CoverageEligibilityRequest'+v(xv), nil, js.FHIRFactoryJs);
  defineCoverageEligibilityRequestPropsJs(js, def, xv);
end;

procedure defineCoverageEligibilityResponseInsurancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CoverageEligibilityResponseInsurance'+v(xv), 'coverage', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsurance'+v(xv), 'inforce', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsurance'+v(xv), 'benefitPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsurance'+v(xv), 'item', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCoverageEligibilityResponseInsuranceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CoverageEligibilityResponseInsurance'+v(xv), nil, js.FHIRFactoryJs);
  defineCoverageEligibilityResponseInsurancePropsJs(js, def, xv);
end;

procedure defineCoverageEligibilityResponseInsuranceItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'provider', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'excluded', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'network', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'unit', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'term', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'benefit', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'authorizationRequired', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'authorizationSupporting', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItem'+v(xv), 'authorizationUrl', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineCoverageEligibilityResponseInsuranceItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CoverageEligibilityResponseInsuranceItem'+v(xv), nil, js.FHIRFactoryJs);
  defineCoverageEligibilityResponseInsuranceItemPropsJs(js, def, xv);
end;

procedure defineCoverageEligibilityResponseInsuranceItemBenefitPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItemBenefit'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItemBenefit'+v(xv), 'allowedUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItemBenefit'+v(xv), 'allowedString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItemBenefit'+v(xv), 'allowedMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItemBenefit'+v(xv), 'usedUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItemBenefit'+v(xv), 'usedString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CoverageEligibilityResponseInsuranceItemBenefit'+v(xv), 'usedMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCoverageEligibilityResponseInsuranceItemBenefitJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CoverageEligibilityResponseInsuranceItemBenefit'+v(xv), nil, js.FHIRFactoryJs);
  defineCoverageEligibilityResponseInsuranceItemBenefitPropsJs(js, def, xv);
end;

procedure defineCoverageEligibilityResponseErrorPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'CoverageEligibilityResponseError'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineCoverageEligibilityResponseErrorJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CoverageEligibilityResponseError'+v(xv), nil, js.FHIRFactoryJs);
  defineCoverageEligibilityResponseErrorPropsJs(js, def, xv);
end;

procedure defineCoverageEligibilityResponsePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'servicedDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'servicedPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'created', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'requestor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'request', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'outcome', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'disposition', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'insurer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'insurance', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'preAuthRef', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'form', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'CoverageEligibilityResponse'+v(xv), 'error', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineCoverageEligibilityResponseJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('CoverageEligibilityResponse'+v(xv), nil, js.FHIRFactoryJs);
  defineCoverageEligibilityResponsePropsJs(js, def, xv);
end;

procedure defineDetectedIssueEvidencePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DetectedIssueEvidence'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DetectedIssueEvidence'+v(xv), 'detail', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDetectedIssueEvidenceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DetectedIssueEvidence'+v(xv), nil, js.FHIRFactoryJs);
  defineDetectedIssueEvidencePropsJs(js, def, xv);
end;

procedure defineDetectedIssueMitigationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DetectedIssueMitigation'+v(xv), 'action', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DetectedIssueMitigation'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'DetectedIssueMitigation'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineDetectedIssueMitigationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DetectedIssueMitigation'+v(xv), nil, js.FHIRFactoryJs);
  defineDetectedIssueMitigationPropsJs(js, def, xv);
end;

procedure defineDetectedIssuePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'DetectedIssue'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DetectedIssue'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DetectedIssue'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DetectedIssue'+v(xv), 'severity', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DetectedIssue'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DetectedIssue'+v(xv), 'identifiedDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'DetectedIssue'+v(xv), 'identifiedPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DetectedIssue'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DetectedIssue'+v(xv), 'implicated', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DetectedIssue'+v(xv), 'evidence', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DetectedIssue'+v(xv), 'detail', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DetectedIssue'+v(xv), 'reference', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DetectedIssue'+v(xv), 'mitigation', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDetectedIssueJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DetectedIssue'+v(xv), nil, js.FHIRFactoryJs);
  defineDetectedIssuePropsJs(js, def, xv);
end;

procedure defineDeviceUdiCarrierPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceUdiCarrier'+v(xv), 'deviceIdentifier', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceUdiCarrier'+v(xv), 'issuer', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceUdiCarrier'+v(xv), 'jurisdiction', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceUdiCarrier'+v(xv), 'carrierAIDC', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'DeviceUdiCarrier'+v(xv), 'carrierHRF', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceUdiCarrier'+v(xv), 'entryType', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineDeviceUdiCarrierJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceUdiCarrier'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceUdiCarrierPropsJs(js, def, xv);
end;

procedure defineDeviceDeviceNamePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceDeviceName'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceDeviceName'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineDeviceDeviceNameJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceDeviceName'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceDeviceNamePropsJs(js, def, xv);
end;

procedure defineDeviceSpecializationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceSpecialization'+v(xv), 'systemType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceSpecialization'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineDeviceSpecializationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceSpecialization'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceSpecializationPropsJs(js, def, xv);
end;

procedure defineDeviceVersionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceVersion'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceVersion'+v(xv), 'component', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceVersion'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineDeviceVersionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceVersion'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceVersionPropsJs(js, def, xv);
end;

procedure defineDevicePropertyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceProperty'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceProperty'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceProperty'+v(xv), 'valueCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDevicePropertyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceProperty'+v(xv), nil, js.FHIRFactoryJs);
  defineDevicePropertyPropsJs(js, def, xv);
end;

procedure defineDeviceOperationalStatusPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceOperationalStatus'+v(xv), 'value', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceOperationalStatus'+v(xv), 'reason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDeviceOperationalStatusJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceOperationalStatus'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceOperationalStatusPropsJs(js, def, xv);
end;

procedure defineDeviceAssociationStatusPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceAssociationStatus'+v(xv), 'value', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceAssociationStatus'+v(xv), 'reason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDeviceAssociationStatusJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceAssociationStatus'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceAssociationStatusPropsJs(js, def, xv);
end;

procedure defineDevicePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Device'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Device'+v(xv), 'displayName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Device'+v(xv), 'definition', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Device'+v(xv), 'udiCarrier', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Device'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Device'+v(xv), 'statusReason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Device'+v(xv), 'distinctIdentifier', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Device'+v(xv), 'manufacturer', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Device'+v(xv), 'manufactureDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Device'+v(xv), 'expirationDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Device'+v(xv), 'lotNumber', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Device'+v(xv), 'serialNumber', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Device'+v(xv), 'deviceName', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Device'+v(xv), 'modelNumber', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Device'+v(xv), 'partNumber', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Device'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Device'+v(xv), 'specialization', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Device'+v(xv), 'version', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Device'+v(xv), 'property', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Device'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Device'+v(xv), 'operationalStatus', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Device'+v(xv), 'associationStatus', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Device'+v(xv), 'owner', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Device'+v(xv), 'contact', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Device'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Device'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Device'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Device'+v(xv), 'safety', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Device'+v(xv), 'parent', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineDeviceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Device'+v(xv), nil, js.FHIRFactoryJs);
  defineDevicePropsJs(js, def, xv);
end;

procedure defineDeviceDefinitionUdiDeviceIdentifierPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceDefinitionUdiDeviceIdentifier'+v(xv), 'deviceIdentifier', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceDefinitionUdiDeviceIdentifier'+v(xv), 'issuer', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceDefinitionUdiDeviceIdentifier'+v(xv), 'jurisdiction', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineDeviceDefinitionUdiDeviceIdentifierJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceDefinitionUdiDeviceIdentifier'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceDefinitionUdiDeviceIdentifierPropsJs(js, def, xv);
end;

procedure defineDeviceDefinitionDeviceNamePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceDefinitionDeviceName'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceDefinitionDeviceName'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineDeviceDefinitionDeviceNameJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceDefinitionDeviceName'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceDefinitionDeviceNamePropsJs(js, def, xv);
end;

procedure defineDeviceDefinitionSpecializationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceDefinitionSpecialization'+v(xv), 'systemType', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceDefinitionSpecialization'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineDeviceDefinitionSpecializationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceDefinitionSpecialization'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceDefinitionSpecializationPropsJs(js, def, xv);
end;

procedure defineDeviceDefinitionCapabilityPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceDefinitionCapability'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceDefinitionCapability'+v(xv), 'description', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDeviceDefinitionCapabilityJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceDefinitionCapability'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceDefinitionCapabilityPropsJs(js, def, xv);
end;

procedure defineDeviceDefinitionPropertyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceDefinitionProperty'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceDefinitionProperty'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceDefinitionProperty'+v(xv), 'valueCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDeviceDefinitionPropertyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceDefinitionProperty'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceDefinitionPropertyPropsJs(js, def, xv);
end;

procedure defineDeviceDefinitionMaterialPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceDefinitionMaterial'+v(xv), 'substance', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceDefinitionMaterial'+v(xv), 'alternate', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'DeviceDefinitionMaterial'+v(xv), 'allergenicIndicator', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineDeviceDefinitionMaterialJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceDefinitionMaterial'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceDefinitionMaterialPropsJs(js, def, xv);
end;

procedure defineDeviceDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'udiDeviceIdentifier', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'manufacturerString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'manufacturerReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'deviceName', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'modelNumber', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'specialization', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'safety', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'shelfLifeStorage', 'ProductShelfLife'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'physicalCharacteristics', 'ProdCharacteristic'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'languageCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'capability', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'property', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'owner', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'contact', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'onlineInformation', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'parentDevice', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceDefinition'+v(xv), 'material', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDeviceDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceDefinitionPropsJs(js, def, xv);
end;

procedure defineDeviceMetricCalibrationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceMetricCalibration'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceMetricCalibration'+v(xv), 'state', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceMetricCalibration'+v(xv), 'time', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineDeviceMetricCalibrationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceMetricCalibration'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceMetricCalibrationPropsJs(js, def, xv);
end;

procedure defineDeviceMetricPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'DeviceMetric'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceMetric'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceMetric'+v(xv), 'unit', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceMetric'+v(xv), 'source', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceMetric'+v(xv), 'parent', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceMetric'+v(xv), 'operationalStatus', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceMetric'+v(xv), 'color', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceMetric'+v(xv), 'category', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceMetric'+v(xv), 'measurementPeriod', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceMetric'+v(xv), 'calibration', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDeviceMetricJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceMetric'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceMetricPropsJs(js, def, xv);
end;

procedure defineDeviceRequestParameterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DeviceRequestParameter'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceRequestParameter'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceRequestParameter'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceRequestParameter'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceRequestParameter'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineDeviceRequestParameterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceRequestParameter'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceRequestParameterPropsJs(js, def, xv);
end;

procedure defineDeviceRequestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'priorRequest', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'groupIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'intent', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'priority', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'code', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'parameter', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'occurrenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'occurrencePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'occurrenceTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'authoredOn', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'requester', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'performerType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'performer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'insurance', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'supportingInfo', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceRequest'+v(xv), 'relevantHistory', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDeviceRequestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceRequest'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceRequestPropsJs(js, def, xv);
end;

procedure defineDeviceUseStatementPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'derivedFrom', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'context', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'timingTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'timingPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'timingDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'dateAsserted', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'usageStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'usageReason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'informationSource', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'device', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'bodySite', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DeviceUseStatement'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDeviceUseStatementJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DeviceUseStatement'+v(xv), nil, js.FHIRFactoryJs);
  defineDeviceUseStatementPropsJs(js, def, xv);
end;

procedure defineDiagnosticReportMediaPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DiagnosticReportMedia'+v(xv), 'comment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DiagnosticReportMedia'+v(xv), 'link', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineDiagnosticReportMediaJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DiagnosticReportMedia'+v(xv), nil, js.FHIRFactoryJs);
  defineDiagnosticReportMediaPropsJs(js, def, xv);
end;

procedure defineDiagnosticReportPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'effectiveDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'issued', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'performer', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'resultsInterpreter', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'specimen', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'result', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'imagingStudy', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'media', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'conclusion', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'conclusionCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DiagnosticReport'+v(xv), 'presentedForm', 'Attachment'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDiagnosticReportJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DiagnosticReport'+v(xv), nil, js.FHIRFactoryJs);
  defineDiagnosticReportPropsJs(js, def, xv);
end;

procedure defineDocumentManifestRelatedPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DocumentManifestRelated'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DocumentManifestRelated'+v(xv), 'ref', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineDocumentManifestRelatedJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DocumentManifestRelated'+v(xv), nil, js.FHIRFactoryJs);
  defineDocumentManifestRelatedPropsJs(js, def, xv);
end;

procedure defineDocumentManifestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'DocumentManifest'+v(xv), 'masterIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DocumentManifest'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentManifest'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DocumentManifest'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DocumentManifest'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DocumentManifest'+v(xv), 'created', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'DocumentManifest'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentManifest'+v(xv), 'recipient', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentManifest'+v(xv), 'source', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DocumentManifest'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DocumentManifest'+v(xv), 'content', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentManifest'+v(xv), 'related', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDocumentManifestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DocumentManifest'+v(xv), nil, js.FHIRFactoryJs);
  defineDocumentManifestPropsJs(js, def, xv);
end;

procedure defineDocumentReferenceAttesterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DocumentReferenceAttester'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DocumentReferenceAttester'+v(xv), 'time', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'DocumentReferenceAttester'+v(xv), 'party', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineDocumentReferenceAttesterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DocumentReferenceAttester'+v(xv), nil, js.FHIRFactoryJs);
  defineDocumentReferenceAttesterPropsJs(js, def, xv);
end;

procedure defineDocumentReferenceRelatesToPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DocumentReferenceRelatesTo'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DocumentReferenceRelatesTo'+v(xv), 'target', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineDocumentReferenceRelatesToJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DocumentReferenceRelatesTo'+v(xv), nil, js.FHIRFactoryJs);
  defineDocumentReferenceRelatesToPropsJs(js, def, xv);
end;

procedure defineDocumentReferenceContentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'DocumentReferenceContent'+v(xv), 'attachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DocumentReferenceContent'+v(xv), 'format', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DocumentReferenceContent'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineDocumentReferenceContentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DocumentReferenceContent'+v(xv), nil, js.FHIRFactoryJs);
  defineDocumentReferenceContentPropsJs(js, def, xv);
end;

procedure defineDocumentReferencePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'DocumentReference'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'docStatus', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'event', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'facilityType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'practiceSetting', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'date', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'attester', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'custodian', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'relatesTo', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'securityLabel', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'content', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'sourcePatientInfo', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'DocumentReference'+v(xv), 'related', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineDocumentReferenceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('DocumentReference'+v(xv), nil, js.FHIRFactoryJs);
  defineDocumentReferencePropsJs(js, def, xv);
end;

procedure defineEncounterStatusHistoryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EncounterStatusHistory'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EncounterStatusHistory'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineEncounterStatusHistoryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EncounterStatusHistory'+v(xv), nil, js.FHIRFactoryJs);
  defineEncounterStatusHistoryPropsJs(js, def, xv);
end;

procedure defineEncounterClassHistoryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EncounterClassHistory'+v(xv), 'class', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EncounterClassHistory'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineEncounterClassHistoryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EncounterClassHistory'+v(xv), nil, js.FHIRFactoryJs);
  defineEncounterClassHistoryPropsJs(js, def, xv);
end;

procedure defineEncounterParticipantPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EncounterParticipant'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EncounterParticipant'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EncounterParticipant'+v(xv), 'individual', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineEncounterParticipantJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EncounterParticipant'+v(xv), nil, js.FHIRFactoryJs);
  defineEncounterParticipantPropsJs(js, def, xv);
end;

procedure defineEncounterDiagnosisPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EncounterDiagnosis'+v(xv), 'condition', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EncounterDiagnosis'+v(xv), 'use', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EncounterDiagnosis'+v(xv), 'rank', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
end;

procedure defineEncounterDiagnosisJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EncounterDiagnosis'+v(xv), nil, js.FHIRFactoryJs);
  defineEncounterDiagnosisPropsJs(js, def, xv);
end;

procedure defineEncounterHospitalizationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EncounterHospitalization'+v(xv), 'preAdmissionIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EncounterHospitalization'+v(xv), 'origin', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EncounterHospitalization'+v(xv), 'admitSource', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EncounterHospitalization'+v(xv), 'reAdmission', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EncounterHospitalization'+v(xv), 'dietPreference', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EncounterHospitalization'+v(xv), 'specialCourtesy', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EncounterHospitalization'+v(xv), 'specialArrangement', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EncounterHospitalization'+v(xv), 'destination', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EncounterHospitalization'+v(xv), 'dischargeDisposition', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineEncounterHospitalizationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EncounterHospitalization'+v(xv), nil, js.FHIRFactoryJs);
  defineEncounterHospitalizationPropsJs(js, def, xv);
end;

procedure defineEncounterLocationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EncounterLocation'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EncounterLocation'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EncounterLocation'+v(xv), 'physicalType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EncounterLocation'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineEncounterLocationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EncounterLocation'+v(xv), nil, js.FHIRFactoryJs);
  defineEncounterLocationPropsJs(js, def, xv);
end;

procedure defineEncounterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Encounter'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Encounter'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Encounter'+v(xv), 'statusHistory', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Encounter'+v(xv), 'class', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Encounter'+v(xv), 'classHistory', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Encounter'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Encounter'+v(xv), 'serviceType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Encounter'+v(xv), 'priority', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Encounter'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Encounter'+v(xv), 'subjectStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Encounter'+v(xv), 'episodeOfCare', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Encounter'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Encounter'+v(xv), 'participant', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Encounter'+v(xv), 'appointment', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Encounter'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Encounter'+v(xv), 'length', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Encounter'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Encounter'+v(xv), 'diagnosis', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Encounter'+v(xv), 'account', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Encounter'+v(xv), 'hospitalization', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Encounter'+v(xv), 'location', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Encounter'+v(xv), 'serviceProvider', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Encounter'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineEncounterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Encounter'+v(xv), nil, js.FHIRFactoryJs);
  defineEncounterPropsJs(js, def, xv);
end;

procedure defineEndpointPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Endpoint'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Endpoint'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Endpoint'+v(xv), 'connectionType', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Endpoint'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Endpoint'+v(xv), 'managingOrganization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Endpoint'+v(xv), 'contact', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Endpoint'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Endpoint'+v(xv), 'payloadType', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Endpoint'+v(xv), 'address', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineEndpointJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Endpoint'+v(xv), nil, js.FHIRFactoryJs);
  defineEndpointPropsJs(js, def, xv);
end;

procedure defineEnrollmentRequestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'EnrollmentRequest'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EnrollmentRequest'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EnrollmentRequest'+v(xv), 'created', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'EnrollmentRequest'+v(xv), 'insurer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EnrollmentRequest'+v(xv), 'provider', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EnrollmentRequest'+v(xv), 'candidate', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EnrollmentRequest'+v(xv), 'coverage', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineEnrollmentRequestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EnrollmentRequest'+v(xv), nil, js.FHIRFactoryJs);
  defineEnrollmentRequestPropsJs(js, def, xv);
end;

procedure defineEnrollmentResponsePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'EnrollmentResponse'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EnrollmentResponse'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EnrollmentResponse'+v(xv), 'request', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EnrollmentResponse'+v(xv), 'outcome', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EnrollmentResponse'+v(xv), 'disposition', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EnrollmentResponse'+v(xv), 'created', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'EnrollmentResponse'+v(xv), 'organization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EnrollmentResponse'+v(xv), 'requestProvider', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineEnrollmentResponseJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EnrollmentResponse'+v(xv), nil, js.FHIRFactoryJs);
  defineEnrollmentResponsePropsJs(js, def, xv);
end;

procedure defineEpisodeOfCareStatusHistoryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EpisodeOfCareStatusHistory'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EpisodeOfCareStatusHistory'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineEpisodeOfCareStatusHistoryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EpisodeOfCareStatusHistory'+v(xv), nil, js.FHIRFactoryJs);
  defineEpisodeOfCareStatusHistoryPropsJs(js, def, xv);
end;

procedure defineEpisodeOfCareDiagnosisPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EpisodeOfCareDiagnosis'+v(xv), 'condition', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EpisodeOfCareDiagnosis'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EpisodeOfCareDiagnosis'+v(xv), 'rank', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
end;

procedure defineEpisodeOfCareDiagnosisJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EpisodeOfCareDiagnosis'+v(xv), nil, js.FHIRFactoryJs);
  defineEpisodeOfCareDiagnosisPropsJs(js, def, xv);
end;

procedure defineEpisodeOfCarePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'EpisodeOfCare'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EpisodeOfCare'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EpisodeOfCare'+v(xv), 'statusHistory', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EpisodeOfCare'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EpisodeOfCare'+v(xv), 'diagnosis', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EpisodeOfCare'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EpisodeOfCare'+v(xv), 'managingOrganization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EpisodeOfCare'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EpisodeOfCare'+v(xv), 'referralRequest', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EpisodeOfCare'+v(xv), 'careManager', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EpisodeOfCare'+v(xv), 'team', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EpisodeOfCare'+v(xv), 'account', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineEpisodeOfCareJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EpisodeOfCare'+v(xv), nil, js.FHIRFactoryJs);
  defineEpisodeOfCarePropsJs(js, def, xv);
end;

procedure defineEventDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineMetadataResourcePropsJs(js, def, xv);
  js.registerElement(def, 'EventDefinition'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'subtitle', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'subjectCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'subjectReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'usage', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'approvalDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'lastReviewDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'topic', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'author', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'editor', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'reviewer', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'endorser', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'relatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EventDefinition'+v(xv), 'trigger', 'TriggerDefinition'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineEventDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EventDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineEventDefinitionPropsJs(js, def, xv);
end;

procedure defineEvidenceVariableDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EvidenceVariableDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariableDefinition'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceVariableDefinition'+v(xv), 'variableRole', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceVariableDefinition'+v(xv), 'observed', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceVariableDefinition'+v(xv), 'intended', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceVariableDefinition'+v(xv), 'directnessMatch', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineEvidenceVariableDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EvidenceVariableDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineEvidenceVariableDefinitionPropsJs(js, def, xv);
end;

procedure defineEvidenceCertaintyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EvidenceCertainty'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceCertainty'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceCertainty'+v(xv), 'rating', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceCertainty'+v(xv), 'certaintySubcomponent', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineEvidenceCertaintyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EvidenceCertainty'+v(xv), nil, js.FHIRFactoryJs);
  defineEvidenceCertaintyPropsJs(js, def, xv);
end;

procedure defineEvidenceCertaintyCertaintySubcomponentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EvidenceCertaintyCertaintySubcomponent'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceCertaintyCertaintySubcomponent'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceCertaintyCertaintySubcomponent'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceCertaintyCertaintySubcomponent'+v(xv), 'rating', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineEvidenceCertaintyCertaintySubcomponentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EvidenceCertaintyCertaintySubcomponent'+v(xv), nil, js.FHIRFactoryJs);
  defineEvidenceCertaintyCertaintySubcomponentPropsJs(js, def, xv);
end;

procedure defineEvidencePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineMetadataResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Evidence'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Evidence'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Evidence'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Evidence'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Evidence'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Evidence'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Evidence'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Evidence'+v(xv), 'approvalDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Evidence'+v(xv), 'lastReviewDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Evidence'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Evidence'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Evidence'+v(xv), 'author', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Evidence'+v(xv), 'editor', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Evidence'+v(xv), 'reviewer', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Evidence'+v(xv), 'endorser', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Evidence'+v(xv), 'relatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Evidence'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Evidence'+v(xv), 'assertion', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Evidence'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Evidence'+v(xv), 'variableDefinition', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Evidence'+v(xv), 'synthesisType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Evidence'+v(xv), 'studyType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Evidence'+v(xv), 'statistic', 'Statistic'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Evidence'+v(xv), 'distribution', 'OrderedDistribution'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Evidence'+v(xv), 'certainty', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineEvidenceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Evidence'+v(xv), nil, js.FHIRFactoryJs);
  defineEvidencePropsJs(js, def, xv);
end;

procedure defineEvidenceReportSubjectPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EvidenceReportSubject'+v(xv), 'characteristic', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReportSubject'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineEvidenceReportSubjectJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EvidenceReportSubject'+v(xv), nil, js.FHIRFactoryJs);
  defineEvidenceReportSubjectPropsJs(js, def, xv);
end;

procedure defineEvidenceReportSubjectCharacteristicPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EvidenceReportSubjectCharacteristic'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReportSubjectCharacteristic'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReportSubjectCharacteristic'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReportSubjectCharacteristic'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'EvidenceReportSubjectCharacteristic'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReportSubjectCharacteristic'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReportSubjectCharacteristic'+v(xv), 'exclude', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'EvidenceReportSubjectCharacteristic'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineEvidenceReportSubjectCharacteristicJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EvidenceReportSubjectCharacteristic'+v(xv), nil, js.FHIRFactoryJs);
  defineEvidenceReportSubjectCharacteristicPropsJs(js, def, xv);
end;

procedure defineEvidenceReportRelatesToPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EvidenceReportRelatesTo'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceReportRelatesTo'+v(xv), 'targetIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReportRelatesTo'+v(xv), 'targetReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineEvidenceReportRelatesToJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EvidenceReportRelatesTo'+v(xv), nil, js.FHIRFactoryJs);
  defineEvidenceReportRelatesToPropsJs(js, def, xv);
end;

procedure defineEvidenceReportSectionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EvidenceReportSection'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceReportSection'+v(xv), 'focus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReportSection'+v(xv), 'focusReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReportSection'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReportSection'+v(xv), 'text', 'Narrative'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReportSection'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceReportSection'+v(xv), 'orderedBy', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReportSection'+v(xv), 'entryClassifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReportSection'+v(xv), 'entryReference', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReportSection'+v(xv), 'emptyReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReportSection'+v(xv), 'section', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineEvidenceReportSectionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EvidenceReportSection'+v(xv), nil, js.FHIRFactoryJs);
  defineEvidenceReportSectionPropsJs(js, def, xv);
end;

procedure defineEvidenceReportPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineMetadataResourcePropsJs(js, def, xv);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'relatedIdentifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'citeAs', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'relatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'subject', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'author', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'editor', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'reviewer', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'endorser', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'relatesTo', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceReport'+v(xv), 'section', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineEvidenceReportJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EvidenceReport'+v(xv), nil, js.FHIRFactoryJs);
  defineEvidenceReportPropsJs(js, def, xv);
end;

procedure defineEvidenceVariableCharacteristicPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EvidenceVariableCharacteristic'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariableCharacteristic'+v(xv), 'definitionReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceVariableCharacteristic'+v(xv), 'definitionCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariableCharacteristic'+v(xv), 'definitionCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceVariableCharacteristic'+v(xv), 'definitionExpression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceVariableCharacteristic'+v(xv), 'method', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceVariableCharacteristic'+v(xv), 'device', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceVariableCharacteristic'+v(xv), 'exclude', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'EvidenceVariableCharacteristic'+v(xv), 'timeFromStart', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceVariableCharacteristic'+v(xv), 'groupMeasure', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineEvidenceVariableCharacteristicJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EvidenceVariableCharacteristic'+v(xv), nil, js.FHIRFactoryJs);
  defineEvidenceVariableCharacteristicPropsJs(js, def, xv);
end;

procedure defineEvidenceVariableCharacteristicTimeFromStartPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EvidenceVariableCharacteristicTimeFromStart'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariableCharacteristicTimeFromStart'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceVariableCharacteristicTimeFromStart'+v(xv), 'range', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceVariableCharacteristicTimeFromStart'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineEvidenceVariableCharacteristicTimeFromStartJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EvidenceVariableCharacteristicTimeFromStart'+v(xv), nil, js.FHIRFactoryJs);
  defineEvidenceVariableCharacteristicTimeFromStartPropsJs(js, def, xv);
end;

procedure defineEvidenceVariableCategoryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'EvidenceVariableCategory'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariableCategory'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceVariableCategory'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'EvidenceVariableCategory'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineEvidenceVariableCategoryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EvidenceVariableCategory'+v(xv), nil, js.FHIRFactoryJs);
  defineEvidenceVariableCategoryPropsJs(js, def, xv);
end;

procedure defineEvidenceVariablePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineMetadataResourcePropsJs(js, def, xv);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'shortTitle', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'subtitle', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'author', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'editor', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'reviewer', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'endorser', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'relatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'actual', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'characteristicCombination', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'characteristic', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'handling', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'EvidenceVariable'+v(xv), 'category', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineEvidenceVariableJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('EvidenceVariable'+v(xv), nil, js.FHIRFactoryJs);
  defineEvidenceVariablePropsJs(js, def, xv);
end;

procedure defineExampleScenarioActorPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExampleScenarioActor'+v(xv), 'actorId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioActor'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioActor'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioActor'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineExampleScenarioActorJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExampleScenarioActor'+v(xv), nil, js.FHIRFactoryJs);
  defineExampleScenarioActorPropsJs(js, def, xv);
end;

procedure defineExampleScenarioInstancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExampleScenarioInstance'+v(xv), 'resourceId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioInstance'+v(xv), 'resourceType', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioInstance'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioInstance'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioInstance'+v(xv), 'version', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExampleScenarioInstance'+v(xv), 'containedInstance', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExampleScenarioInstanceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExampleScenarioInstance'+v(xv), nil, js.FHIRFactoryJs);
  defineExampleScenarioInstancePropsJs(js, def, xv);
end;

procedure defineExampleScenarioInstanceVersionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExampleScenarioInstanceVersion'+v(xv), 'versionId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioInstanceVersion'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineExampleScenarioInstanceVersionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExampleScenarioInstanceVersion'+v(xv), nil, js.FHIRFactoryJs);
  defineExampleScenarioInstanceVersionPropsJs(js, def, xv);
end;

procedure defineExampleScenarioInstanceContainedInstancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExampleScenarioInstanceContainedInstance'+v(xv), 'resourceId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioInstanceContainedInstance'+v(xv), 'versionId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineExampleScenarioInstanceContainedInstanceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExampleScenarioInstanceContainedInstance'+v(xv), nil, js.FHIRFactoryJs);
  defineExampleScenarioInstanceContainedInstancePropsJs(js, def, xv);
end;

procedure defineExampleScenarioProcessPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExampleScenarioProcess'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioProcess'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioProcess'+v(xv), 'preConditions', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioProcess'+v(xv), 'postConditions', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioProcess'+v(xv), 'step', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExampleScenarioProcessJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExampleScenarioProcess'+v(xv), nil, js.FHIRFactoryJs);
  defineExampleScenarioProcessPropsJs(js, def, xv);
end;

procedure defineExampleScenarioProcessStepPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExampleScenarioProcessStep'+v(xv), 'process', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExampleScenarioProcessStep'+v(xv), 'pause', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ExampleScenarioProcessStep'+v(xv), 'operation', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExampleScenarioProcessStep'+v(xv), 'alternative', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExampleScenarioProcessStepJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExampleScenarioProcessStep'+v(xv), nil, js.FHIRFactoryJs);
  defineExampleScenarioProcessStepPropsJs(js, def, xv);
end;

procedure defineExampleScenarioProcessStepOperationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExampleScenarioProcessStepOperation'+v(xv), 'number', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioProcessStepOperation'+v(xv), 'type_', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioProcessStepOperation'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioProcessStepOperation'+v(xv), 'initiator', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioProcessStepOperation'+v(xv), 'receiver', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioProcessStepOperation'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioProcessStepOperation'+v(xv), 'initiatorActive', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ExampleScenarioProcessStepOperation'+v(xv), 'receiverActive', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ExampleScenarioProcessStepOperation'+v(xv), 'request', '??'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExampleScenarioProcessStepOperation'+v(xv), 'response', '??'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineExampleScenarioProcessStepOperationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExampleScenarioProcessStepOperation'+v(xv), nil, js.FHIRFactoryJs);
  defineExampleScenarioProcessStepOperationPropsJs(js, def, xv);
end;

procedure defineExampleScenarioProcessStepAlternativePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExampleScenarioProcessStepAlternative'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioProcessStepAlternative'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenarioProcessStepAlternative'+v(xv), 'step', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExampleScenarioProcessStepAlternativeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExampleScenarioProcessStepAlternative'+v(xv), nil, js.FHIRFactoryJs);
  defineExampleScenarioProcessStepAlternativePropsJs(js, def, xv);
end;

procedure defineExampleScenarioPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'actor', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'instance', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExampleScenario'+v(xv), 'process', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExampleScenarioJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExampleScenario'+v(xv), nil, js.FHIRFactoryJs);
  defineExampleScenarioPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitRelatedPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitRelated'+v(xv), 'claim', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitRelated'+v(xv), 'relationship', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitRelated'+v(xv), 'reference', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineExplanationOfBenefitRelatedJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitRelated'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitRelatedPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitPayeePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitPayee'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitPayee'+v(xv), 'party', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineExplanationOfBenefitPayeeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitPayee'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitPayeePropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitCareTeamPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitCareTeam'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ExplanationOfBenefitCareTeam'+v(xv), 'provider', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitCareTeam'+v(xv), 'responsible', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ExplanationOfBenefitCareTeam'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitCareTeam'+v(xv), 'qualification', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineExplanationOfBenefitCareTeamJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitCareTeam'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitCareTeamPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitSupportingInfoPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitSupportingInfo'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ExplanationOfBenefitSupportingInfo'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitSupportingInfo'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitSupportingInfo'+v(xv), 'timingDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ExplanationOfBenefitSupportingInfo'+v(xv), 'timingPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitSupportingInfo'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ExplanationOfBenefitSupportingInfo'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExplanationOfBenefitSupportingInfo'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitSupportingInfo'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitSupportingInfo'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitSupportingInfo'+v(xv), 'reason', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineExplanationOfBenefitSupportingInfoJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitSupportingInfo'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitSupportingInfoPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitDiagnosisPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitDiagnosis'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ExplanationOfBenefitDiagnosis'+v(xv), 'diagnosisCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitDiagnosis'+v(xv), 'diagnosisReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitDiagnosis'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitDiagnosis'+v(xv), 'onAdmission', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitDiagnosis'+v(xv), 'packageCode', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineExplanationOfBenefitDiagnosisJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitDiagnosis'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitDiagnosisPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitProcedurePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitProcedure'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ExplanationOfBenefitProcedure'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitProcedure'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ExplanationOfBenefitProcedure'+v(xv), 'procedureCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitProcedure'+v(xv), 'procedureReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitProcedure'+v(xv), 'udi', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExplanationOfBenefitProcedureJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitProcedure'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitProcedurePropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitInsurancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitInsurance'+v(xv), 'focal', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ExplanationOfBenefitInsurance'+v(xv), 'coverage', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineExplanationOfBenefitInsuranceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitInsurance'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitInsurancePropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitAccidentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitAccident'+v(xv), 'date', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ExplanationOfBenefitAccident'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAccident'+v(xv), 'locationAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAccident'+v(xv), 'locationReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineExplanationOfBenefitAccidentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitAccident'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitAccidentPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'revenue', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'programCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'servicedDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'servicedPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'locationCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'locationAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'locationReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'net', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'udi', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'bodySite', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'subSite', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'adjudication', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitItem'+v(xv), 'detail', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExplanationOfBenefitItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitItem'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitItemPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitItemAdjudicationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitItemAdjudication'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemAdjudication'+v(xv), 'reason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemAdjudication'+v(xv), 'amount', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemAdjudication'+v(xv), 'value', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
end;

procedure defineExplanationOfBenefitItemAdjudicationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitItemAdjudication'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitItemAdjudicationPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitItemDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitItemDetail'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetail'+v(xv), 'revenue', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetail'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetail'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetail'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetail'+v(xv), 'programCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetail'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetail'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetail'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetail'+v(xv), 'net', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetail'+v(xv), 'udi', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetail'+v(xv), 'adjudication', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetail'+v(xv), 'subDetail', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExplanationOfBenefitItemDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitItemDetail'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitItemDetailPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitItemDetailSubDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitItemDetailSubDetail'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetailSubDetail'+v(xv), 'revenue', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetailSubDetail'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetailSubDetail'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetailSubDetail'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetailSubDetail'+v(xv), 'programCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetailSubDetail'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetailSubDetail'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetailSubDetail'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetailSubDetail'+v(xv), 'net', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetailSubDetail'+v(xv), 'udi', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitItemDetailSubDetail'+v(xv), 'adjudication', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExplanationOfBenefitItemDetailSubDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitItemDetailSubDetail'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitItemDetailSubDetailPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitAddItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'provider', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'programCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'servicedDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'servicedPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'locationCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'locationAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'locationReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'net', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'bodySite', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'subSite', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'adjudication', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItem'+v(xv), 'detail', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExplanationOfBenefitAddItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitAddItem'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitAddItemPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitAddItemDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetail'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetail'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetail'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetail'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetail'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetail'+v(xv), 'net', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetail'+v(xv), 'adjudication', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetail'+v(xv), 'subDetail', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExplanationOfBenefitAddItemDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitAddItemDetail'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitAddItemDetailPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitAddItemDetailSubDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetailSubDetail'+v(xv), 'productOrService', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetailSubDetail'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetailSubDetail'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetailSubDetail'+v(xv), 'unitPrice', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetailSubDetail'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetailSubDetail'+v(xv), 'net', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitAddItemDetailSubDetail'+v(xv), 'adjudication', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExplanationOfBenefitAddItemDetailSubDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitAddItemDetailSubDetail'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitAddItemDetailSubDetailPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitTotalPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitTotal'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitTotal'+v(xv), 'amount', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineExplanationOfBenefitTotalJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitTotal'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitTotalPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitPaymentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitPayment'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitPayment'+v(xv), 'adjustment', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitPayment'+v(xv), 'adjustmentReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitPayment'+v(xv), 'date', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ExplanationOfBenefitPayment'+v(xv), 'amount', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitPayment'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineExplanationOfBenefitPaymentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitPayment'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitPaymentPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitProcessNotePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitProcessNote'+v(xv), 'number', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ExplanationOfBenefitProcessNote'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExplanationOfBenefitProcessNote'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExplanationOfBenefitProcessNote'+v(xv), 'language', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineExplanationOfBenefitProcessNoteJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitProcessNote'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitProcessNotePropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitBenefitBalancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalance'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalance'+v(xv), 'excluded', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalance'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalance'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalance'+v(xv), 'network', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalance'+v(xv), 'unit', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalance'+v(xv), 'term', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalance'+v(xv), 'financial', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExplanationOfBenefitBenefitBalanceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitBenefitBalance'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitBenefitBalancePropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitBenefitBalanceFinancialPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalanceFinancial'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalanceFinancial'+v(xv), 'allowedUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalanceFinancial'+v(xv), 'allowedString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalanceFinancial'+v(xv), 'allowedMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalanceFinancial'+v(xv), 'usedUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExplanationOfBenefitBenefitBalanceFinancial'+v(xv), 'usedMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineExplanationOfBenefitBenefitBalanceFinancialJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefitBenefitBalanceFinancial'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitBenefitBalanceFinancialPropsJs(js, def, xv);
end;

procedure defineExplanationOfBenefitPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'subType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'use', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'billablePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'created', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'enterer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'insurer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'provider', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'priority', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'fundsReserveRequested', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'fundsReserve', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'related', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'prescription', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'originalPrescription', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'payee', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'referral', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'facility', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'claim', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'claimResponse', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'outcome', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'disposition', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'preAuthRefPeriod', 'Period'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'careTeam', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'supportingInfo', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'diagnosis', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'procedure', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'precedence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'insurance', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'accident', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'item', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'addItem', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'adjudication', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'total', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'payment', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'formCode', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'form', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'processNote', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'benefitPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ExplanationOfBenefit'+v(xv), 'benefitBalance', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineExplanationOfBenefitJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ExplanationOfBenefit'+v(xv), nil, js.FHIRFactoryJs);
  defineExplanationOfBenefitPropsJs(js, def, xv);
end;

procedure defineFamilyMemberHistoryConditionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'FamilyMemberHistoryCondition'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistoryCondition'+v(xv), 'outcome', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistoryCondition'+v(xv), 'contributedToDeath', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'FamilyMemberHistoryCondition'+v(xv), 'onsetAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistoryCondition'+v(xv), 'onsetRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistoryCondition'+v(xv), 'onsetPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistoryCondition'+v(xv), 'onsetString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'FamilyMemberHistoryCondition'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineFamilyMemberHistoryConditionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('FamilyMemberHistoryCondition'+v(xv), nil, js.FHIRFactoryJs);
  defineFamilyMemberHistoryConditionPropsJs(js, def, xv);
end;

procedure defineFamilyMemberHistoryProcedurePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'FamilyMemberHistoryProcedure'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistoryProcedure'+v(xv), 'outcome', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistoryProcedure'+v(xv), 'contributedToDeath', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'FamilyMemberHistoryProcedure'+v(xv), 'performedAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistoryProcedure'+v(xv), 'performedRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistoryProcedure'+v(xv), 'performedPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistoryProcedure'+v(xv), 'performedString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'FamilyMemberHistoryProcedure'+v(xv), 'performedDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'FamilyMemberHistoryProcedure'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineFamilyMemberHistoryProcedureJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('FamilyMemberHistoryProcedure'+v(xv), nil, js.FHIRFactoryJs);
  defineFamilyMemberHistoryProcedurePropsJs(js, def, xv);
end;

procedure defineFamilyMemberHistoryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'dataAbsentReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'relationship', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'sex', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'bornPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'bornDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'bornString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'ageAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'ageRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'ageString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'estimatedAge', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'deceasedBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'deceasedAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'deceasedRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'deceasedDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'deceasedString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'condition', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'FamilyMemberHistory'+v(xv), 'procedure', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineFamilyMemberHistoryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('FamilyMemberHistory'+v(xv), nil, js.FHIRFactoryJs);
  defineFamilyMemberHistoryPropsJs(js, def, xv);
end;

procedure defineFlagPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Flag'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Flag'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Flag'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Flag'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Flag'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Flag'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Flag'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Flag'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineFlagJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Flag'+v(xv), nil, js.FHIRFactoryJs);
  defineFlagPropsJs(js, def, xv);
end;

procedure defineGoalTargetPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'GoalTarget'+v(xv), 'measure', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GoalTarget'+v(xv), 'detailQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GoalTarget'+v(xv), 'detailRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GoalTarget'+v(xv), 'detailCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GoalTarget'+v(xv), 'detailString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GoalTarget'+v(xv), 'detailBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'GoalTarget'+v(xv), 'detailInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'GoalTarget'+v(xv), 'detailRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GoalTarget'+v(xv), 'dueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'GoalTarget'+v(xv), 'dueDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineGoalTargetJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('GoalTarget'+v(xv), nil, js.FHIRFactoryJs);
  defineGoalTargetPropsJs(js, def, xv);
end;

procedure defineGoalPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Goal'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Goal'+v(xv), 'lifecycleStatus', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Goal'+v(xv), 'achievementStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Goal'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Goal'+v(xv), 'continuous', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Goal'+v(xv), 'priority', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Goal'+v(xv), 'description', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Goal'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Goal'+v(xv), 'startDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Goal'+v(xv), 'startCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Goal'+v(xv), 'target', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Goal'+v(xv), 'statusDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Goal'+v(xv), 'statusReason', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Goal'+v(xv), 'expressedBy', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Goal'+v(xv), 'addresses', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Goal'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Goal'+v(xv), 'outcome', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineGoalJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Goal'+v(xv), nil, js.FHIRFactoryJs);
  defineGoalPropsJs(js, def, xv);
end;

procedure defineGraphDefinitionLinkPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'GraphDefinitionLink'+v(xv), 'path', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinitionLink'+v(xv), 'sliceName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinitionLink'+v(xv), 'min', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'GraphDefinitionLink'+v(xv), 'max', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinitionLink'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinitionLink'+v(xv), 'target', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineGraphDefinitionLinkJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('GraphDefinitionLink'+v(xv), nil, js.FHIRFactoryJs);
  defineGraphDefinitionLinkPropsJs(js, def, xv);
end;

procedure defineGraphDefinitionLinkTargetPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'GraphDefinitionLinkTarget'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinitionLinkTarget'+v(xv), 'params', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinitionLinkTarget'+v(xv), 'profile', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinitionLinkTarget'+v(xv), 'compartment', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'GraphDefinitionLinkTarget'+v(xv), 'link', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineGraphDefinitionLinkTargetJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('GraphDefinitionLinkTarget'+v(xv), nil, js.FHIRFactoryJs);
  defineGraphDefinitionLinkTargetPropsJs(js, def, xv);
end;

procedure defineGraphDefinitionLinkTargetCompartmentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'GraphDefinitionLinkTargetCompartment'+v(xv), 'use', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinitionLinkTargetCompartment'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinitionLinkTargetCompartment'+v(xv), 'rule', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinitionLinkTargetCompartment'+v(xv), 'expression', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinitionLinkTargetCompartment'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineGraphDefinitionLinkTargetCompartmentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('GraphDefinitionLinkTargetCompartment'+v(xv), nil, js.FHIRFactoryJs);
  defineGraphDefinitionLinkTargetCompartmentPropsJs(js, def, xv);
end;

procedure defineGraphDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'start', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'profile', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GraphDefinition'+v(xv), 'link', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineGraphDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('GraphDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineGraphDefinitionPropsJs(js, def, xv);
end;

procedure defineGroupCharacteristicPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'GroupCharacteristic'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GroupCharacteristic'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GroupCharacteristic'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'GroupCharacteristic'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GroupCharacteristic'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GroupCharacteristic'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GroupCharacteristic'+v(xv), 'exclude', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'GroupCharacteristic'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineGroupCharacteristicJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('GroupCharacteristic'+v(xv), nil, js.FHIRFactoryJs);
  defineGroupCharacteristicPropsJs(js, def, xv);
end;

procedure defineGroupMemberPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'GroupMember'+v(xv), 'entity', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GroupMember'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GroupMember'+v(xv), 'inactive', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineGroupMemberJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('GroupMember'+v(xv), nil, js.FHIRFactoryJs);
  defineGroupMemberPropsJs(js, def, xv);
end;

procedure defineGroupPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Group'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Group'+v(xv), 'active', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Group'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Group'+v(xv), 'actual', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Group'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Group'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Group'+v(xv), 'quantity', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Group'+v(xv), 'managingEntity', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Group'+v(xv), 'characteristic', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Group'+v(xv), 'member', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineGroupJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Group'+v(xv), nil, js.FHIRFactoryJs);
  defineGroupPropsJs(js, def, xv);
end;

procedure defineGuidanceResponsePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'requestIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'moduleUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'moduleCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'moduleCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'occurrenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'performer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'evaluationMessage', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'outputParameters', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'result', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'GuidanceResponse'+v(xv), 'dataRequirement', 'DataRequirement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineGuidanceResponseJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('GuidanceResponse'+v(xv), nil, js.FHIRFactoryJs);
  defineGuidanceResponsePropsJs(js, def, xv);
end;

procedure defineHealthcareServiceEligibilityPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'HealthcareServiceEligibility'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'HealthcareServiceEligibility'+v(xv), 'comment', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineHealthcareServiceEligibilityJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('HealthcareServiceEligibility'+v(xv), nil, js.FHIRFactoryJs);
  defineHealthcareServiceEligibilityPropsJs(js, def, xv);
end;

procedure defineHealthcareServiceAvailableTimePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'HealthcareServiceAvailableTime'+v(xv), 'allDay', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'HealthcareServiceAvailableTime'+v(xv), 'availableStartTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'HealthcareServiceAvailableTime'+v(xv), 'availableEndTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineHealthcareServiceAvailableTimeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('HealthcareServiceAvailableTime'+v(xv), nil, js.FHIRFactoryJs);
  defineHealthcareServiceAvailableTimePropsJs(js, def, xv);
end;

procedure defineHealthcareServiceNotAvailablePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'HealthcareServiceNotAvailable'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'HealthcareServiceNotAvailable'+v(xv), 'during', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineHealthcareServiceNotAvailableJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('HealthcareServiceNotAvailable'+v(xv), nil, js.FHIRFactoryJs);
  defineHealthcareServiceNotAvailablePropsJs(js, def, xv);
end;

procedure defineHealthcareServicePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'HealthcareService'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'active', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'providedBy', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'specialty', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'comment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'extraDetails', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'photo', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'coverageArea', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'serviceProvisionCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'eligibility', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'program', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'characteristic', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'communication', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'referralMethod', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'appointmentRequired', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'availableTime', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'notAvailable', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'availabilityExceptions', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'HealthcareService'+v(xv), 'endpoint', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineHealthcareServiceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('HealthcareService'+v(xv), nil, js.FHIRFactoryJs);
  defineHealthcareServicePropsJs(js, def, xv);
end;

procedure defineImagingStudyProcedurePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImagingStudyProcedure'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImagingStudyProcedure'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineImagingStudyProcedureJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImagingStudyProcedure'+v(xv), nil, js.FHIRFactoryJs);
  defineImagingStudyProcedurePropsJs(js, def, xv);
end;

procedure defineImagingStudySeriesPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImagingStudySeries'+v(xv), 'uid', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImagingStudySeries'+v(xv), 'number', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImagingStudySeries'+v(xv), 'modality', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImagingStudySeries'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImagingStudySeries'+v(xv), 'numberOfInstances', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImagingStudySeries'+v(xv), 'endpoint', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImagingStudySeries'+v(xv), 'bodySite', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImagingStudySeries'+v(xv), 'laterality', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImagingStudySeries'+v(xv), 'specimen', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImagingStudySeries'+v(xv), 'started', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ImagingStudySeries'+v(xv), 'performer', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImagingStudySeries'+v(xv), 'instance', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineImagingStudySeriesJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImagingStudySeries'+v(xv), nil, js.FHIRFactoryJs);
  defineImagingStudySeriesPropsJs(js, def, xv);
end;

procedure defineImagingStudySeriesPerformerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImagingStudySeriesPerformer'+v(xv), 'function', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImagingStudySeriesPerformer'+v(xv), 'actor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineImagingStudySeriesPerformerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImagingStudySeriesPerformer'+v(xv), nil, js.FHIRFactoryJs);
  defineImagingStudySeriesPerformerPropsJs(js, def, xv);
end;

procedure defineImagingStudySeriesInstancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImagingStudySeriesInstance'+v(xv), 'uid', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImagingStudySeriesInstance'+v(xv), 'sopClass', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImagingStudySeriesInstance'+v(xv), 'number', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImagingStudySeriesInstance'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineImagingStudySeriesInstanceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImagingStudySeriesInstance'+v(xv), nil, js.FHIRFactoryJs);
  defineImagingStudySeriesInstancePropsJs(js, def, xv);
end;

procedure defineImagingStudyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'modality', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'started', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'referrer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'interpreter', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'endpoint', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'numberOfSeries', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'numberOfInstances', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'procedure', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImagingStudy'+v(xv), 'series', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineImagingStudyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImagingStudy'+v(xv), nil, js.FHIRFactoryJs);
  defineImagingStudyPropsJs(js, def, xv);
end;

procedure defineImmunizationPerformerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImmunizationPerformer'+v(xv), 'function', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImmunizationPerformer'+v(xv), 'actor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineImmunizationPerformerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImmunizationPerformer'+v(xv), nil, js.FHIRFactoryJs);
  defineImmunizationPerformerPropsJs(js, def, xv);
end;

procedure defineImmunizationEducationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImmunizationEducation'+v(xv), 'documentType', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImmunizationEducation'+v(xv), 'reference', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImmunizationEducation'+v(xv), 'publicationDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ImmunizationEducation'+v(xv), 'presentationDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineImmunizationEducationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImmunizationEducation'+v(xv), nil, js.FHIRFactoryJs);
  defineImmunizationEducationPropsJs(js, def, xv);
end;

procedure defineImmunizationReactionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImmunizationReaction'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ImmunizationReaction'+v(xv), 'detail', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImmunizationReaction'+v(xv), 'reported', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineImmunizationReactionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImmunizationReaction'+v(xv), nil, js.FHIRFactoryJs);
  defineImmunizationReactionPropsJs(js, def, xv);
end;

procedure defineImmunizationProtocolAppliedPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImmunizationProtocolApplied'+v(xv), 'series', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImmunizationProtocolApplied'+v(xv), 'authority', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImmunizationProtocolApplied'+v(xv), 'targetDisease', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImmunizationProtocolApplied'+v(xv), 'doseNumber', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImmunizationProtocolApplied'+v(xv), 'seriesDoses', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineImmunizationProtocolAppliedJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImmunizationProtocolApplied'+v(xv), nil, js.FHIRFactoryJs);
  defineImmunizationProtocolAppliedPropsJs(js, def, xv);
end;

procedure defineImmunizationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Immunization'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Immunization'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Immunization'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Immunization'+v(xv), 'statusReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Immunization'+v(xv), 'vaccineCode', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Immunization'+v(xv), 'manufacturer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Immunization'+v(xv), 'lotNumber', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Immunization'+v(xv), 'expirationDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Immunization'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Immunization'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Immunization'+v(xv), 'occurrenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Immunization'+v(xv), 'occurrenceString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Immunization'+v(xv), 'recorded', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Immunization'+v(xv), 'primarySource', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Immunization'+v(xv), 'informationSourceCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Immunization'+v(xv), 'informationSourceReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Immunization'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Immunization'+v(xv), 'site', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Immunization'+v(xv), 'route', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Immunization'+v(xv), 'doseQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Immunization'+v(xv), 'performer', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Immunization'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Immunization'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Immunization'+v(xv), 'isSubpotent', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Immunization'+v(xv), 'subpotentReason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Immunization'+v(xv), 'education', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Immunization'+v(xv), 'programEligibility', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Immunization'+v(xv), 'fundingSource', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Immunization'+v(xv), 'reaction', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Immunization'+v(xv), 'protocolApplied', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineImmunizationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Immunization'+v(xv), nil, js.FHIRFactoryJs);
  defineImmunizationPropsJs(js, def, xv);
end;

procedure defineImmunizationEvaluationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ImmunizationEvaluation'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImmunizationEvaluation'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImmunizationEvaluation'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImmunizationEvaluation'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ImmunizationEvaluation'+v(xv), 'authority', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImmunizationEvaluation'+v(xv), 'targetDisease', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImmunizationEvaluation'+v(xv), 'immunizationEvent', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImmunizationEvaluation'+v(xv), 'doseStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImmunizationEvaluation'+v(xv), 'doseStatusReason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImmunizationEvaluation'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImmunizationEvaluation'+v(xv), 'series', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImmunizationEvaluation'+v(xv), 'doseNumber', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImmunizationEvaluation'+v(xv), 'seriesDoses', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineImmunizationEvaluationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImmunizationEvaluation'+v(xv), nil, js.FHIRFactoryJs);
  defineImmunizationEvaluationPropsJs(js, def, xv);
end;

procedure defineImmunizationRecommendationRecommendationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImmunizationRecommendationRecommendation'+v(xv), 'vaccineCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImmunizationRecommendationRecommendation'+v(xv), 'targetDisease', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImmunizationRecommendationRecommendation'+v(xv), 'contraindicatedVaccineCode', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImmunizationRecommendationRecommendation'+v(xv), 'forecastStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImmunizationRecommendationRecommendation'+v(xv), 'forecastReason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImmunizationRecommendationRecommendation'+v(xv), 'dateCriterion', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImmunizationRecommendationRecommendation'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImmunizationRecommendationRecommendation'+v(xv), 'series', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImmunizationRecommendationRecommendation'+v(xv), 'doseNumber', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImmunizationRecommendationRecommendation'+v(xv), 'seriesDoses', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImmunizationRecommendationRecommendation'+v(xv), 'supportingImmunization', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImmunizationRecommendationRecommendation'+v(xv), 'supportingPatientInformation', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineImmunizationRecommendationRecommendationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImmunizationRecommendationRecommendation'+v(xv), nil, js.FHIRFactoryJs);
  defineImmunizationRecommendationRecommendationPropsJs(js, def, xv);
end;

procedure defineImmunizationRecommendationRecommendationDateCriterionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImmunizationRecommendationRecommendationDateCriterion'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImmunizationRecommendationRecommendationDateCriterion'+v(xv), 'value', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineImmunizationRecommendationRecommendationDateCriterionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImmunizationRecommendationRecommendationDateCriterion'+v(xv), nil, js.FHIRFactoryJs);
  defineImmunizationRecommendationRecommendationDateCriterionPropsJs(js, def, xv);
end;

procedure defineImmunizationRecommendationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ImmunizationRecommendation'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImmunizationRecommendation'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImmunizationRecommendation'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ImmunizationRecommendation'+v(xv), 'authority', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImmunizationRecommendation'+v(xv), 'recommendation', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineImmunizationRecommendationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImmunizationRecommendation'+v(xv), nil, js.FHIRFactoryJs);
  defineImmunizationRecommendationPropsJs(js, def, xv);
end;

procedure defineImplementationGuideDependsOnPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImplementationGuideDependsOn'+v(xv), 'uri', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideDependsOn'+v(xv), 'packageId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideDependsOn'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineImplementationGuideDependsOnJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImplementationGuideDependsOn'+v(xv), nil, js.FHIRFactoryJs);
  defineImplementationGuideDependsOnPropsJs(js, def, xv);
end;

procedure defineImplementationGuideGlobalPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImplementationGuideGlobal'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideGlobal'+v(xv), 'profile', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineImplementationGuideGlobalJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImplementationGuideGlobal'+v(xv), nil, js.FHIRFactoryJs);
  defineImplementationGuideGlobalPropsJs(js, def, xv);
end;

procedure defineImplementationGuideDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImplementationGuideDefinition'+v(xv), 'grouping', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImplementationGuideDefinition'+v(xv), 'resource', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImplementationGuideDefinition'+v(xv), 'page', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImplementationGuideDefinition'+v(xv), 'parameter', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImplementationGuideDefinition'+v(xv), 'template', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineImplementationGuideDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImplementationGuideDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineImplementationGuideDefinitionPropsJs(js, def, xv);
end;

procedure defineImplementationGuideDefinitionGroupingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImplementationGuideDefinitionGrouping'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideDefinitionGrouping'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineImplementationGuideDefinitionGroupingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImplementationGuideDefinitionGrouping'+v(xv), nil, js.FHIRFactoryJs);
  defineImplementationGuideDefinitionGroupingPropsJs(js, def, xv);
end;

procedure defineImplementationGuideDefinitionResourcePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImplementationGuideDefinitionResource'+v(xv), 'reference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImplementationGuideDefinitionResource'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideDefinitionResource'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideDefinitionResource'+v(xv), 'exampleBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ImplementationGuideDefinitionResource'+v(xv), 'exampleCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideDefinitionResource'+v(xv), 'groupingId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineImplementationGuideDefinitionResourceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImplementationGuideDefinitionResource'+v(xv), nil, js.FHIRFactoryJs);
  defineImplementationGuideDefinitionResourcePropsJs(js, def, xv);
end;

procedure defineImplementationGuideDefinitionPagePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImplementationGuideDefinitionPage'+v(xv), 'nameUrl', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideDefinitionPage'+v(xv), 'nameReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImplementationGuideDefinitionPage'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideDefinitionPage'+v(xv), 'generation', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideDefinitionPage'+v(xv), 'page', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineImplementationGuideDefinitionPageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImplementationGuideDefinitionPage'+v(xv), nil, js.FHIRFactoryJs);
  defineImplementationGuideDefinitionPagePropsJs(js, def, xv);
end;

procedure defineImplementationGuideDefinitionParameterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImplementationGuideDefinitionParameter'+v(xv), 'code', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideDefinitionParameter'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineImplementationGuideDefinitionParameterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImplementationGuideDefinitionParameter'+v(xv), nil, js.FHIRFactoryJs);
  defineImplementationGuideDefinitionParameterPropsJs(js, def, xv);
end;

procedure defineImplementationGuideDefinitionTemplatePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImplementationGuideDefinitionTemplate'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideDefinitionTemplate'+v(xv), 'source', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideDefinitionTemplate'+v(xv), 'scope', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineImplementationGuideDefinitionTemplateJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImplementationGuideDefinitionTemplate'+v(xv), nil, js.FHIRFactoryJs);
  defineImplementationGuideDefinitionTemplatePropsJs(js, def, xv);
end;

procedure defineImplementationGuideManifestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImplementationGuideManifest'+v(xv), 'rendering', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideManifest'+v(xv), 'resource', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImplementationGuideManifest'+v(xv), 'page', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineImplementationGuideManifestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImplementationGuideManifest'+v(xv), nil, js.FHIRFactoryJs);
  defineImplementationGuideManifestPropsJs(js, def, xv);
end;

procedure defineImplementationGuideManifestResourcePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImplementationGuideManifestResource'+v(xv), 'reference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImplementationGuideManifestResource'+v(xv), 'exampleBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ImplementationGuideManifestResource'+v(xv), 'exampleCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideManifestResource'+v(xv), 'relativePath', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineImplementationGuideManifestResourceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImplementationGuideManifestResource'+v(xv), nil, js.FHIRFactoryJs);
  defineImplementationGuideManifestResourcePropsJs(js, def, xv);
end;

procedure defineImplementationGuideManifestPagePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ImplementationGuideManifestPage'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuideManifestPage'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineImplementationGuideManifestPageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImplementationGuideManifestPage'+v(xv), nil, js.FHIRFactoryJs);
  defineImplementationGuideManifestPagePropsJs(js, def, xv);
end;

procedure defineImplementationGuidePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'packageId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'license', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'dependsOn', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'global', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'definition', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ImplementationGuide'+v(xv), 'manifest', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineImplementationGuideJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ImplementationGuide'+v(xv), nil, js.FHIRFactoryJs);
  defineImplementationGuidePropsJs(js, def, xv);
end;

procedure defineIngredientSubstancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'IngredientSubstance'+v(xv), 'codeCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSubstance'+v(xv), 'codeReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSubstance'+v(xv), 'strength', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineIngredientSubstanceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('IngredientSubstance'+v(xv), nil, js.FHIRFactoryJs);
  defineIngredientSubstancePropsJs(js, def, xv);
end;

procedure defineIngredientSubstanceStrengthPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'IngredientSubstanceStrength'+v(xv), 'presentation', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSubstanceStrength'+v(xv), 'presentationHighLimit', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSubstanceStrength'+v(xv), 'presentationText', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'IngredientSubstanceStrength'+v(xv), 'concentration', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSubstanceStrength'+v(xv), 'concentrationHighLimit', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSubstanceStrength'+v(xv), 'concentrationText', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'IngredientSubstanceStrength'+v(xv), 'measurementPoint', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'IngredientSubstanceStrength'+v(xv), 'country', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'IngredientSubstanceStrength'+v(xv), 'referenceStrength', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineIngredientSubstanceStrengthJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('IngredientSubstanceStrength'+v(xv), nil, js.FHIRFactoryJs);
  defineIngredientSubstanceStrengthPropsJs(js, def, xv);
end;

procedure defineIngredientSubstanceStrengthReferenceStrengthPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'IngredientSubstanceStrengthReferenceStrength'+v(xv), 'substanceCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSubstanceStrengthReferenceStrength'+v(xv), 'substanceReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSubstanceStrengthReferenceStrength'+v(xv), 'strength', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSubstanceStrengthReferenceStrength'+v(xv), 'strengthHighLimit', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSubstanceStrengthReferenceStrength'+v(xv), 'measurementPoint', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'IngredientSubstanceStrengthReferenceStrength'+v(xv), 'country', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineIngredientSubstanceStrengthReferenceStrengthJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('IngredientSubstanceStrengthReferenceStrength'+v(xv), nil, js.FHIRFactoryJs);
  defineIngredientSubstanceStrengthReferenceStrengthPropsJs(js, def, xv);
end;

procedure defineIngredientSpecifiedSubstancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'IngredientSpecifiedSubstance'+v(xv), 'codeCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSpecifiedSubstance'+v(xv), 'codeReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSpecifiedSubstance'+v(xv), 'group', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSpecifiedSubstance'+v(xv), 'confidentiality', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'IngredientSpecifiedSubstance'+v(xv), 'strength', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineIngredientSpecifiedSubstanceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('IngredientSpecifiedSubstance'+v(xv), nil, js.FHIRFactoryJs);
  defineIngredientSpecifiedSubstancePropsJs(js, def, xv);
end;

procedure defineIngredientPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Ingredient'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Ingredient'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Ingredient'+v(xv), 'function', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Ingredient'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Ingredient'+v(xv), 'allergenicIndicator', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Ingredient'+v(xv), 'manufacturer', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Ingredient'+v(xv), 'substance', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Ingredient'+v(xv), 'specifiedSubstance', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineIngredientJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Ingredient'+v(xv), nil, js.FHIRFactoryJs);
  defineIngredientPropsJs(js, def, xv);
end;

procedure defineInsurancePlanContactPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'InsurancePlanContact'+v(xv), 'purpose', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlanContact'+v(xv), 'name', 'HumanName'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlanContact'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlanContact'+v(xv), 'address', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineInsurancePlanContactJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('InsurancePlanContact'+v(xv), nil, js.FHIRFactoryJs);
  defineInsurancePlanContactPropsJs(js, def, xv);
end;

procedure defineInsurancePlanCoveragePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'InsurancePlanCoverage'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlanCoverage'+v(xv), 'network', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlanCoverage'+v(xv), 'benefit', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineInsurancePlanCoverageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('InsurancePlanCoverage'+v(xv), nil, js.FHIRFactoryJs);
  defineInsurancePlanCoveragePropsJs(js, def, xv);
end;

procedure defineInsurancePlanCoverageBenefitPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'InsurancePlanCoverageBenefit'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlanCoverageBenefit'+v(xv), 'requirement', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'InsurancePlanCoverageBenefit'+v(xv), 'limit', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineInsurancePlanCoverageBenefitJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('InsurancePlanCoverageBenefit'+v(xv), nil, js.FHIRFactoryJs);
  defineInsurancePlanCoverageBenefitPropsJs(js, def, xv);
end;

procedure defineInsurancePlanCoverageBenefitLimitPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'InsurancePlanCoverageBenefitLimit'+v(xv), 'value', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlanCoverageBenefitLimit'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineInsurancePlanCoverageBenefitLimitJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('InsurancePlanCoverageBenefitLimit'+v(xv), nil, js.FHIRFactoryJs);
  defineInsurancePlanCoverageBenefitLimitPropsJs(js, def, xv);
end;

procedure defineInsurancePlanPlanPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'InsurancePlanPlan'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlanPlan'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlanPlan'+v(xv), 'coverageArea', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlanPlan'+v(xv), 'network', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlanPlan'+v(xv), 'generalCost', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlanPlan'+v(xv), 'specificCost', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineInsurancePlanPlanJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('InsurancePlanPlan'+v(xv), nil, js.FHIRFactoryJs);
  defineInsurancePlanPlanPropsJs(js, def, xv);
end;

procedure defineInsurancePlanPlanGeneralCostPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'InsurancePlanPlanGeneralCost'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlanPlanGeneralCost'+v(xv), 'groupSize', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'InsurancePlanPlanGeneralCost'+v(xv), 'cost', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlanPlanGeneralCost'+v(xv), 'comment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineInsurancePlanPlanGeneralCostJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('InsurancePlanPlanGeneralCost'+v(xv), nil, js.FHIRFactoryJs);
  defineInsurancePlanPlanGeneralCostPropsJs(js, def, xv);
end;

procedure defineInsurancePlanPlanSpecificCostPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'InsurancePlanPlanSpecificCost'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlanPlanSpecificCost'+v(xv), 'benefit', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineInsurancePlanPlanSpecificCostJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('InsurancePlanPlanSpecificCost'+v(xv), nil, js.FHIRFactoryJs);
  defineInsurancePlanPlanSpecificCostPropsJs(js, def, xv);
end;

procedure defineInsurancePlanPlanSpecificCostBenefitPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'InsurancePlanPlanSpecificCostBenefit'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlanPlanSpecificCostBenefit'+v(xv), 'cost', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineInsurancePlanPlanSpecificCostBenefitJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('InsurancePlanPlanSpecificCostBenefit'+v(xv), nil, js.FHIRFactoryJs);
  defineInsurancePlanPlanSpecificCostBenefitPropsJs(js, def, xv);
end;

procedure defineInsurancePlanPlanSpecificCostBenefitCostPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'InsurancePlanPlanSpecificCostBenefitCost'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlanPlanSpecificCostBenefitCost'+v(xv), 'applicability', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlanPlanSpecificCostBenefitCost'+v(xv), 'qualifiers', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlanPlanSpecificCostBenefitCost'+v(xv), 'value', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineInsurancePlanPlanSpecificCostBenefitCostJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('InsurancePlanPlanSpecificCostBenefitCost'+v(xv), nil, js.FHIRFactoryJs);
  defineInsurancePlanPlanSpecificCostBenefitCostPropsJs(js, def, xv);
end;

procedure defineInsurancePlanPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'InsurancePlan'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlan'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'InsurancePlan'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlan'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'InsurancePlan'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlan'+v(xv), 'ownedBy', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlan'+v(xv), 'administeredBy', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InsurancePlan'+v(xv), 'coverageArea', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlan'+v(xv), 'contact', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlan'+v(xv), 'endpoint', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlan'+v(xv), 'network', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlan'+v(xv), 'coverage', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'InsurancePlan'+v(xv), 'plan', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineInsurancePlanJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('InsurancePlan'+v(xv), nil, js.FHIRFactoryJs);
  defineInsurancePlanPropsJs(js, def, xv);
end;

procedure defineInvoiceParticipantPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'InvoiceParticipant'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InvoiceParticipant'+v(xv), 'actor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineInvoiceParticipantJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('InvoiceParticipant'+v(xv), nil, js.FHIRFactoryJs);
  defineInvoiceParticipantPropsJs(js, def, xv);
end;

procedure defineInvoiceLineItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'InvoiceLineItem'+v(xv), 'sequence', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'InvoiceLineItem'+v(xv), 'chargeItemReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InvoiceLineItem'+v(xv), 'chargeItemCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InvoiceLineItem'+v(xv), 'priceComponent', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineInvoiceLineItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('InvoiceLineItem'+v(xv), nil, js.FHIRFactoryJs);
  defineInvoiceLineItemPropsJs(js, def, xv);
end;

procedure defineInvoiceLineItemPriceComponentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'InvoiceLineItemPriceComponent'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'InvoiceLineItemPriceComponent'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'InvoiceLineItemPriceComponent'+v(xv), 'factor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'InvoiceLineItemPriceComponent'+v(xv), 'amount', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineInvoiceLineItemPriceComponentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('InvoiceLineItemPriceComponent'+v(xv), nil, js.FHIRFactoryJs);
  defineInvoiceLineItemPriceComponentPropsJs(js, def, xv);
end;

procedure defineInvoicePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Invoice'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Invoice'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Invoice'+v(xv), 'cancelledReason', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Invoice'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Invoice'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Invoice'+v(xv), 'recipient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Invoice'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Invoice'+v(xv), 'participant', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Invoice'+v(xv), 'issuer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Invoice'+v(xv), 'account', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Invoice'+v(xv), 'lineItem', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Invoice'+v(xv), 'totalPriceComponent', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Invoice'+v(xv), 'totalNet', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Invoice'+v(xv), 'totalGross', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Invoice'+v(xv), 'paymentTerms', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Invoice'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineInvoiceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Invoice'+v(xv), nil, js.FHIRFactoryJs);
  defineInvoicePropsJs(js, def, xv);
end;

procedure defineLibraryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineMetadataResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Library'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Library'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Library'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Library'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Library'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Library'+v(xv), 'subtitle', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Library'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Library'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Library'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Library'+v(xv), 'subjectCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Library'+v(xv), 'subjectReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Library'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Library'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Library'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Library'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Library'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Library'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Library'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Library'+v(xv), 'usage', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Library'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Library'+v(xv), 'approvalDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Library'+v(xv), 'lastReviewDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Library'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Library'+v(xv), 'topic', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Library'+v(xv), 'author', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Library'+v(xv), 'editor', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Library'+v(xv), 'reviewer', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Library'+v(xv), 'endorser', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Library'+v(xv), 'relatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Library'+v(xv), 'parameter', 'ParameterDefinition'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Library'+v(xv), 'dataRequirement', 'DataRequirement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Library'+v(xv), 'content', 'Attachment'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineLibraryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Library'+v(xv), nil, js.FHIRFactoryJs);
  defineLibraryPropsJs(js, def, xv);
end;

procedure defineLinkageItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'LinkageItem'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'LinkageItem'+v(xv), 'resource', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineLinkageItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('LinkageItem'+v(xv), nil, js.FHIRFactoryJs);
  defineLinkageItemPropsJs(js, def, xv);
end;

procedure defineLinkagePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Linkage'+v(xv), 'active', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Linkage'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Linkage'+v(xv), 'item', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineLinkageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Linkage'+v(xv), nil, js.FHIRFactoryJs);
  defineLinkagePropsJs(js, def, xv);
end;

procedure defineListEntryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ListEntry'+v(xv), 'flag', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ListEntry'+v(xv), 'deleted', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ListEntry'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ListEntry'+v(xv), 'item', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineListEntryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ListEntry'+v(xv), nil, js.FHIRFactoryJs);
  defineListEntryPropsJs(js, def, xv);
end;

procedure defineListPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'List'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'List'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'List'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'List'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'List'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'List'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'List'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'List'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'List'+v(xv), 'source', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'List'+v(xv), 'orderedBy', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'List'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'List'+v(xv), 'entry', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'List'+v(xv), 'emptyReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineListJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('List'+v(xv), nil, js.FHIRFactoryJs);
  defineListPropsJs(js, def, xv);
end;

procedure defineLocationPositionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'LocationPosition'+v(xv), 'longitude', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'LocationPosition'+v(xv), 'latitude', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'LocationPosition'+v(xv), 'altitude', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
end;

procedure defineLocationPositionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('LocationPosition'+v(xv), nil, js.FHIRFactoryJs);
  defineLocationPositionPropsJs(js, def, xv);
end;

procedure defineLocationHoursOfOperationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'LocationHoursOfOperation'+v(xv), 'allDay', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'LocationHoursOfOperation'+v(xv), 'openingTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'LocationHoursOfOperation'+v(xv), 'closingTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineLocationHoursOfOperationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('LocationHoursOfOperation'+v(xv), nil, js.FHIRFactoryJs);
  defineLocationHoursOfOperationPropsJs(js, def, xv);
end;

procedure defineLocationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Location'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Location'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Location'+v(xv), 'operationalStatus', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Location'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Location'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Location'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Location'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Location'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Location'+v(xv), 'address', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Location'+v(xv), 'physicalType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Location'+v(xv), 'position', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Location'+v(xv), 'managingOrganization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Location'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Location'+v(xv), 'hoursOfOperation', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Location'+v(xv), 'availabilityExceptions', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Location'+v(xv), 'endpoint', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineLocationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Location'+v(xv), nil, js.FHIRFactoryJs);
  defineLocationPropsJs(js, def, xv);
end;

procedure defineManufacturedItemDefinitionPropertyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ManufacturedItemDefinitionProperty'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ManufacturedItemDefinitionProperty'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ManufacturedItemDefinitionProperty'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ManufacturedItemDefinitionProperty'+v(xv), 'valueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ManufacturedItemDefinitionProperty'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ManufacturedItemDefinitionProperty'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineManufacturedItemDefinitionPropertyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ManufacturedItemDefinitionProperty'+v(xv), nil, js.FHIRFactoryJs);
  defineManufacturedItemDefinitionPropertyPropsJs(js, def, xv);
end;

procedure defineManufacturedItemDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ManufacturedItemDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ManufacturedItemDefinition'+v(xv), 'manufacturedDoseForm', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ManufacturedItemDefinition'+v(xv), 'unitOfPresentation', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ManufacturedItemDefinition'+v(xv), 'manufacturer', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ManufacturedItemDefinition'+v(xv), 'ingredient', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ManufacturedItemDefinition'+v(xv), 'property', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineManufacturedItemDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ManufacturedItemDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineManufacturedItemDefinitionPropsJs(js, def, xv);
end;

procedure defineMeasureGroupPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MeasureGroup'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureGroup'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MeasureGroup'+v(xv), 'population', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MeasureGroup'+v(xv), 'stratifier', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMeasureGroupJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MeasureGroup'+v(xv), nil, js.FHIRFactoryJs);
  defineMeasureGroupPropsJs(js, def, xv);
end;

procedure defineMeasureGroupPopulationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MeasureGroupPopulation'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureGroupPopulation'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MeasureGroupPopulation'+v(xv), 'criteria', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMeasureGroupPopulationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MeasureGroupPopulation'+v(xv), nil, js.FHIRFactoryJs);
  defineMeasureGroupPopulationPropsJs(js, def, xv);
end;

procedure defineMeasureGroupStratifierPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MeasureGroupStratifier'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureGroupStratifier'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MeasureGroupStratifier'+v(xv), 'criteria', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureGroupStratifier'+v(xv), 'component', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMeasureGroupStratifierJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MeasureGroupStratifier'+v(xv), nil, js.FHIRFactoryJs);
  defineMeasureGroupStratifierPropsJs(js, def, xv);
end;

procedure defineMeasureGroupStratifierComponentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MeasureGroupStratifierComponent'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureGroupStratifierComponent'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MeasureGroupStratifierComponent'+v(xv), 'criteria', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMeasureGroupStratifierComponentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MeasureGroupStratifierComponent'+v(xv), nil, js.FHIRFactoryJs);
  defineMeasureGroupStratifierComponentPropsJs(js, def, xv);
end;

procedure defineMeasureSupplementalDataPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MeasureSupplementalData'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureSupplementalData'+v(xv), 'usage', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MeasureSupplementalData'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MeasureSupplementalData'+v(xv), 'criteria', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMeasureSupplementalDataJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MeasureSupplementalData'+v(xv), nil, js.FHIRFactoryJs);
  defineMeasureSupplementalDataPropsJs(js, def, xv);
end;

procedure defineMeasurePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineMetadataResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Measure'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Measure'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'subtitle', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Measure'+v(xv), 'subjectCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Measure'+v(xv), 'subjectReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Measure'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Measure'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Measure'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Measure'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Measure'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'usage', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'approvalDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Measure'+v(xv), 'lastReviewDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Measure'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Measure'+v(xv), 'topic', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Measure'+v(xv), 'author', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Measure'+v(xv), 'editor', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Measure'+v(xv), 'reviewer', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Measure'+v(xv), 'endorser', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Measure'+v(xv), 'relatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Measure'+v(xv), 'disclaimer', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'scoring', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Measure'+v(xv), 'compositeScoring', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Measure'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Measure'+v(xv), 'riskAdjustment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'rateAggregation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'rationale', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'clinicalRecommendationStatement', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'improvementNotation', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Measure'+v(xv), 'guidance', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Measure'+v(xv), 'group', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Measure'+v(xv), 'supplementalData', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMeasureJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Measure'+v(xv), nil, js.FHIRFactoryJs);
  defineMeasurePropsJs(js, def, xv);
end;

procedure defineMeasureReportGroupPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MeasureReportGroup'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureReportGroup'+v(xv), 'population', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MeasureReportGroup'+v(xv), 'measureScore', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureReportGroup'+v(xv), 'stratifier', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMeasureReportGroupJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MeasureReportGroup'+v(xv), nil, js.FHIRFactoryJs);
  defineMeasureReportGroupPropsJs(js, def, xv);
end;

procedure defineMeasureReportGroupPopulationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MeasureReportGroupPopulation'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureReportGroupPopulation'+v(xv), 'count', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'MeasureReportGroupPopulation'+v(xv), 'subjectResults', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMeasureReportGroupPopulationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MeasureReportGroupPopulation'+v(xv), nil, js.FHIRFactoryJs);
  defineMeasureReportGroupPopulationPropsJs(js, def, xv);
end;

procedure defineMeasureReportGroupStratifierPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MeasureReportGroupStratifier'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MeasureReportGroupStratifier'+v(xv), 'stratum', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMeasureReportGroupStratifierJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MeasureReportGroupStratifier'+v(xv), nil, js.FHIRFactoryJs);
  defineMeasureReportGroupStratifierPropsJs(js, def, xv);
end;

procedure defineMeasureReportGroupStratifierStratumPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MeasureReportGroupStratifierStratum'+v(xv), 'value', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureReportGroupStratifierStratum'+v(xv), 'component', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MeasureReportGroupStratifierStratum'+v(xv), 'population', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MeasureReportGroupStratifierStratum'+v(xv), 'measureScore', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMeasureReportGroupStratifierStratumJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MeasureReportGroupStratifierStratum'+v(xv), nil, js.FHIRFactoryJs);
  defineMeasureReportGroupStratifierStratumPropsJs(js, def, xv);
end;

procedure defineMeasureReportGroupStratifierStratumComponentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MeasureReportGroupStratifierStratumComponent'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureReportGroupStratifierStratumComponent'+v(xv), 'value', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMeasureReportGroupStratifierStratumComponentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MeasureReportGroupStratifierStratumComponent'+v(xv), nil, js.FHIRFactoryJs);
  defineMeasureReportGroupStratifierStratumComponentPropsJs(js, def, xv);
end;

procedure defineMeasureReportGroupStratifierStratumPopulationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MeasureReportGroupStratifierStratumPopulation'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureReportGroupStratifierStratumPopulation'+v(xv), 'count', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'MeasureReportGroupStratifierStratumPopulation'+v(xv), 'subjectResults', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMeasureReportGroupStratifierStratumPopulationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MeasureReportGroupStratifierStratumPopulation'+v(xv), nil, js.FHIRFactoryJs);
  defineMeasureReportGroupStratifierStratumPopulationPropsJs(js, def, xv);
end;

procedure defineMeasureReportPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'MeasureReport'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MeasureReport'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MeasureReport'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MeasureReport'+v(xv), 'measure', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MeasureReport'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureReport'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'MeasureReport'+v(xv), 'reporter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureReport'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureReport'+v(xv), 'improvementNotation', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MeasureReport'+v(xv), 'group', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MeasureReport'+v(xv), 'evaluatedResource', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMeasureReportJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MeasureReport'+v(xv), nil, js.FHIRFactoryJs);
  defineMeasureReportPropsJs(js, def, xv);
end;

procedure defineMedicationIngredientPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationIngredient'+v(xv), 'item', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationIngredient'+v(xv), 'isActive', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'MedicationIngredient'+v(xv), 'strengthRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationIngredient'+v(xv), 'strengthCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationIngredient'+v(xv), 'strengthQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationIngredientJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationIngredient'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationIngredientPropsJs(js, def, xv);
end;

procedure defineMedicationBatchPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationBatch'+v(xv), 'lotNumber', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationBatch'+v(xv), 'expirationDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineMedicationBatchJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationBatch'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationBatchPropsJs(js, def, xv);
end;

procedure defineMedicationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Medication'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Medication'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Medication'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Medication'+v(xv), 'manufacturer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Medication'+v(xv), 'doseForm', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Medication'+v(xv), 'amount', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Medication'+v(xv), 'ingredient', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Medication'+v(xv), 'batch', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Medication'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationPropsJs(js, def, xv);
end;

procedure defineMedicationAdministrationPerformerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationAdministrationPerformer'+v(xv), 'function', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationAdministrationPerformer'+v(xv), 'actor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationAdministrationPerformerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationAdministrationPerformer'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationAdministrationPerformerPropsJs(js, def, xv);
end;

procedure defineMedicationAdministrationDosagePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationAdministrationDosage'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationAdministrationDosage'+v(xv), 'site', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationAdministrationDosage'+v(xv), 'route', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationAdministrationDosage'+v(xv), 'method', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationAdministrationDosage'+v(xv), 'dose', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationAdministrationDosage'+v(xv), 'rateRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationAdministrationDosage'+v(xv), 'rateQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationAdministrationDosageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationAdministrationDosage'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationAdministrationDosagePropsJs(js, def, xv);
end;

procedure defineMedicationAdministrationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'statusReason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'medication', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'supportingInformation', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'occurenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'occurencePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'recorded', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'performer', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'request', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'device', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'dosage', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationAdministration'+v(xv), 'eventHistory', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMedicationAdministrationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationAdministration'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationAdministrationPropsJs(js, def, xv);
end;

procedure defineMedicationDispensePerformerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationDispensePerformer'+v(xv), 'function', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationDispensePerformer'+v(xv), 'actor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationDispensePerformerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationDispensePerformer'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationDispensePerformerPropsJs(js, def, xv);
end;

procedure defineMedicationDispenseSubstitutionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationDispenseSubstitution'+v(xv), 'wasSubstituted', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'MedicationDispenseSubstitution'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationDispenseSubstitution'+v(xv), 'reason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationDispenseSubstitution'+v(xv), 'responsibleParty', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationDispenseSubstitutionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationDispenseSubstitution'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationDispenseSubstitutionPropsJs(js, def, xv);
end;

procedure defineMedicationDispensePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'statusReason', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'medication', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'supportingInformation', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'performer', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'authorizingPrescription', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'daysSupply', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'whenPrepared', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'whenHandedOver', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'destination', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'receiver', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'renderedDosageInstruction', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'dosageInstruction', 'Dosage'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'substitution', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'detectedIssue', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationDispense'+v(xv), 'eventHistory', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMedicationDispenseJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationDispense'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationDispensePropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeRelatedMedicationKnowledgePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeRelatedMedicationKnowledge'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeRelatedMedicationKnowledge'+v(xv), 'reference', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMedicationKnowledgeRelatedMedicationKnowledgeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeRelatedMedicationKnowledge'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeRelatedMedicationKnowledgePropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeMonographPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeMonograph'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeMonograph'+v(xv), 'source', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationKnowledgeMonographJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeMonograph'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeMonographPropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeIngredientPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeIngredient'+v(xv), 'item', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeIngredient'+v(xv), 'isActive', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'MedicationKnowledgeIngredient'+v(xv), 'strengthRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeIngredient'+v(xv), 'strengthCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeIngredient'+v(xv), 'strengthQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationKnowledgeIngredientJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeIngredient'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeIngredientPropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeCostPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeCost'+v(xv), 'effectiveDate', 'Period'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledgeCost'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeCost'+v(xv), 'source', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationKnowledgeCost'+v(xv), 'costMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeCost'+v(xv), 'costCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationKnowledgeCostJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeCost'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeCostPropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeMonitoringProgramPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeMonitoringProgram'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeMonitoringProgram'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineMedicationKnowledgeMonitoringProgramJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeMonitoringProgram'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeMonitoringProgramPropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeAdministrationGuidelinePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeAdministrationGuideline'+v(xv), 'dosage', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledgeAdministrationGuideline'+v(xv), 'indication', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeAdministrationGuideline'+v(xv), 'patientCharacteristic', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMedicationKnowledgeAdministrationGuidelineJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeAdministrationGuideline'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeAdministrationGuidelinePropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeAdministrationGuidelineDosagePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeAdministrationGuidelineDosage'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeAdministrationGuidelineDosage'+v(xv), 'dosage', 'Dosage'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMedicationKnowledgeAdministrationGuidelineDosageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeAdministrationGuidelineDosage'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeAdministrationGuidelineDosagePropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeAdministrationGuidelinePatientCharacteristicPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeAdministrationGuidelinePatientCharacteristic'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeAdministrationGuidelinePatientCharacteristic'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeAdministrationGuidelinePatientCharacteristic'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationKnowledgeAdministrationGuidelinePatientCharacteristicJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeAdministrationGuidelinePatientCharacteristic'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeAdministrationGuidelinePatientCharacteristicPropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeMedicineClassificationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeMedicineClassification'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeMedicineClassification'+v(xv), 'classification', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMedicationKnowledgeMedicineClassificationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeMedicineClassification'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeMedicineClassificationPropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgePackagingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgePackaging'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgePackaging'+v(xv), 'cost', '??'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgePackaging'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgePackaging'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgePackaging'+v(xv), 'device', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgePackaging'+v(xv), 'material', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgePackaging'+v(xv), 'packaging', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMedicationKnowledgePackagingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgePackaging'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgePackagingPropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeDrugCharacteristicPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeDrugCharacteristic'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeDrugCharacteristic'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeDrugCharacteristic'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationKnowledgeDrugCharacteristic'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeDrugCharacteristic'+v(xv), 'valueBase64Binary', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'MedicationKnowledgeDrugCharacteristic'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationKnowledgeDrugCharacteristicJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeDrugCharacteristic'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeDrugCharacteristicPropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeRegulatoryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeRegulatory'+v(xv), 'regulatoryAuthority', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeRegulatory'+v(xv), 'substitution', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledgeRegulatory'+v(xv), 'schedule', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledgeRegulatory'+v(xv), 'maxDispense', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationKnowledgeRegulatoryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeRegulatory'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeRegulatoryPropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeRegulatorySubstitutionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeRegulatorySubstitution'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeRegulatorySubstitution'+v(xv), 'allowed', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineMedicationKnowledgeRegulatorySubstitutionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeRegulatorySubstitution'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeRegulatorySubstitutionPropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeRegulatoryMaxDispensePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeRegulatoryMaxDispense'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeRegulatoryMaxDispense'+v(xv), 'period', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationKnowledgeRegulatoryMaxDispenseJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeRegulatoryMaxDispense'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeRegulatoryMaxDispensePropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgeKineticCharacteristicPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledgeKineticCharacteristic'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeKineticCharacteristic'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledgeKineticCharacteristic'+v(xv), 'valueDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationKnowledgeKineticCharacteristicJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledgeKineticCharacteristic'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgeKineticCharacteristicPropsJs(js, def, xv);
end;

procedure defineMedicationKnowledgePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'manufacturer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'doseForm', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'amount', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'relatedMedicationKnowledge', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'associatedMedication', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'associatedDefinition', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'productType', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'monograph', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'ingredient', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'device', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'preparationInstruction', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'intendedRoute', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'cost', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'monitoringProgram', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'administrationGuideline', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'medicineClassification', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'packaging', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'drugCharacteristic', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'clinicalUseIssue', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'regulatory', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationKnowledge'+v(xv), 'kineticCharacteristic', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMedicationKnowledgeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationKnowledge'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationKnowledgePropsJs(js, def, xv);
end;

procedure defineMedicationRequestDispenseRequestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationRequestDispenseRequest'+v(xv), 'initialFill', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequestDispenseRequest'+v(xv), 'dispenseInterval', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequestDispenseRequest'+v(xv), 'validityPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequestDispenseRequest'+v(xv), 'numberOfRepeatsAllowed', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationRequestDispenseRequest'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequestDispenseRequest'+v(xv), 'expectedSupplyDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequestDispenseRequest'+v(xv), 'dispenser', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationRequestDispenseRequestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationRequestDispenseRequest'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationRequestDispenseRequestPropsJs(js, def, xv);
end;

procedure defineMedicationRequestDispenseRequestInitialFillPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationRequestDispenseRequestInitialFill'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequestDispenseRequestInitialFill'+v(xv), 'duration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationRequestDispenseRequestInitialFillJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationRequestDispenseRequestInitialFill'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationRequestDispenseRequestInitialFillPropsJs(js, def, xv);
end;

procedure defineMedicationRequestSubstitutionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicationRequestSubstitution'+v(xv), 'allowedBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'MedicationRequestSubstitution'+v(xv), 'allowedCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequestSubstitution'+v(xv), 'reason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicationRequestSubstitutionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationRequestSubstitution'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationRequestSubstitutionPropsJs(js, def, xv);
end;

procedure defineMedicationRequestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'statusReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'intent', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'priority', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'doNotPerform', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'reported', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'informationSource', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'medication', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'supportingInformation', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'authoredOn', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'requester', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'performer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'performerType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'recorder', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'groupIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'courseOfTherapyType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'insurance', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'renderedDosageInstruction', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'dosageInstruction', 'Dosage'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'dispenseRequest', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'substitution', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'priorPrescription', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'detectedIssue', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationRequest'+v(xv), 'eventHistory', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMedicationRequestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationRequest'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationRequestPropsJs(js, def, xv);
end;

procedure defineMedicationUsagePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'statusReason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'medication', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'effectiveDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'dateAsserted', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'informationSource', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'derivedFrom', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'renderedDosageInstruction', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'dosage', 'Dosage'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicationUsage'+v(xv), 'takenAsOrdered', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineMedicationUsageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicationUsage'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicationUsagePropsJs(js, def, xv);
end;

procedure defineMedicinalProductDefinitionContactPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicinalProductDefinitionContact'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinitionContact'+v(xv), 'contact', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicinalProductDefinitionContactJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicinalProductDefinitionContact'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicinalProductDefinitionContactPropsJs(js, def, xv);
end;

procedure defineMedicinalProductDefinitionNamePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicinalProductDefinitionName'+v(xv), 'productName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicinalProductDefinitionName'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinitionName'+v(xv), 'namePart', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinitionName'+v(xv), 'countryLanguage', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMedicinalProductDefinitionNameJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicinalProductDefinitionName'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicinalProductDefinitionNamePropsJs(js, def, xv);
end;

procedure defineMedicinalProductDefinitionNameNamePartPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicinalProductDefinitionNameNamePart'+v(xv), 'part', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicinalProductDefinitionNameNamePart'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicinalProductDefinitionNameNamePartJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicinalProductDefinitionNameNamePart'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicinalProductDefinitionNameNamePartPropsJs(js, def, xv);
end;

procedure defineMedicinalProductDefinitionNameCountryLanguagePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicinalProductDefinitionNameCountryLanguage'+v(xv), 'country', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinitionNameCountryLanguage'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinitionNameCountryLanguage'+v(xv), 'language', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicinalProductDefinitionNameCountryLanguageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicinalProductDefinitionNameCountryLanguage'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicinalProductDefinitionNameCountryLanguagePropsJs(js, def, xv);
end;

procedure defineMedicinalProductDefinitionCrossReferencePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicinalProductDefinitionCrossReference'+v(xv), 'product', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinitionCrossReference'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicinalProductDefinitionCrossReferenceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicinalProductDefinitionCrossReference'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicinalProductDefinitionCrossReferencePropsJs(js, def, xv);
end;

procedure defineMedicinalProductDefinitionManufacturingBusinessOperationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MedicinalProductDefinitionManufacturingBusinessOperation'+v(xv), 'type', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinitionManufacturingBusinessOperation'+v(xv), 'effectiveDate', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinitionManufacturingBusinessOperation'+v(xv), 'manufacturer', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinitionManufacturingBusinessOperation'+v(xv), 'authorization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinitionManufacturingBusinessOperation'+v(xv), 'confidentialityIndicator', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMedicinalProductDefinitionManufacturingBusinessOperationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicinalProductDefinitionManufacturingBusinessOperation'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicinalProductDefinitionManufacturingBusinessOperationPropsJs(js, def, xv);
end;

procedure defineMedicinalProductDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'domain', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'status', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'statusDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'combinedPharmaceuticalDoseForm', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'indication', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'legalStatusOfSupply', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'additionalMonitoringIndicator', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'specialMeasures', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'paediatricUseIndicator', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'classification', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'characteristic', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'marketingStatus', 'MarketingStatus'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'pharmaceuticalProduct', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'packagedMedicinalProduct', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'ingredient', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'impurity', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'attachedDocument', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'masterFile', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'contact', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'clinicalTrial', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'name', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'crossReference', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MedicinalProductDefinition'+v(xv), 'manufacturingBusinessOperation', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMedicinalProductDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MedicinalProductDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineMedicinalProductDefinitionPropsJs(js, def, xv);
end;

procedure defineMessageDefinitionFocusPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MessageDefinitionFocus'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinitionFocus'+v(xv), 'profile', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinitionFocus'+v(xv), 'min', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinitionFocus'+v(xv), 'max', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineMessageDefinitionFocusJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MessageDefinitionFocus'+v(xv), nil, js.FHIRFactoryJs);
  defineMessageDefinitionFocusPropsJs(js, def, xv);
end;

procedure defineMessageDefinitionAllowedResponsePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MessageDefinitionAllowedResponse'+v(xv), 'message', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinitionAllowedResponse'+v(xv), 'situation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineMessageDefinitionAllowedResponseJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MessageDefinitionAllowedResponse'+v(xv), nil, js.FHIRFactoryJs);
  defineMessageDefinitionAllowedResponsePropsJs(js, def, xv);
end;

procedure defineMessageDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'base', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'eventCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'eventUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'category', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'focus', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'responseRequired', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageDefinition'+v(xv), 'allowedResponse', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMessageDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MessageDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineMessageDefinitionPropsJs(js, def, xv);
end;

procedure defineMessageHeaderDestinationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MessageHeaderDestination'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageHeaderDestination'+v(xv), 'target', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MessageHeaderDestination'+v(xv), 'endpoint', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageHeaderDestination'+v(xv), 'receiver', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMessageHeaderDestinationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MessageHeaderDestination'+v(xv), nil, js.FHIRFactoryJs);
  defineMessageHeaderDestinationPropsJs(js, def, xv);
end;

procedure defineMessageHeaderSourcePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MessageHeaderSource'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageHeaderSource'+v(xv), 'software', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageHeaderSource'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageHeaderSource'+v(xv), 'contact', 'ContactPoint'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MessageHeaderSource'+v(xv), 'endpoint', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineMessageHeaderSourceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MessageHeaderSource'+v(xv), nil, js.FHIRFactoryJs);
  defineMessageHeaderSourcePropsJs(js, def, xv);
end;

procedure defineMessageHeaderResponsePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MessageHeaderResponse'+v(xv), 'identifier', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageHeaderResponse'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageHeaderResponse'+v(xv), 'details', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMessageHeaderResponseJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MessageHeaderResponse'+v(xv), nil, js.FHIRFactoryJs);
  defineMessageHeaderResponsePropsJs(js, def, xv);
end;

procedure defineMessageHeaderPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'MessageHeader'+v(xv), 'eventCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MessageHeader'+v(xv), 'eventUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MessageHeader'+v(xv), 'destination', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MessageHeader'+v(xv), 'sender', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MessageHeader'+v(xv), 'enterer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MessageHeader'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MessageHeader'+v(xv), 'source', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MessageHeader'+v(xv), 'responsible', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MessageHeader'+v(xv), 'reason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MessageHeader'+v(xv), 'response', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MessageHeader'+v(xv), 'focus', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MessageHeader'+v(xv), 'definition', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineMessageHeaderJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MessageHeader'+v(xv), nil, js.FHIRFactoryJs);
  defineMessageHeaderPropsJs(js, def, xv);
end;

procedure defineMolecularSequenceReferenceSeqPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MolecularSequenceReferenceSeq'+v(xv), 'chromosome', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequenceReferenceSeq'+v(xv), 'genomeBuild', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequenceReferenceSeq'+v(xv), 'orientation', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequenceReferenceSeq'+v(xv), 'referenceSeqId', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequenceReferenceSeq'+v(xv), 'referenceSeqPointer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequenceReferenceSeq'+v(xv), 'referenceSeqString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequenceReferenceSeq'+v(xv), 'strand', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequenceReferenceSeq'+v(xv), 'windowStart', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'MolecularSequenceReferenceSeq'+v(xv), 'windowEnd', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
end;

procedure defineMolecularSequenceReferenceSeqJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MolecularSequenceReferenceSeq'+v(xv), nil, js.FHIRFactoryJs);
  defineMolecularSequenceReferenceSeqPropsJs(js, def, xv);
end;

procedure defineMolecularSequenceVariantPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MolecularSequenceVariant'+v(xv), 'start', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'MolecularSequenceVariant'+v(xv), 'end_', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'MolecularSequenceVariant'+v(xv), 'observedAllele', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequenceVariant'+v(xv), 'referenceAllele', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequenceVariant'+v(xv), 'cigar', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequenceVariant'+v(xv), 'variantPointer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMolecularSequenceVariantJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MolecularSequenceVariant'+v(xv), nil, js.FHIRFactoryJs);
  defineMolecularSequenceVariantPropsJs(js, def, xv);
end;

procedure defineMolecularSequenceQualityPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'standardSequence', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'start', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'end_', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'score', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'method', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'truthTP', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'queryTP', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'truthFN', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'queryFP', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'gtFP', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'precision', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'recall', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'fScore_', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'MolecularSequenceQuality'+v(xv), 'roc', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMolecularSequenceQualityJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MolecularSequenceQuality'+v(xv), nil, js.FHIRFactoryJs);
  defineMolecularSequenceQualityPropsJs(js, def, xv);
end;

procedure defineMolecularSequenceQualityRocPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
end;

procedure defineMolecularSequenceQualityRocJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MolecularSequenceQualityRoc'+v(xv), nil, js.FHIRFactoryJs);
  defineMolecularSequenceQualityRocPropsJs(js, def, xv);
end;

procedure defineMolecularSequenceRepositoryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MolecularSequenceRepository'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequenceRepository'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequenceRepository'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequenceRepository'+v(xv), 'datasetId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequenceRepository'+v(xv), 'variantsetId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequenceRepository'+v(xv), 'readsetId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineMolecularSequenceRepositoryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MolecularSequenceRepository'+v(xv), nil, js.FHIRFactoryJs);
  defineMolecularSequenceRepositoryPropsJs(js, def, xv);
end;

procedure defineMolecularSequenceStructureVariantPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MolecularSequenceStructureVariant'+v(xv), 'variantType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequenceStructureVariant'+v(xv), 'exact', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'MolecularSequenceStructureVariant'+v(xv), 'length', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'MolecularSequenceStructureVariant'+v(xv), 'outer', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequenceStructureVariant'+v(xv), 'inner', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineMolecularSequenceStructureVariantJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MolecularSequenceStructureVariant'+v(xv), nil, js.FHIRFactoryJs);
  defineMolecularSequenceStructureVariantPropsJs(js, def, xv);
end;

procedure defineMolecularSequenceStructureVariantOuterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MolecularSequenceStructureVariantOuter'+v(xv), 'start', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'MolecularSequenceStructureVariantOuter'+v(xv), 'end_', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
end;

procedure defineMolecularSequenceStructureVariantOuterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MolecularSequenceStructureVariantOuter'+v(xv), nil, js.FHIRFactoryJs);
  defineMolecularSequenceStructureVariantOuterPropsJs(js, def, xv);
end;

procedure defineMolecularSequenceStructureVariantInnerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'MolecularSequenceStructureVariantInner'+v(xv), 'start', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'MolecularSequenceStructureVariantInner'+v(xv), 'end_', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
end;

procedure defineMolecularSequenceStructureVariantInnerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MolecularSequenceStructureVariantInner'+v(xv), nil, js.FHIRFactoryJs);
  defineMolecularSequenceStructureVariantInnerPropsJs(js, def, xv);
end;

procedure defineMolecularSequencePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'coordinateSystem', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'specimen', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'device', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'performer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'referenceSeq', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'variant', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'observedSeq', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'quality', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'readCoverage', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'repository', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'pointer', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'MolecularSequence'+v(xv), 'structureVariant', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineMolecularSequenceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('MolecularSequence'+v(xv), nil, js.FHIRFactoryJs);
  defineMolecularSequencePropsJs(js, def, xv);
end;

procedure defineNamingSystemUniqueIdPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NamingSystemUniqueId'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NamingSystemUniqueId'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NamingSystemUniqueId'+v(xv), 'preferred', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'NamingSystemUniqueId'+v(xv), 'comment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NamingSystemUniqueId'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineNamingSystemUniqueIdJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NamingSystemUniqueId'+v(xv), nil, js.FHIRFactoryJs);
  defineNamingSystemUniqueIdPropsJs(js, def, xv);
end;

procedure defineNamingSystemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'NamingSystem'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'kind', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'responsible', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'usage', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NamingSystem'+v(xv), 'uniqueId', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineNamingSystemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NamingSystem'+v(xv), nil, js.FHIRFactoryJs);
  defineNamingSystemPropsJs(js, def, xv);
end;

procedure defineNutritionIntakeConsumedItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NutritionIntakeConsumedItem'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionIntakeConsumedItem'+v(xv), 'nutritionProduct', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionIntakeConsumedItem'+v(xv), 'schedule', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionIntakeConsumedItem'+v(xv), 'amount', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionIntakeConsumedItem'+v(xv), 'rate', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionIntakeConsumedItem'+v(xv), 'notConsumed', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'NutritionIntakeConsumedItem'+v(xv), 'notConsumedReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineNutritionIntakeConsumedItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionIntakeConsumedItem'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionIntakeConsumedItemPropsJs(js, def, xv);
end;

procedure defineNutritionIntakeIngredientLabelPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NutritionIntakeIngredientLabel'+v(xv), 'nutrient', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionIntakeIngredientLabel'+v(xv), 'amount', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineNutritionIntakeIngredientLabelJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionIntakeIngredientLabel'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionIntakeIngredientLabelPropsJs(js, def, xv);
end;

procedure defineNutritionIntakePerformerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NutritionIntakePerformer'+v(xv), 'function', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionIntakePerformer'+v(xv), 'actor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineNutritionIntakePerformerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionIntakePerformer'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionIntakePerformerPropsJs(js, def, xv);
end;

procedure defineNutritionIntakePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'statusReason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'occurrenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'occurrencePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'recorded', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'reportedBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'reportedReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'consumedItem', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'ingredientLabel', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'performer', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'derivedFrom', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionIntake'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineNutritionIntakeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionIntake'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionIntakePropsJs(js, def, xv);
end;

procedure defineNutritionOrderOralDietPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NutritionOrderOralDiet'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionOrderOralDiet'+v(xv), 'schedule', 'Timing'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionOrderOralDiet'+v(xv), 'nutrient', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionOrderOralDiet'+v(xv), 'texture', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionOrderOralDiet'+v(xv), 'fluidConsistencyType', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionOrderOralDiet'+v(xv), 'instruction', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineNutritionOrderOralDietJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionOrderOralDiet'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionOrderOralDietPropsJs(js, def, xv);
end;

procedure defineNutritionOrderOralDietNutrientPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NutritionOrderOralDietNutrient'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrderOralDietNutrient'+v(xv), 'amount', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineNutritionOrderOralDietNutrientJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionOrderOralDietNutrient'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionOrderOralDietNutrientPropsJs(js, def, xv);
end;

procedure defineNutritionOrderOralDietTexturePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NutritionOrderOralDietTexture'+v(xv), 'modifier', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrderOralDietTexture'+v(xv), 'foodType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineNutritionOrderOralDietTextureJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionOrderOralDietTexture'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionOrderOralDietTexturePropsJs(js, def, xv);
end;

procedure defineNutritionOrderSupplementPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NutritionOrderSupplement'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrderSupplement'+v(xv), 'productName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NutritionOrderSupplement'+v(xv), 'schedule', 'Timing'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionOrderSupplement'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrderSupplement'+v(xv), 'instruction', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineNutritionOrderSupplementJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionOrderSupplement'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionOrderSupplementPropsJs(js, def, xv);
end;

procedure defineNutritionOrderEnteralFormulaPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NutritionOrderEnteralFormula'+v(xv), 'baseFormulaType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrderEnteralFormula'+v(xv), 'baseFormulaProductName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NutritionOrderEnteralFormula'+v(xv), 'additiveType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrderEnteralFormula'+v(xv), 'additiveProductName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NutritionOrderEnteralFormula'+v(xv), 'caloricDensity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrderEnteralFormula'+v(xv), 'routeofAdministration', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrderEnteralFormula'+v(xv), 'administration', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionOrderEnteralFormula'+v(xv), 'maxVolumeToDeliver', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrderEnteralFormula'+v(xv), 'administrationInstruction', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineNutritionOrderEnteralFormulaJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionOrderEnteralFormula'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionOrderEnteralFormulaPropsJs(js, def, xv);
end;

procedure defineNutritionOrderEnteralFormulaAdministrationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NutritionOrderEnteralFormulaAdministration'+v(xv), 'schedule', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrderEnteralFormulaAdministration'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrderEnteralFormulaAdministration'+v(xv), 'rateQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrderEnteralFormulaAdministration'+v(xv), 'rateRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineNutritionOrderEnteralFormulaAdministrationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionOrderEnteralFormulaAdministration'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionOrderEnteralFormulaAdministrationPropsJs(js, def, xv);
end;

procedure defineNutritionOrderPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'intent', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'dateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'orderer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'allergyIntolerance', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'foodPreferenceModifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'excludeFoodModifier', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'oralDiet', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'supplement', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'enteralFormula', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionOrder'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineNutritionOrderJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionOrder'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionOrderPropsJs(js, def, xv);
end;

procedure defineNutritionProductNutrientPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NutritionProductNutrient'+v(xv), 'item', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionProductNutrient'+v(xv), 'amount', 'Ratio'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineNutritionProductNutrientJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionProductNutrient'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionProductNutrientPropsJs(js, def, xv);
end;

procedure defineNutritionProductIngredientPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NutritionProductIngredient'+v(xv), 'item', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionProductIngredient'+v(xv), 'amount', 'Ratio'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineNutritionProductIngredientJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionProductIngredient'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionProductIngredientPropsJs(js, def, xv);
end;

procedure defineNutritionProductProductCharacteristicPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NutritionProductProductCharacteristic'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionProductProductCharacteristic'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionProductProductCharacteristic'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NutritionProductProductCharacteristic'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionProductProductCharacteristic'+v(xv), 'valueBase64Binary', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'NutritionProductProductCharacteristic'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionProductProductCharacteristic'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineNutritionProductProductCharacteristicJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionProductProductCharacteristic'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionProductProductCharacteristicPropsJs(js, def, xv);
end;

procedure defineNutritionProductInstancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'NutritionProductInstance'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionProductInstance'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionProductInstance'+v(xv), 'lotNumber', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NutritionProductInstance'+v(xv), 'expiry', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'NutritionProductInstance'+v(xv), 'useBy', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineNutritionProductInstanceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionProductInstance'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionProductInstancePropsJs(js, def, xv);
end;

procedure defineNutritionProductPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'NutritionProduct'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'NutritionProduct'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionProduct'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionProduct'+v(xv), 'manufacturer', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionProduct'+v(xv), 'nutrient', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionProduct'+v(xv), 'ingredient', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionProduct'+v(xv), 'knownAllergen', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionProduct'+v(xv), 'productCharacteristic', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'NutritionProduct'+v(xv), 'instance', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'NutritionProduct'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineNutritionProductJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('NutritionProduct'+v(xv), nil, js.FHIRFactoryJs);
  defineNutritionProductPropsJs(js, def, xv);
end;

procedure defineObservationReferenceRangePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ObservationReferenceRange'+v(xv), 'low', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationReferenceRange'+v(xv), 'high', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationReferenceRange'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationReferenceRange'+v(xv), 'appliesTo', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ObservationReferenceRange'+v(xv), 'age', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationReferenceRange'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineObservationReferenceRangeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ObservationReferenceRange'+v(xv), nil, js.FHIRFactoryJs);
  defineObservationReferenceRangePropsJs(js, def, xv);
end;

procedure defineObservationComponentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'valueRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'valueSampledData', 'SampledData'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'valueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'valuePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'dataAbsentReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'interpretation', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ObservationComponent'+v(xv), 'referenceRange', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineObservationComponentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ObservationComponent'+v(xv), nil, js.FHIRFactoryJs);
  defineObservationComponentPropsJs(js, def, xv);
end;

procedure defineObservationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Observation'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Observation'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Observation'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Observation'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Observation'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Observation'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'focus', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Observation'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'effectiveDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Observation'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'effectiveTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'effectiveInstant', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Observation'+v(xv), 'issued', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Observation'+v(xv), 'performer', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Observation'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Observation'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Observation'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'Observation'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'valueRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'valueSampledData', 'SampledData'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'valueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Observation'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Observation'+v(xv), 'valuePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'dataAbsentReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'interpretation', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Observation'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Observation'+v(xv), 'bodySite', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'method', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'specimen', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'device', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Observation'+v(xv), 'referenceRange', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Observation'+v(xv), 'hasMember', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Observation'+v(xv), 'derivedFrom', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Observation'+v(xv), 'component', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineObservationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Observation'+v(xv), nil, js.FHIRFactoryJs);
  defineObservationPropsJs(js, def, xv);
end;

procedure defineObservationDefinitionQuantitativeDetailsPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ObservationDefinitionQuantitativeDetails'+v(xv), 'customaryUnit', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinitionQuantitativeDetails'+v(xv), 'unit', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinitionQuantitativeDetails'+v(xv), 'conversionFactor', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ObservationDefinitionQuantitativeDetails'+v(xv), 'decimalPrecision', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
end;

procedure defineObservationDefinitionQuantitativeDetailsJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ObservationDefinitionQuantitativeDetails'+v(xv), nil, js.FHIRFactoryJs);
  defineObservationDefinitionQuantitativeDetailsPropsJs(js, def, xv);
end;

procedure defineObservationDefinitionQualifiedIntervalPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ObservationDefinitionQualifiedInterval'+v(xv), 'category', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ObservationDefinitionQualifiedInterval'+v(xv), 'range', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinitionQualifiedInterval'+v(xv), 'context', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinitionQualifiedInterval'+v(xv), 'appliesTo', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ObservationDefinitionQualifiedInterval'+v(xv), 'gender', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ObservationDefinitionQualifiedInterval'+v(xv), 'age', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinitionQualifiedInterval'+v(xv), 'gestationalAge', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinitionQualifiedInterval'+v(xv), 'condition', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineObservationDefinitionQualifiedIntervalJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ObservationDefinitionQualifiedInterval'+v(xv), nil, js.FHIRFactoryJs);
  defineObservationDefinitionQualifiedIntervalPropsJs(js, def, xv);
end;

procedure defineObservationDefinitionComponentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ObservationDefinitionComponent'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinitionComponent'+v(xv), 'quantitativeDetails', '??'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinitionComponent'+v(xv), 'qualifiedInterval', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineObservationDefinitionComponentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ObservationDefinitionComponent'+v(xv), nil, js.FHIRFactoryJs);
  defineObservationDefinitionComponentPropsJs(js, def, xv);
end;

procedure defineObservationDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'subjectCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'subjectReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'publisher', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'approvalDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'lastReviewDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'performerType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'multipleResultsAllowed', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'bodySite', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'method', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'specimen', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'device', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'preferredReportName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'quantitativeDetails', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'qualifiedInterval', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'validCodedValueSet', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'normalCodedValueSet', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'abnormalCodedValueSet', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'criticalCodedValueSet', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'hasMember', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ObservationDefinition'+v(xv), 'component', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineObservationDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ObservationDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineObservationDefinitionPropsJs(js, def, xv);
end;

procedure defineOperationDefinitionParameterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'OperationDefinitionParameter'+v(xv), 'name', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinitionParameter'+v(xv), 'use', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinitionParameter'+v(xv), 'min', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'OperationDefinitionParameter'+v(xv), 'max', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinitionParameter'+v(xv), 'documentation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinitionParameter'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinitionParameter'+v(xv), 'searchType', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinitionParameter'+v(xv), 'binding', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'OperationDefinitionParameter'+v(xv), 'referencedFrom', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OperationDefinitionParameter'+v(xv), 'part', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineOperationDefinitionParameterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('OperationDefinitionParameter'+v(xv), nil, js.FHIRFactoryJs);
  defineOperationDefinitionParameterPropsJs(js, def, xv);
end;

procedure defineOperationDefinitionParameterBindingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'OperationDefinitionParameterBinding'+v(xv), 'strength', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinitionParameterBinding'+v(xv), 'valueSet', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineOperationDefinitionParameterBindingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('OperationDefinitionParameterBinding'+v(xv), nil, js.FHIRFactoryJs);
  defineOperationDefinitionParameterBindingPropsJs(js, def, xv);
end;

procedure defineOperationDefinitionParameterReferencedFromPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'OperationDefinitionParameterReferencedFrom'+v(xv), 'source', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinitionParameterReferencedFrom'+v(xv), 'sourceId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineOperationDefinitionParameterReferencedFromJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('OperationDefinitionParameterReferencedFrom'+v(xv), nil, js.FHIRFactoryJs);
  defineOperationDefinitionParameterReferencedFromPropsJs(js, def, xv);
end;

procedure defineOperationDefinitionOverloadPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'OperationDefinitionOverload'+v(xv), 'comment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineOperationDefinitionOverloadJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('OperationDefinitionOverload'+v(xv), nil, js.FHIRFactoryJs);
  defineOperationDefinitionOverloadPropsJs(js, def, xv);
end;

procedure defineOperationDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'kind', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'affectsState', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'comment', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'base', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'system', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'type_', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'instance', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'inputProfile', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'outputProfile', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'parameter', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OperationDefinition'+v(xv), 'overload', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineOperationDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('OperationDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineOperationDefinitionPropsJs(js, def, xv);
end;

procedure defineOperationOutcomeIssuePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'OperationOutcomeIssue'+v(xv), 'severity', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationOutcomeIssue'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'OperationOutcomeIssue'+v(xv), 'details', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'OperationOutcomeIssue'+v(xv), 'diagnostics', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineOperationOutcomeIssueJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('OperationOutcomeIssue'+v(xv), nil, js.FHIRFactoryJs);
  defineOperationOutcomeIssuePropsJs(js, def, xv);
end;

procedure defineOperationOutcomePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'OperationOutcome'+v(xv), 'issue', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineOperationOutcomeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('OperationOutcome'+v(xv), nil, js.FHIRFactoryJs);
  defineOperationOutcomePropsJs(js, def, xv);
end;

procedure defineOrganizationContactPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'OrganizationContact'+v(xv), 'purpose', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'OrganizationContact'+v(xv), 'name', 'HumanName'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'OrganizationContact'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OrganizationContact'+v(xv), 'address', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineOrganizationContactJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('OrganizationContact'+v(xv), nil, js.FHIRFactoryJs);
  defineOrganizationContactPropsJs(js, def, xv);
end;

procedure defineOrganizationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Organization'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Organization'+v(xv), 'active', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Organization'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Organization'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Organization'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Organization'+v(xv), 'address', 'Address'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Organization'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Organization'+v(xv), 'contact', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Organization'+v(xv), 'endpoint', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineOrganizationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Organization'+v(xv), nil, js.FHIRFactoryJs);
  defineOrganizationPropsJs(js, def, xv);
end;

procedure defineOrganizationAffiliationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'OrganizationAffiliation'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OrganizationAffiliation'+v(xv), 'active', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'OrganizationAffiliation'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'OrganizationAffiliation'+v(xv), 'organization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'OrganizationAffiliation'+v(xv), 'participatingOrganization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'OrganizationAffiliation'+v(xv), 'network', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OrganizationAffiliation'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OrganizationAffiliation'+v(xv), 'specialty', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OrganizationAffiliation'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OrganizationAffiliation'+v(xv), 'healthcareService', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OrganizationAffiliation'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'OrganizationAffiliation'+v(xv), 'endpoint', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineOrganizationAffiliationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('OrganizationAffiliation'+v(xv), nil, js.FHIRFactoryJs);
  defineOrganizationAffiliationPropsJs(js, def, xv);
end;

procedure definePackagedProductDefinitionBatchIdentifierPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PackagedProductDefinitionBatchIdentifier'+v(xv), 'outerPackaging', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PackagedProductDefinitionBatchIdentifier'+v(xv), 'immediatePackaging', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure definePackagedProductDefinitionBatchIdentifierJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PackagedProductDefinitionBatchIdentifier'+v(xv), nil, js.FHIRFactoryJs);
  definePackagedProductDefinitionBatchIdentifierPropsJs(js, def, xv);
end;

procedure definePackagedProductDefinitionPackagePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PackagedProductDefinitionPackage'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinitionPackage'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PackagedProductDefinitionPackage'+v(xv), 'quantity', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'PackagedProductDefinitionPackage'+v(xv), 'material', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinitionPackage'+v(xv), 'alternateMaterial', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinitionPackage'+v(xv), 'shelfLifeStorage', 'ProductShelfLife'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinitionPackage'+v(xv), 'manufacturer', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinitionPackage'+v(xv), 'property', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinitionPackage'+v(xv), 'containedItem', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinitionPackage'+v(xv), 'package', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePackagedProductDefinitionPackageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PackagedProductDefinitionPackage'+v(xv), nil, js.FHIRFactoryJs);
  definePackagedProductDefinitionPackagePropsJs(js, def, xv);
end;

procedure definePackagedProductDefinitionPackagePropertyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PackagedProductDefinitionPackageProperty'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PackagedProductDefinitionPackageProperty'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PackagedProductDefinitionPackageProperty'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PackagedProductDefinitionPackageProperty'+v(xv), 'valueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'PackagedProductDefinitionPackageProperty'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'PackagedProductDefinitionPackageProperty'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure definePackagedProductDefinitionPackagePropertyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PackagedProductDefinitionPackageProperty'+v(xv), nil, js.FHIRFactoryJs);
  definePackagedProductDefinitionPackagePropertyPropsJs(js, def, xv);
end;

procedure definePackagedProductDefinitionPackageContainedItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PackagedProductDefinitionPackageContainedItem'+v(xv), 'item', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinitionPackageContainedItem'+v(xv), 'amountQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PackagedProductDefinitionPackageContainedItem'+v(xv), 'amountInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
end;

procedure definePackagedProductDefinitionPackageContainedItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PackagedProductDefinitionPackageContainedItem'+v(xv), nil, js.FHIRFactoryJs);
  definePackagedProductDefinitionPackageContainedItemPropsJs(js, def, xv);
end;

procedure definePackagedProductDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'status', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'statusDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'legalStatusOfSupply', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'marketingStatus', 'MarketingStatus'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'characteristic', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'copackagedIndicator', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'marketingAuthorization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'manufacturer', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'batchIdentifier', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PackagedProductDefinition'+v(xv), 'package', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePackagedProductDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PackagedProductDefinition'+v(xv), nil, js.FHIRFactoryJs);
  definePackagedProductDefinitionPropsJs(js, def, xv);
end;

procedure defineParametersParameterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueBase64Binary', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueCode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueInstant', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueInteger64', 'integer64'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueMarkdown', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueOid', 'oid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valuePositiveInt', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueUrl', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueUuid', 'uuid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueAnnotation', 'Annotation'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueContactPoint', 'ContactPoint'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueCount', 'Count'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueDistance', 'Distance'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueHumanName', 'HumanName'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valuePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueSampledData', 'SampledData'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueSignature', 'Signature'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueContactDetail', 'ContactDetail'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueContributor', 'Contributor'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueDataRequirement', 'DataRequirement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueExpression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueParameterDefinition', 'ParameterDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueRelatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueTriggerDefinition', 'TriggerDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueUsageContext', 'UsageContext'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueDosage', 'Dosage'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'valueMeta', 'Meta'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'resource', 'Resource'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ParametersParameter'+v(xv), 'part', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineParametersParameterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ParametersParameter'+v(xv), nil, js.FHIRFactoryJs);
  defineParametersParameterPropsJs(js, def, xv);
end;

procedure defineParametersPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Parameters'+v(xv), 'parameter', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineParametersJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Parameters'+v(xv), nil, js.FHIRFactoryJs);
  defineParametersPropsJs(js, def, xv);
end;

procedure definePatientContactPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PatientContact'+v(xv), 'relationship', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PatientContact'+v(xv), 'name', 'HumanName'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PatientContact'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PatientContact'+v(xv), 'address', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PatientContact'+v(xv), 'gender', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PatientContact'+v(xv), 'organization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PatientContact'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure definePatientContactJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PatientContact'+v(xv), nil, js.FHIRFactoryJs);
  definePatientContactPropsJs(js, def, xv);
end;

procedure definePatientCommunicationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PatientCommunication'+v(xv), 'language', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PatientCommunication'+v(xv), 'preferred', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure definePatientCommunicationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PatientCommunication'+v(xv), nil, js.FHIRFactoryJs);
  definePatientCommunicationPropsJs(js, def, xv);
end;

procedure definePatientLinkPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PatientLink'+v(xv), 'other', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PatientLink'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure definePatientLinkJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PatientLink'+v(xv), nil, js.FHIRFactoryJs);
  definePatientLinkPropsJs(js, def, xv);
end;

procedure definePatientPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Patient'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Patient'+v(xv), 'active', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Patient'+v(xv), 'name', 'HumanName'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Patient'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Patient'+v(xv), 'gender', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Patient'+v(xv), 'birthDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Patient'+v(xv), 'deceasedBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Patient'+v(xv), 'deceasedDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Patient'+v(xv), 'address', 'Address'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Patient'+v(xv), 'maritalStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Patient'+v(xv), 'multipleBirthBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Patient'+v(xv), 'multipleBirthInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'Patient'+v(xv), 'photo', 'Attachment'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Patient'+v(xv), 'contact', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Patient'+v(xv), 'communication', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Patient'+v(xv), 'generalPractitioner', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Patient'+v(xv), 'managingOrganization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Patient'+v(xv), 'link', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePatientJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Patient'+v(xv), nil, js.FHIRFactoryJs);
  definePatientPropsJs(js, def, xv);
end;

procedure definePaymentNoticePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'PaymentNotice'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PaymentNotice'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PaymentNotice'+v(xv), 'request', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentNotice'+v(xv), 'response', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentNotice'+v(xv), 'created', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'PaymentNotice'+v(xv), 'provider', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentNotice'+v(xv), 'payment', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentNotice'+v(xv), 'paymentDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'PaymentNotice'+v(xv), 'payee', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentNotice'+v(xv), 'recipient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentNotice'+v(xv), 'amount', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentNotice'+v(xv), 'paymentStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure definePaymentNoticeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PaymentNotice'+v(xv), nil, js.FHIRFactoryJs);
  definePaymentNoticePropsJs(js, def, xv);
end;

procedure definePaymentReconciliationDetailPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PaymentReconciliationDetail'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliationDetail'+v(xv), 'predecessor', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliationDetail'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliationDetail'+v(xv), 'request', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliationDetail'+v(xv), 'submitter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliationDetail'+v(xv), 'response', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliationDetail'+v(xv), 'date', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'PaymentReconciliationDetail'+v(xv), 'responsible', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliationDetail'+v(xv), 'payee', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliationDetail'+v(xv), 'amount', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure definePaymentReconciliationDetailJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PaymentReconciliationDetail'+v(xv), nil, js.FHIRFactoryJs);
  definePaymentReconciliationDetailPropsJs(js, def, xv);
end;

procedure definePaymentReconciliationProcessNotePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PaymentReconciliationProcessNote'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PaymentReconciliationProcessNote'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure definePaymentReconciliationProcessNoteJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PaymentReconciliationProcessNote'+v(xv), nil, js.FHIRFactoryJs);
  definePaymentReconciliationProcessNotePropsJs(js, def, xv);
end;

procedure definePaymentReconciliationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'created', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'paymentIssuer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'request', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'requestor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'outcome', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'disposition', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'paymentDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'paymentAmount', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'paymentIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'detail', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'formCode', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PaymentReconciliation'+v(xv), 'processNote', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePaymentReconciliationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PaymentReconciliation'+v(xv), nil, js.FHIRFactoryJs);
  definePaymentReconciliationPropsJs(js, def, xv);
end;

procedure definePermissionProcessingActivityPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PermissionProcessingActivity'+v(xv), 'partyReference', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PermissionProcessingActivity'+v(xv), 'partyCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PermissionProcessingActivity'+v(xv), 'purpose', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePermissionProcessingActivityJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PermissionProcessingActivity'+v(xv), nil, js.FHIRFactoryJs);
  definePermissionProcessingActivityPropsJs(js, def, xv);
end;

procedure definePermissionJustificationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PermissionJustification'+v(xv), 'evidence', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PermissionJustification'+v(xv), 'grounds', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePermissionJustificationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PermissionJustification'+v(xv), nil, js.FHIRFactoryJs);
  definePermissionJustificationPropsJs(js, def, xv);
end;

procedure definePermissionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Permission'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Permission'+v(xv), 'intent', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Permission'+v(xv), 'asserter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Permission'+v(xv), 'validity', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Permission'+v(xv), 'purpose', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Permission'+v(xv), 'dataScope', 'Expression'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Permission'+v(xv), 'processingActivity', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Permission'+v(xv), 'justification', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Permission'+v(xv), 'usageLimitations', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePermissionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Permission'+v(xv), nil, js.FHIRFactoryJs);
  definePermissionPropsJs(js, def, xv);
end;

procedure definePersonLinkPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PersonLink'+v(xv), 'target', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PersonLink'+v(xv), 'assurance', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure definePersonLinkJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PersonLink'+v(xv), nil, js.FHIRFactoryJs);
  definePersonLinkPropsJs(js, def, xv);
end;

procedure definePersonPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Person'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Person'+v(xv), 'name', 'HumanName'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Person'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Person'+v(xv), 'gender', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Person'+v(xv), 'birthDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Person'+v(xv), 'address', 'Address'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Person'+v(xv), 'photo', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Person'+v(xv), 'managingOrganization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Person'+v(xv), 'active', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Person'+v(xv), 'link', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePersonJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Person'+v(xv), nil, js.FHIRFactoryJs);
  definePersonPropsJs(js, def, xv);
end;

procedure definePlanDefinitionGoalPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PlanDefinitionGoal'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionGoal'+v(xv), 'description', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionGoal'+v(xv), 'priority', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionGoal'+v(xv), 'start', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionGoal'+v(xv), 'addresses', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinitionGoal'+v(xv), 'documentation', 'RelatedArtifact'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinitionGoal'+v(xv), 'target', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePlanDefinitionGoalJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PlanDefinitionGoal'+v(xv), nil, js.FHIRFactoryJs);
  definePlanDefinitionGoalPropsJs(js, def, xv);
end;

procedure definePlanDefinitionGoalTargetPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PlanDefinitionGoalTarget'+v(xv), 'measure', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionGoalTarget'+v(xv), 'detailQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionGoalTarget'+v(xv), 'detailRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionGoalTarget'+v(xv), 'detailCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionGoalTarget'+v(xv), 'due', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure definePlanDefinitionGoalTargetJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PlanDefinitionGoalTarget'+v(xv), nil, js.FHIRFactoryJs);
  definePlanDefinitionGoalTargetPropsJs(js, def, xv);
end;

procedure definePlanDefinitionActionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'prefix', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'textEquivalent', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'priority', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'reason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'documentation', 'RelatedArtifact'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'subjectCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'subjectReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'trigger', 'TriggerDefinition'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'condition', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'input', 'DataRequirement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'output', 'DataRequirement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'relatedAction', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'timingDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'timingAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'timingPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'timingDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'timingRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'timingTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'participant', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'groupingBehavior', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'selectionBehavior', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'requiredBehavior', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'precheckBehavior', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'cardinalityBehavior', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'definitionCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'definitionUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'transform', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'dynamicValue', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinitionAction'+v(xv), 'action', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePlanDefinitionActionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PlanDefinitionAction'+v(xv), nil, js.FHIRFactoryJs);
  definePlanDefinitionActionPropsJs(js, def, xv);
end;

procedure definePlanDefinitionActionConditionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PlanDefinitionActionCondition'+v(xv), 'kind', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionActionCondition'+v(xv), 'expression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure definePlanDefinitionActionConditionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PlanDefinitionActionCondition'+v(xv), nil, js.FHIRFactoryJs);
  definePlanDefinitionActionConditionPropsJs(js, def, xv);
end;

procedure definePlanDefinitionActionRelatedActionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PlanDefinitionActionRelatedAction'+v(xv), 'actionId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionActionRelatedAction'+v(xv), 'relationship', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionActionRelatedAction'+v(xv), 'offsetDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinitionActionRelatedAction'+v(xv), 'offsetRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure definePlanDefinitionActionRelatedActionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PlanDefinitionActionRelatedAction'+v(xv), nil, js.FHIRFactoryJs);
  definePlanDefinitionActionRelatedActionPropsJs(js, def, xv);
end;

procedure definePlanDefinitionActionParticipantPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PlanDefinitionActionParticipant'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionActionParticipant'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure definePlanDefinitionActionParticipantJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PlanDefinitionActionParticipant'+v(xv), nil, js.FHIRFactoryJs);
  definePlanDefinitionActionParticipantPropsJs(js, def, xv);
end;

procedure definePlanDefinitionActionDynamicValuePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PlanDefinitionActionDynamicValue'+v(xv), 'path', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinitionActionDynamicValue'+v(xv), 'expression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure definePlanDefinitionActionDynamicValueJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PlanDefinitionActionDynamicValue'+v(xv), nil, js.FHIRFactoryJs);
  definePlanDefinitionActionDynamicValuePropsJs(js, def, xv);
end;

procedure definePlanDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineMetadataResourcePropsJs(js, def, xv);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'subtitle', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'subjectCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'subjectReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'usage', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'approvalDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'lastReviewDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'topic', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'author', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'editor', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'reviewer', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'endorser', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'relatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'goal', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PlanDefinition'+v(xv), 'action', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePlanDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PlanDefinition'+v(xv), nil, js.FHIRFactoryJs);
  definePlanDefinitionPropsJs(js, def, xv);
end;

procedure definePractitionerQualificationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PractitionerQualification'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PractitionerQualification'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PractitionerQualification'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PractitionerQualification'+v(xv), 'issuer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure definePractitionerQualificationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PractitionerQualification'+v(xv), nil, js.FHIRFactoryJs);
  definePractitionerQualificationPropsJs(js, def, xv);
end;

procedure definePractitionerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Practitioner'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Practitioner'+v(xv), 'active', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Practitioner'+v(xv), 'name', 'HumanName'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Practitioner'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Practitioner'+v(xv), 'address', 'Address'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Practitioner'+v(xv), 'gender', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Practitioner'+v(xv), 'birthDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Practitioner'+v(xv), 'photo', 'Attachment'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Practitioner'+v(xv), 'qualification', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Practitioner'+v(xv), 'communication', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePractitionerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Practitioner'+v(xv), nil, js.FHIRFactoryJs);
  definePractitionerPropsJs(js, def, xv);
end;

procedure definePractitionerRoleAvailableTimePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PractitionerRoleAvailableTime'+v(xv), 'allDay', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'PractitionerRoleAvailableTime'+v(xv), 'availableStartTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PractitionerRoleAvailableTime'+v(xv), 'availableEndTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure definePractitionerRoleAvailableTimeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PractitionerRoleAvailableTime'+v(xv), nil, js.FHIRFactoryJs);
  definePractitionerRoleAvailableTimePropsJs(js, def, xv);
end;

procedure definePractitionerRoleNotAvailablePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'PractitionerRoleNotAvailable'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PractitionerRoleNotAvailable'+v(xv), 'during', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure definePractitionerRoleNotAvailableJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PractitionerRoleNotAvailable'+v(xv), nil, js.FHIRFactoryJs);
  definePractitionerRoleNotAvailablePropsJs(js, def, xv);
end;

procedure definePractitionerRolePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'active', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'practitioner', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'organization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'specialty', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'healthcareService', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'availableTime', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'notAvailable', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'availabilityExceptions', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'PractitionerRole'+v(xv), 'endpoint', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure definePractitionerRoleJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('PractitionerRole'+v(xv), nil, js.FHIRFactoryJs);
  definePractitionerRolePropsJs(js, def, xv);
end;

procedure defineProcedurePerformerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ProcedurePerformer'+v(xv), 'function', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProcedurePerformer'+v(xv), 'actor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProcedurePerformer'+v(xv), 'onBehalfOf', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineProcedurePerformerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ProcedurePerformer'+v(xv), nil, js.FHIRFactoryJs);
  defineProcedurePerformerPropsJs(js, def, xv);
end;

procedure defineProcedureFocalDevicePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ProcedureFocalDevice'+v(xv), 'action', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProcedureFocalDevice'+v(xv), 'manipulated', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineProcedureFocalDeviceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ProcedureFocalDevice'+v(xv), nil, js.FHIRFactoryJs);
  defineProcedureFocalDevicePropsJs(js, def, xv);
end;

procedure defineProcedurePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Procedure'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Procedure'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Procedure'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Procedure'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Procedure'+v(xv), 'statusReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Procedure'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Procedure'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Procedure'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Procedure'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Procedure'+v(xv), 'occurrenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Procedure'+v(xv), 'occurrencePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Procedure'+v(xv), 'occurrenceString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Procedure'+v(xv), 'occurrenceAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Procedure'+v(xv), 'occurrenceRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Procedure'+v(xv), 'occurrenceTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Procedure'+v(xv), 'recorded', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Procedure'+v(xv), 'recorder', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Procedure'+v(xv), 'reportedBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Procedure'+v(xv), 'reportedReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Procedure'+v(xv), 'performer', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Procedure'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Procedure'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Procedure'+v(xv), 'bodySite', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Procedure'+v(xv), 'outcome', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Procedure'+v(xv), 'report', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Procedure'+v(xv), 'complication', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Procedure'+v(xv), 'complicationDetail', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Procedure'+v(xv), 'followUp', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Procedure'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Procedure'+v(xv), 'focalDevice', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Procedure'+v(xv), 'used', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineProcedureJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Procedure'+v(xv), nil, js.FHIRFactoryJs);
  defineProcedurePropsJs(js, def, xv);
end;

procedure defineProvenanceAgentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ProvenanceAgent'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProvenanceAgent'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ProvenanceAgent'+v(xv), 'who', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProvenanceAgent'+v(xv), 'onBehalfOf', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineProvenanceAgentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ProvenanceAgent'+v(xv), nil, js.FHIRFactoryJs);
  defineProvenanceAgentPropsJs(js, def, xv);
end;

procedure defineProvenanceEntityPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ProvenanceEntity'+v(xv), 'role', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ProvenanceEntity'+v(xv), 'what', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ProvenanceEntity'+v(xv), 'agent', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineProvenanceEntityJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ProvenanceEntity'+v(xv), nil, js.FHIRFactoryJs);
  defineProvenanceEntityPropsJs(js, def, xv);
end;

procedure defineProvenancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Provenance'+v(xv), 'target', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Provenance'+v(xv), 'occurredPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Provenance'+v(xv), 'occurredDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Provenance'+v(xv), 'recorded', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Provenance'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Provenance'+v(xv), 'reason', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Provenance'+v(xv), 'activity', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Provenance'+v(xv), 'agent', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Provenance'+v(xv), 'entity', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Provenance'+v(xv), 'signature', 'Signature'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineProvenanceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Provenance'+v(xv), nil, js.FHIRFactoryJs);
  defineProvenancePropsJs(js, def, xv);
end;

procedure defineQuestionnaireItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'linkId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'definition', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'code', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'prefix', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'enableWhen', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'enableBehavior', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'required', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'repeats', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'readOnly', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'maxLength', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'answerValueSet', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'answerOption', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'initial', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'QuestionnaireItem'+v(xv), 'item', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineQuestionnaireItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('QuestionnaireItem'+v(xv), nil, js.FHIRFactoryJs);
  defineQuestionnaireItemPropsJs(js, def, xv);
end;

procedure defineQuestionnaireItemEnableWhenPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'QuestionnaireItemEnableWhen'+v(xv), 'question', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItemEnableWhen'+v(xv), 'operator', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItemEnableWhen'+v(xv), 'answerBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'QuestionnaireItemEnableWhen'+v(xv), 'answerDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'QuestionnaireItemEnableWhen'+v(xv), 'answerInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'QuestionnaireItemEnableWhen'+v(xv), 'answerDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'QuestionnaireItemEnableWhen'+v(xv), 'answerDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'QuestionnaireItemEnableWhen'+v(xv), 'answerTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItemEnableWhen'+v(xv), 'answerString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItemEnableWhen'+v(xv), 'answerCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireItemEnableWhen'+v(xv), 'answerQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireItemEnableWhen'+v(xv), 'answerReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineQuestionnaireItemEnableWhenJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('QuestionnaireItemEnableWhen'+v(xv), nil, js.FHIRFactoryJs);
  defineQuestionnaireItemEnableWhenPropsJs(js, def, xv);
end;

procedure defineQuestionnaireItemAnswerOptionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'QuestionnaireItemAnswerOption'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'QuestionnaireItemAnswerOption'+v(xv), 'valueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'QuestionnaireItemAnswerOption'+v(xv), 'valueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItemAnswerOption'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItemAnswerOption'+v(xv), 'valueCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireItemAnswerOption'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireItemAnswerOption'+v(xv), 'initialSelected', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineQuestionnaireItemAnswerOptionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('QuestionnaireItemAnswerOption'+v(xv), nil, js.FHIRFactoryJs);
  defineQuestionnaireItemAnswerOptionPropsJs(js, def, xv);
end;

procedure defineQuestionnaireItemInitialPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'QuestionnaireItemInitial'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'QuestionnaireItemInitial'+v(xv), 'valueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'QuestionnaireItemInitial'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'QuestionnaireItemInitial'+v(xv), 'valueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'QuestionnaireItemInitial'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'QuestionnaireItemInitial'+v(xv), 'valueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItemInitial'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItemInitial'+v(xv), 'valueUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireItemInitial'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireItemInitial'+v(xv), 'valueCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireItemInitial'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireItemInitial'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineQuestionnaireItemInitialJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('QuestionnaireItemInitial'+v(xv), nil, js.FHIRFactoryJs);
  defineQuestionnaireItemInitialPropsJs(js, def, xv);
end;

procedure defineQuestionnairePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineMetadataResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Questionnaire'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'approvalDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'lastReviewDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'code', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Questionnaire'+v(xv), 'item', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineQuestionnaireJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Questionnaire'+v(xv), nil, js.FHIRFactoryJs);
  defineQuestionnairePropsJs(js, def, xv);
end;

procedure defineQuestionnaireResponseItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'QuestionnaireResponseItem'+v(xv), 'linkId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireResponseItem'+v(xv), 'definition', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireResponseItem'+v(xv), 'text', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireResponseItem'+v(xv), 'answer', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'QuestionnaireResponseItem'+v(xv), 'item', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineQuestionnaireResponseItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('QuestionnaireResponseItem'+v(xv), nil, js.FHIRFactoryJs);
  defineQuestionnaireResponseItemPropsJs(js, def, xv);
end;

procedure defineQuestionnaireResponseItemAnswerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'QuestionnaireResponseItemAnswer'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'QuestionnaireResponseItemAnswer'+v(xv), 'valueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'QuestionnaireResponseItemAnswer'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'QuestionnaireResponseItemAnswer'+v(xv), 'valueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'QuestionnaireResponseItemAnswer'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'QuestionnaireResponseItemAnswer'+v(xv), 'valueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireResponseItemAnswer'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireResponseItemAnswer'+v(xv), 'valueUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireResponseItemAnswer'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireResponseItemAnswer'+v(xv), 'valueCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireResponseItemAnswer'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireResponseItemAnswer'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireResponseItemAnswer'+v(xv), 'item', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineQuestionnaireResponseItemAnswerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('QuestionnaireResponseItemAnswer'+v(xv), nil, js.FHIRFactoryJs);
  defineQuestionnaireResponseItemAnswerPropsJs(js, def, xv);
end;

procedure defineQuestionnaireResponsePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'QuestionnaireResponse'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireResponse'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'QuestionnaireResponse'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'QuestionnaireResponse'+v(xv), 'questionnaire', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireResponse'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'QuestionnaireResponse'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireResponse'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireResponse'+v(xv), 'authored', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'QuestionnaireResponse'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireResponse'+v(xv), 'source', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'QuestionnaireResponse'+v(xv), 'item', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineQuestionnaireResponseJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('QuestionnaireResponse'+v(xv), nil, js.FHIRFactoryJs);
  defineQuestionnaireResponsePropsJs(js, def, xv);
end;

procedure defineRegulatedAuthorizationRelatedDatePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'RegulatedAuthorizationRelatedDate'+v(xv), 'datePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorizationRelatedDate'+v(xv), 'dateDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'RegulatedAuthorizationRelatedDate'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineRegulatedAuthorizationRelatedDateJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('RegulatedAuthorizationRelatedDate'+v(xv), nil, js.FHIRFactoryJs);
  defineRegulatedAuthorizationRelatedDatePropsJs(js, def, xv);
end;

procedure defineRegulatedAuthorizationCasePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'RegulatedAuthorizationCase'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorizationCase'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorizationCase'+v(xv), 'status', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorizationCase'+v(xv), 'datePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorizationCase'+v(xv), 'dateDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'RegulatedAuthorizationCase'+v(xv), 'application', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineRegulatedAuthorizationCaseJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('RegulatedAuthorizationCase'+v(xv), nil, js.FHIRFactoryJs);
  defineRegulatedAuthorizationCasePropsJs(js, def, xv);
end;

procedure defineRegulatedAuthorizationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'region', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'status', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'statusDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'validityPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'indicationCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'indicationReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'intendedUse', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'basis', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'relatedDate', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'jurisdictionalAuthorization', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'holder', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'regulator', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RegulatedAuthorization'+v(xv), 'case', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineRegulatedAuthorizationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('RegulatedAuthorization'+v(xv), nil, js.FHIRFactoryJs);
  defineRegulatedAuthorizationPropsJs(js, def, xv);
end;

procedure defineRelatedPersonCommunicationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'RelatedPersonCommunication'+v(xv), 'language', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RelatedPersonCommunication'+v(xv), 'preferred', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineRelatedPersonCommunicationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('RelatedPersonCommunication'+v(xv), nil, js.FHIRFactoryJs);
  defineRelatedPersonCommunicationPropsJs(js, def, xv);
end;

procedure defineRelatedPersonPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'RelatedPerson'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RelatedPerson'+v(xv), 'active', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'RelatedPerson'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RelatedPerson'+v(xv), 'relationship', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RelatedPerson'+v(xv), 'name', 'HumanName'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RelatedPerson'+v(xv), 'telecom', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RelatedPerson'+v(xv), 'gender', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RelatedPerson'+v(xv), 'birthDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'RelatedPerson'+v(xv), 'address', 'Address'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RelatedPerson'+v(xv), 'photo', 'Attachment'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RelatedPerson'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RelatedPerson'+v(xv), 'communication', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineRelatedPersonJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('RelatedPerson'+v(xv), nil, js.FHIRFactoryJs);
  defineRelatedPersonPropsJs(js, def, xv);
end;

procedure defineRequestGroupActionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'prefix', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'textEquivalent', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'priority', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'documentation', 'RelatedArtifact'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'condition', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'relatedAction', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'timingDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'timingAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'timingPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'timingDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'timingRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'timingTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'participant', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'groupingBehavior', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'selectionBehavior', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'requiredBehavior', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'precheckBehavior', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'cardinalityBehavior', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'resource', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RequestGroupAction'+v(xv), 'action', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineRequestGroupActionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('RequestGroupAction'+v(xv), nil, js.FHIRFactoryJs);
  defineRequestGroupActionPropsJs(js, def, xv);
end;

procedure defineRequestGroupActionConditionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'RequestGroupActionCondition'+v(xv), 'kind', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroupActionCondition'+v(xv), 'expression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineRequestGroupActionConditionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('RequestGroupActionCondition'+v(xv), nil, js.FHIRFactoryJs);
  defineRequestGroupActionConditionPropsJs(js, def, xv);
end;

procedure defineRequestGroupActionRelatedActionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'RequestGroupActionRelatedAction'+v(xv), 'actionId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroupActionRelatedAction'+v(xv), 'relationship', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroupActionRelatedAction'+v(xv), 'offsetDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RequestGroupActionRelatedAction'+v(xv), 'offsetRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineRequestGroupActionRelatedActionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('RequestGroupActionRelatedAction'+v(xv), nil, js.FHIRFactoryJs);
  defineRequestGroupActionRelatedActionPropsJs(js, def, xv);
end;

procedure defineRequestGroupPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'RequestGroup'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'replaces', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'groupIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'intent', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'priority', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'authoredOn', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'author', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RequestGroup'+v(xv), 'action', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineRequestGroupJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('RequestGroup'+v(xv), nil, js.FHIRFactoryJs);
  defineRequestGroupPropsJs(js, def, xv);
end;

procedure defineResearchStudyArmPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ResearchStudyArm'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ResearchStudyArm'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchStudyArm'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineResearchStudyArmJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ResearchStudyArm'+v(xv), nil, js.FHIRFactoryJs);
  defineResearchStudyArmPropsJs(js, def, xv);
end;

procedure defineResearchStudyObjectivePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ResearchStudyObjective'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ResearchStudyObjective'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineResearchStudyObjectiveJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ResearchStudyObjective'+v(xv), nil, js.FHIRFactoryJs);
  defineResearchStudyObjectivePropsJs(js, def, xv);
end;

procedure defineResearchStudyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'protocol', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'primaryPurposeType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'phase', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'focus', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'condition', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'relatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'keyword', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'location', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'enrollment', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'sponsor', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'principalInvestigator', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'site', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'reasonStopped', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'arm', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchStudy'+v(xv), 'objective', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineResearchStudyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ResearchStudy'+v(xv), nil, js.FHIRFactoryJs);
  defineResearchStudyPropsJs(js, def, xv);
end;

procedure defineResearchSubjectProgressPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ResearchSubjectProgress'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchSubjectProgress'+v(xv), 'state', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchSubjectProgress'+v(xv), 'milestone', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchSubjectProgress'+v(xv), 'reason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchSubjectProgress'+v(xv), 'startDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineResearchSubjectProgressJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ResearchSubjectProgress'+v(xv), nil, js.FHIRFactoryJs);
  defineResearchSubjectProgressPropsJs(js, def, xv);
end;

procedure defineResearchSubjectPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ResearchSubject'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchSubject'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ResearchSubject'+v(xv), 'progress', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ResearchSubject'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchSubject'+v(xv), 'study', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchSubject'+v(xv), 'individual', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ResearchSubject'+v(xv), 'assignedArm', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ResearchSubject'+v(xv), 'actualArm', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ResearchSubject'+v(xv), 'consent', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineResearchSubjectJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ResearchSubject'+v(xv), nil, js.FHIRFactoryJs);
  defineResearchSubjectPropsJs(js, def, xv);
end;

procedure defineRiskAssessmentPredictionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'RiskAssessmentPrediction'+v(xv), 'outcome', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessmentPrediction'+v(xv), 'probabilityDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'RiskAssessmentPrediction'+v(xv), 'probabilityRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessmentPrediction'+v(xv), 'qualitativeRisk', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessmentPrediction'+v(xv), 'relativeRisk', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'RiskAssessmentPrediction'+v(xv), 'whenPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessmentPrediction'+v(xv), 'whenRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessmentPrediction'+v(xv), 'rationale', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineRiskAssessmentPredictionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('RiskAssessmentPrediction'+v(xv), nil, js.FHIRFactoryJs);
  defineRiskAssessmentPredictionPropsJs(js, def, xv);
end;

procedure defineRiskAssessmentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'parent', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'method', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'occurrenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'occurrencePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'condition', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'performer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'basis', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'prediction', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'mitigation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'RiskAssessment'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineRiskAssessmentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('RiskAssessment'+v(xv), nil, js.FHIRFactoryJs);
  defineRiskAssessmentPropsJs(js, def, xv);
end;

procedure defineSchedulePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Schedule'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Schedule'+v(xv), 'active', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Schedule'+v(xv), 'serviceCategory', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Schedule'+v(xv), 'serviceType', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Schedule'+v(xv), 'specialty', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Schedule'+v(xv), 'actor', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Schedule'+v(xv), 'planningHorizon', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Schedule'+v(xv), 'comment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineScheduleJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Schedule'+v(xv), nil, js.FHIRFactoryJs);
  defineSchedulePropsJs(js, def, xv);
end;

procedure defineSearchParameterComponentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SearchParameterComponent'+v(xv), 'definition', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameterComponent'+v(xv), 'expression', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineSearchParameterComponentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SearchParameterComponent'+v(xv), nil, js.FHIRFactoryJs);
  defineSearchParameterComponentPropsJs(js, def, xv);
end;

procedure defineSearchParameterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'SearchParameter'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'derivedFrom', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'expression', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'xpath', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'xpathUsage', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'multipleOr', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'multipleAnd', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'SearchParameter'+v(xv), 'component', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSearchParameterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SearchParameter'+v(xv), nil, js.FHIRFactoryJs);
  defineSearchParameterPropsJs(js, def, xv);
end;

procedure defineServiceRequestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'replaces', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'requisition', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'intent', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'priority', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'doNotPerform', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'orderDetail', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'quantityQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'quantityRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'quantityRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'occurrenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'occurrencePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'occurrenceTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'asNeededBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'asNeededCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'authoredOn', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'requester', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'performerType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'performer', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'location', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'insurance', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'supportingInfo', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'specimen', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'bodySite', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'patientInstruction', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ServiceRequest'+v(xv), 'relevantHistory', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineServiceRequestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ServiceRequest'+v(xv), nil, js.FHIRFactoryJs);
  defineServiceRequestPropsJs(js, def, xv);
end;

procedure defineSlotPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Slot'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Slot'+v(xv), 'serviceCategory', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Slot'+v(xv), 'serviceType', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Slot'+v(xv), 'specialty', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Slot'+v(xv), 'appointmentType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Slot'+v(xv), 'schedule', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Slot'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Slot'+v(xv), 'start', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Slot'+v(xv), 'end_', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Slot'+v(xv), 'overbooked', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'Slot'+v(xv), 'comment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineSlotJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Slot'+v(xv), nil, js.FHIRFactoryJs);
  defineSlotPropsJs(js, def, xv);
end;

procedure defineSpecimenCollectionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SpecimenCollection'+v(xv), 'collector', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenCollection'+v(xv), 'collectedDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SpecimenCollection'+v(xv), 'collectedPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenCollection'+v(xv), 'duration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenCollection'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenCollection'+v(xv), 'method', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenCollection'+v(xv), 'bodySite', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenCollection'+v(xv), 'fastingStatusCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenCollection'+v(xv), 'fastingStatusDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSpecimenCollectionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SpecimenCollection'+v(xv), nil, js.FHIRFactoryJs);
  defineSpecimenCollectionPropsJs(js, def, xv);
end;

procedure defineSpecimenProcessingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SpecimenProcessing'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenProcessing'+v(xv), 'procedure', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenProcessing'+v(xv), 'additive', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SpecimenProcessing'+v(xv), 'timeDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SpecimenProcessing'+v(xv), 'timePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSpecimenProcessingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SpecimenProcessing'+v(xv), nil, js.FHIRFactoryJs);
  defineSpecimenProcessingPropsJs(js, def, xv);
end;

procedure defineSpecimenContainerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SpecimenContainer'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SpecimenContainer'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenContainer'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenContainer'+v(xv), 'capacity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenContainer'+v(xv), 'specimenQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenContainer'+v(xv), 'additiveCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenContainer'+v(xv), 'additiveReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSpecimenContainerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SpecimenContainer'+v(xv), nil, js.FHIRFactoryJs);
  defineSpecimenContainerPropsJs(js, def, xv);
end;

procedure defineSpecimenPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Specimen'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Specimen'+v(xv), 'accessionIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Specimen'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Specimen'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Specimen'+v(xv), 'subject', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Specimen'+v(xv), 'receivedTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Specimen'+v(xv), 'parent', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Specimen'+v(xv), 'request', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Specimen'+v(xv), 'collection', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Specimen'+v(xv), 'processing', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Specimen'+v(xv), 'container', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Specimen'+v(xv), 'condition', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Specimen'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSpecimenJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Specimen'+v(xv), nil, js.FHIRFactoryJs);
  defineSpecimenPropsJs(js, def, xv);
end;

procedure defineSpecimenDefinitionTypeTestedPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SpecimenDefinitionTypeTested'+v(xv), 'isDerived', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTested'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTested'+v(xv), 'preference', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTested'+v(xv), 'container', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTested'+v(xv), 'requirement', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTested'+v(xv), 'retentionTime', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTested'+v(xv), 'singleUse', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTested'+v(xv), 'rejectionCriterion', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTested'+v(xv), 'handling', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTested'+v(xv), 'testingDestination', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSpecimenDefinitionTypeTestedJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SpecimenDefinitionTypeTested'+v(xv), nil, js.FHIRFactoryJs);
  defineSpecimenDefinitionTypeTestedPropsJs(js, def, xv);
end;

procedure defineSpecimenDefinitionTypeTestedContainerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedContainer'+v(xv), 'material', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedContainer'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedContainer'+v(xv), 'cap', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedContainer'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedContainer'+v(xv), 'capacity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedContainer'+v(xv), 'minimumVolumeQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedContainer'+v(xv), 'minimumVolumeString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedContainer'+v(xv), 'additive', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedContainer'+v(xv), 'preparation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineSpecimenDefinitionTypeTestedContainerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SpecimenDefinitionTypeTestedContainer'+v(xv), nil, js.FHIRFactoryJs);
  defineSpecimenDefinitionTypeTestedContainerPropsJs(js, def, xv);
end;

procedure defineSpecimenDefinitionTypeTestedContainerAdditivePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedContainerAdditive'+v(xv), 'additiveCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedContainerAdditive'+v(xv), 'additiveReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSpecimenDefinitionTypeTestedContainerAdditiveJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SpecimenDefinitionTypeTestedContainerAdditive'+v(xv), nil, js.FHIRFactoryJs);
  defineSpecimenDefinitionTypeTestedContainerAdditivePropsJs(js, def, xv);
end;

procedure defineSpecimenDefinitionTypeTestedHandlingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedHandling'+v(xv), 'temperatureQualifier', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedHandling'+v(xv), 'temperatureRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedHandling'+v(xv), 'maxDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinitionTypeTestedHandling'+v(xv), 'instruction', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineSpecimenDefinitionTypeTestedHandlingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SpecimenDefinitionTypeTestedHandling'+v(xv), nil, js.FHIRFactoryJs);
  defineSpecimenDefinitionTypeTestedHandlingPropsJs(js, def, xv);
end;

procedure defineSpecimenDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'subjectCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'subjectReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'publisher', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'approvalDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'lastReviewDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'typeCollected', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'patientPreparation', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'timeAspect', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'collection', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SpecimenDefinition'+v(xv), 'typeTested', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSpecimenDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SpecimenDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineSpecimenDefinitionPropsJs(js, def, xv);
end;

procedure defineStructureDefinitionMappingPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'StructureDefinitionMapping'+v(xv), 'identity', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinitionMapping'+v(xv), 'uri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinitionMapping'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinitionMapping'+v(xv), 'comment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineStructureDefinitionMappingJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureDefinitionMapping'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureDefinitionMappingPropsJs(js, def, xv);
end;

procedure defineStructureDefinitionContextPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'StructureDefinitionContext'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinitionContext'+v(xv), 'expression', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineStructureDefinitionContextJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureDefinitionContext'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureDefinitionContextPropsJs(js, def, xv);
end;

procedure defineStructureDefinitionSnapshotPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'StructureDefinitionSnapshot'+v(xv), 'element', 'ElementDefinition'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineStructureDefinitionSnapshotJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureDefinitionSnapshot'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureDefinitionSnapshotPropsJs(js, def, xv);
end;

procedure defineStructureDefinitionDifferentialPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'StructureDefinitionDifferential'+v(xv), 'element', 'ElementDefinition'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineStructureDefinitionDifferentialJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureDefinitionDifferential'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureDefinitionDifferentialPropsJs(js, def, xv);
end;

procedure defineStructureDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'keyword', 'Coding'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'fhirVersion', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'mapping', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'kind', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'abstract', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'context', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'type_', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'baseDefinition', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'derivation', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'snapshot', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureDefinition'+v(xv), 'differential', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineStructureDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureDefinitionPropsJs(js, def, xv);
end;

procedure defineStructureMapStructurePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'StructureMapStructure'+v(xv), 'url', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapStructure'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapStructure'+v(xv), 'alias', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapStructure'+v(xv), 'documentation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineStructureMapStructureJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureMapStructure'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureMapStructurePropsJs(js, def, xv);
end;

procedure defineStructureMapGroupPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'StructureMapGroup'+v(xv), 'name', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroup'+v(xv), 'extends', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroup'+v(xv), 'typeMode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroup'+v(xv), 'documentation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroup'+v(xv), 'input', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureMapGroup'+v(xv), 'rule', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineStructureMapGroupJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureMapGroup'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureMapGroupPropsJs(js, def, xv);
end;

procedure defineStructureMapGroupInputPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'StructureMapGroupInput'+v(xv), 'name', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupInput'+v(xv), 'type_', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupInput'+v(xv), 'mode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupInput'+v(xv), 'documentation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineStructureMapGroupInputJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureMapGroupInput'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureMapGroupInputPropsJs(js, def, xv);
end;

procedure defineStructureMapGroupRulePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'StructureMapGroupRule'+v(xv), 'name', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRule'+v(xv), 'source', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureMapGroupRule'+v(xv), 'target', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureMapGroupRule'+v(xv), 'rule', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureMapGroupRule'+v(xv), 'dependent', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureMapGroupRule'+v(xv), 'documentation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineStructureMapGroupRuleJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureMapGroupRule'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureMapGroupRulePropsJs(js, def, xv);
end;

procedure defineStructureMapGroupRuleSourcePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'context', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'min', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'max', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'type_', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueBase64Binary', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueCode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueInstant', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueInteger64', 'integer64'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueMarkdown', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueOid', 'oid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValuePositiveInt', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueUrl', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueUuid', 'uuid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueAnnotation', 'Annotation'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueContactPoint', 'ContactPoint'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueCount', 'Count'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueDistance', 'Distance'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueHumanName', 'HumanName'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValuePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueSampledData', 'SampledData'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueSignature', 'Signature'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueContactDetail', 'ContactDetail'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueContributor', 'Contributor'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueDataRequirement', 'DataRequirement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueExpression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueParameterDefinition', 'ParameterDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueRelatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueTriggerDefinition', 'TriggerDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueUsageContext', 'UsageContext'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueDosage', 'Dosage'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'defaultValueMeta', 'Meta'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'element', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'listMode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'variable', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'condition', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'check', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleSource'+v(xv), 'logMessage', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineStructureMapGroupRuleSourceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureMapGroupRuleSource'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureMapGroupRuleSourcePropsJs(js, def, xv);
end;

procedure defineStructureMapGroupRuleTargetPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'StructureMapGroupRuleTarget'+v(xv), 'context', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleTarget'+v(xv), 'contextType', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleTarget'+v(xv), 'element', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleTarget'+v(xv), 'variable', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleTarget'+v(xv), 'listRuleId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleTarget'+v(xv), 'transform', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleTarget'+v(xv), 'parameter', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineStructureMapGroupRuleTargetJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureMapGroupRuleTarget'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureMapGroupRuleTargetPropsJs(js, def, xv);
end;

procedure defineStructureMapGroupRuleTargetParameterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'StructureMapGroupRuleTargetParameter'+v(xv), 'valueId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleTargetParameter'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMapGroupRuleTargetParameter'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'StructureMapGroupRuleTargetParameter'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'StructureMapGroupRuleTargetParameter'+v(xv), 'valueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
end;

procedure defineStructureMapGroupRuleTargetParameterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureMapGroupRuleTargetParameter'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureMapGroupRuleTargetParameterPropsJs(js, def, xv);
end;

procedure defineStructureMapGroupRuleDependentPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'StructureMapGroupRuleDependent'+v(xv), 'name', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineStructureMapGroupRuleDependentJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureMapGroupRuleDependent'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureMapGroupRuleDependentPropsJs(js, def, xv);
end;

procedure defineStructureMapPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'StructureMap'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'structure', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'StructureMap'+v(xv), 'group', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineStructureMapJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('StructureMap'+v(xv), nil, js.FHIRFactoryJs);
  defineStructureMapPropsJs(js, def, xv);
end;

procedure defineSubscriptionFilterByPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubscriptionFilterBy'+v(xv), 'searchParamName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionFilterBy'+v(xv), 'searchModifier', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionFilterBy'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineSubscriptionFilterByJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubscriptionFilterBy'+v(xv), nil, js.FHIRFactoryJs);
  defineSubscriptionFilterByPropsJs(js, def, xv);
end;

procedure defineSubscriptionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Subscription'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Subscription'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Subscription'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Subscription'+v(xv), 'topic', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Subscription'+v(xv), 'contact', 'ContactPoint'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Subscription'+v(xv), 'end_', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Subscription'+v(xv), 'reason', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Subscription'+v(xv), 'filterBy', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Subscription'+v(xv), 'channelType', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Subscription'+v(xv), 'endpoint', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Subscription'+v(xv), 'heartbeatPeriod', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Subscription'+v(xv), 'timeout', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Subscription'+v(xv), 'contentType', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Subscription'+v(xv), 'content', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineSubscriptionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Subscription'+v(xv), nil, js.FHIRFactoryJs);
  defineSubscriptionPropsJs(js, def, xv);
end;

procedure defineSubscriptionStatusPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'SubscriptionStatus'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionStatus'+v(xv), 'eventsSinceSubscriptionStart', 'integer64'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionStatus'+v(xv), 'eventsInNotification', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'SubscriptionStatus'+v(xv), 'subscription', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubscriptionStatus'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionStatus'+v(xv), 'topic', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionStatus'+v(xv), 'error', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubscriptionStatusJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubscriptionStatus'+v(xv), nil, js.FHIRFactoryJs);
  defineSubscriptionStatusPropsJs(js, def, xv);
end;

procedure defineSubscriptionTopicResourceTriggerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubscriptionTopicResourceTrigger'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionTopicResourceTrigger'+v(xv), 'queryCriteria', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubscriptionTopicResourceTriggerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubscriptionTopicResourceTrigger'+v(xv), nil, js.FHIRFactoryJs);
  defineSubscriptionTopicResourceTriggerPropsJs(js, def, xv);
end;

procedure defineSubscriptionTopicResourceTriggerQueryCriteriaPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubscriptionTopicResourceTriggerQueryCriteria'+v(xv), 'previous', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionTopicResourceTriggerQueryCriteria'+v(xv), 'current', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionTopicResourceTriggerQueryCriteria'+v(xv), 'requireBoth', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineSubscriptionTopicResourceTriggerQueryCriteriaJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubscriptionTopicResourceTriggerQueryCriteria'+v(xv), nil, js.FHIRFactoryJs);
  defineSubscriptionTopicResourceTriggerQueryCriteriaPropsJs(js, def, xv);
end;

procedure defineSubscriptionTopicCanFilterByPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubscriptionTopicCanFilterBy'+v(xv), 'searchParamName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionTopicCanFilterBy'+v(xv), 'documentation', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineSubscriptionTopicCanFilterByJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubscriptionTopicCanFilterBy'+v(xv), nil, js.FHIRFactoryJs);
  defineSubscriptionTopicCanFilterByPropsJs(js, def, xv);
end;

procedure defineSubscriptionTopicPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'publisher', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'approvalDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'lastReviewDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'effectivePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'resourceTrigger', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubscriptionTopic'+v(xv), 'canFilterBy', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubscriptionTopicJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubscriptionTopic'+v(xv), nil, js.FHIRFactoryJs);
  defineSubscriptionTopicPropsJs(js, def, xv);
end;

procedure defineSubstanceInstancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceInstance'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceInstance'+v(xv), 'expiry', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SubstanceInstance'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstanceInstanceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceInstance'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceInstancePropsJs(js, def, xv);
end;

procedure defineSubstanceIngredientPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceIngredient'+v(xv), 'quantity', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceIngredient'+v(xv), 'substanceCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceIngredient'+v(xv), 'substanceReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstanceIngredientJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceIngredient'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceIngredientPropsJs(js, def, xv);
end;

procedure defineSubstancePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Substance'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Substance'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Substance'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Substance'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Substance'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Substance'+v(xv), 'instance', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Substance'+v(xv), 'ingredient', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Substance'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstancePropsJs(js, def, xv);
end;

procedure defineSubstanceDefinitionMoietyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceDefinitionMoiety'+v(xv), 'role', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionMoiety'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionMoiety'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceDefinitionMoiety'+v(xv), 'stereochemistry', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionMoiety'+v(xv), 'opticalActivity', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionMoiety'+v(xv), 'molecularFormula', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceDefinitionMoiety'+v(xv), 'amountQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionMoiety'+v(xv), 'amountString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceDefinitionMoiety'+v(xv), 'amountType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstanceDefinitionMoietyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceDefinitionMoiety'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceDefinitionMoietyPropsJs(js, def, xv);
end;

procedure defineSubstanceDefinitionPropertyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceDefinitionProperty'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionProperty'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionProperty'+v(xv), 'parameters', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceDefinitionProperty'+v(xv), 'definingSubstance', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionProperty'+v(xv), 'amountQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionProperty'+v(xv), 'amountString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceDefinitionProperty'+v(xv), 'referenceRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionProperty'+v(xv), 'source', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceDefinitionPropertyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceDefinitionProperty'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceDefinitionPropertyPropsJs(js, def, xv);
end;

procedure defineSubstanceDefinitionStructurePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceDefinitionStructure'+v(xv), 'stereochemistry', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionStructure'+v(xv), 'opticalActivity', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionStructure'+v(xv), 'molecularFormula', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceDefinitionStructure'+v(xv), 'molecularFormulaByMoiety', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceDefinitionStructure'+v(xv), 'isotope', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinitionStructure'+v(xv), 'molecularWeight', '??'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionStructure'+v(xv), 'technique', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinitionStructure'+v(xv), 'sourceDocument', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinitionStructure'+v(xv), 'representation', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceDefinitionStructureJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceDefinitionStructure'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceDefinitionStructurePropsJs(js, def, xv);
end;

procedure defineSubstanceDefinitionStructureIsotopePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceDefinitionStructureIsotope'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionStructureIsotope'+v(xv), 'name', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionStructureIsotope'+v(xv), 'substitution', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionStructureIsotope'+v(xv), 'halfLife', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionStructureIsotope'+v(xv), 'molecularWeight', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstanceDefinitionStructureIsotopeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceDefinitionStructureIsotope'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceDefinitionStructureIsotopePropsJs(js, def, xv);
end;

procedure defineSubstanceDefinitionStructureIsotopeMolecularWeightPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceDefinitionStructureIsotopeMolecularWeight'+v(xv), 'method', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionStructureIsotopeMolecularWeight'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionStructureIsotopeMolecularWeight'+v(xv), 'amount', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstanceDefinitionStructureIsotopeMolecularWeightJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceDefinitionStructureIsotopeMolecularWeight'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceDefinitionStructureIsotopeMolecularWeightPropsJs(js, def, xv);
end;

procedure defineSubstanceDefinitionStructureRepresentationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceDefinitionStructureRepresentation'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionStructureRepresentation'+v(xv), 'representation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceDefinitionStructureRepresentation'+v(xv), 'format', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionStructureRepresentation'+v(xv), 'document', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstanceDefinitionStructureRepresentationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceDefinitionStructureRepresentation'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceDefinitionStructureRepresentationPropsJs(js, def, xv);
end;

procedure defineSubstanceDefinitionCodePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceDefinitionCode'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionCode'+v(xv), 'status', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionCode'+v(xv), 'statusDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SubstanceDefinitionCode'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinitionCode'+v(xv), 'source', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceDefinitionCodeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceDefinitionCode'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceDefinitionCodePropsJs(js, def, xv);
end;

procedure defineSubstanceDefinitionNamePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceDefinitionName'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceDefinitionName'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionName'+v(xv), 'status', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionName'+v(xv), 'preferred', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'SubstanceDefinitionName'+v(xv), 'language', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinitionName'+v(xv), 'domain', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinitionName'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinitionName'+v(xv), 'synonym', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinitionName'+v(xv), 'translation', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinitionName'+v(xv), 'official', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinitionName'+v(xv), 'source', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceDefinitionNameJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceDefinitionName'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceDefinitionNamePropsJs(js, def, xv);
end;

procedure defineSubstanceDefinitionNameOfficialPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceDefinitionNameOfficial'+v(xv), 'authority', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionNameOfficial'+v(xv), 'status', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionNameOfficial'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineSubstanceDefinitionNameOfficialJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceDefinitionNameOfficial'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceDefinitionNameOfficialPropsJs(js, def, xv);
end;

procedure defineSubstanceDefinitionRelationshipPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceDefinitionRelationship'+v(xv), 'substanceDefinitionReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionRelationship'+v(xv), 'substanceDefinitionCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionRelationship'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionRelationship'+v(xv), 'isDefining', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'SubstanceDefinitionRelationship'+v(xv), 'amountQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionRelationship'+v(xv), 'amountRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionRelationship'+v(xv), 'amountRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionRelationship'+v(xv), 'amountString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceDefinitionRelationship'+v(xv), 'amountRatioHighLimit', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionRelationship'+v(xv), 'amountType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinitionRelationship'+v(xv), 'source', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceDefinitionRelationshipJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceDefinitionRelationship'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceDefinitionRelationshipPropsJs(js, def, xv);
end;

procedure defineSubstanceDefinitionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'status', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'classification', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'domain', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'source', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'manufacturer', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'supplier', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'moiety', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'property', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'referenceInformation', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'structure', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'code', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'name', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'molecularWeight', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'relationship', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'nucleicAcid', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'polymer', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'protein', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceDefinition'+v(xv), 'sourceMaterial', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstanceDefinitionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceDefinition'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceDefinitionPropsJs(js, def, xv);
end;

procedure defineSubstanceNucleicAcidSubunitPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceNucleicAcidSubunit'+v(xv), 'subunit', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'SubstanceNucleicAcidSubunit'+v(xv), 'sequence', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceNucleicAcidSubunit'+v(xv), 'length', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'SubstanceNucleicAcidSubunit'+v(xv), 'sequenceAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceNucleicAcidSubunit'+v(xv), 'fivePrime', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceNucleicAcidSubunit'+v(xv), 'threePrime', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceNucleicAcidSubunit'+v(xv), 'linkage', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceNucleicAcidSubunit'+v(xv), 'sugar', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceNucleicAcidSubunitJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceNucleicAcidSubunit'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceNucleicAcidSubunitPropsJs(js, def, xv);
end;

procedure defineSubstanceNucleicAcidSubunitLinkagePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceNucleicAcidSubunitLinkage'+v(xv), 'connectivity', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceNucleicAcidSubunitLinkage'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceNucleicAcidSubunitLinkage'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceNucleicAcidSubunitLinkage'+v(xv), 'residueSite', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineSubstanceNucleicAcidSubunitLinkageJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceNucleicAcidSubunitLinkage'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceNucleicAcidSubunitLinkagePropsJs(js, def, xv);
end;

procedure defineSubstanceNucleicAcidSubunitSugarPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceNucleicAcidSubunitSugar'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceNucleicAcidSubunitSugar'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceNucleicAcidSubunitSugar'+v(xv), 'residueSite', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineSubstanceNucleicAcidSubunitSugarJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceNucleicAcidSubunitSugar'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceNucleicAcidSubunitSugarPropsJs(js, def, xv);
end;

procedure defineSubstanceNucleicAcidPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceNucleicAcid'+v(xv), 'sequenceType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceNucleicAcid'+v(xv), 'numberOfSubunits', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'SubstanceNucleicAcid'+v(xv), 'areaOfHybridisation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceNucleicAcid'+v(xv), 'oligoNucleotideType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceNucleicAcid'+v(xv), 'subunit', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceNucleicAcidJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceNucleicAcid'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceNucleicAcidPropsJs(js, def, xv);
end;

procedure defineSubstancePolymerMonomerSetPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstancePolymerMonomerSet'+v(xv), 'ratioType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstancePolymerMonomerSet'+v(xv), 'startingMaterial', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstancePolymerMonomerSetJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstancePolymerMonomerSet'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstancePolymerMonomerSetPropsJs(js, def, xv);
end;

procedure defineSubstancePolymerMonomerSetStartingMaterialPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstancePolymerMonomerSetStartingMaterial'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstancePolymerMonomerSetStartingMaterial'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstancePolymerMonomerSetStartingMaterial'+v(xv), 'isDefining', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'SubstancePolymerMonomerSetStartingMaterial'+v(xv), 'amount', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstancePolymerMonomerSetStartingMaterialJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstancePolymerMonomerSetStartingMaterial'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstancePolymerMonomerSetStartingMaterialPropsJs(js, def, xv);
end;

procedure defineSubstancePolymerRepeatPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstancePolymerRepeat'+v(xv), 'averageMolecularFormula', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstancePolymerRepeat'+v(xv), 'repeatUnitAmountType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstancePolymerRepeat'+v(xv), 'repeatUnit', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstancePolymerRepeatJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstancePolymerRepeat'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstancePolymerRepeatPropsJs(js, def, xv);
end;

procedure defineSubstancePolymerRepeatRepeatUnitPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstancePolymerRepeatRepeatUnit'+v(xv), 'unit_', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstancePolymerRepeatRepeatUnit'+v(xv), 'orientation', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstancePolymerRepeatRepeatUnit'+v(xv), 'amount', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'SubstancePolymerRepeatRepeatUnit'+v(xv), 'degreeOfPolymerisation', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstancePolymerRepeatRepeatUnit'+v(xv), 'structuralRepresentation', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstancePolymerRepeatRepeatUnitJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstancePolymerRepeatRepeatUnit'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstancePolymerRepeatRepeatUnitPropsJs(js, def, xv);
end;

procedure defineSubstancePolymerRepeatRepeatUnitDegreeOfPolymerisationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation'+v(xv), 'average', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation'+v(xv), 'low', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation'+v(xv), 'high', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
end;

procedure defineSubstancePolymerRepeatRepeatUnitDegreeOfPolymerisationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstancePolymerRepeatRepeatUnitDegreeOfPolymerisation'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstancePolymerRepeatRepeatUnitDegreeOfPolymerisationPropsJs(js, def, xv);
end;

procedure defineSubstancePolymerRepeatRepeatUnitStructuralRepresentationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstancePolymerRepeatRepeatUnitStructuralRepresentation'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstancePolymerRepeatRepeatUnitStructuralRepresentation'+v(xv), 'representation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstancePolymerRepeatRepeatUnitStructuralRepresentation'+v(xv), 'format', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstancePolymerRepeatRepeatUnitStructuralRepresentation'+v(xv), 'attachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstancePolymerRepeatRepeatUnitStructuralRepresentationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstancePolymerRepeatRepeatUnitStructuralRepresentation'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstancePolymerRepeatRepeatUnitStructuralRepresentationPropsJs(js, def, xv);
end;

procedure defineSubstancePolymerPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'SubstancePolymer'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstancePolymer'+v(xv), 'class', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstancePolymer'+v(xv), 'geometry', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstancePolymer'+v(xv), 'copolymerConnectivity', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstancePolymer'+v(xv), 'modification', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstancePolymer'+v(xv), 'monomerSet', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstancePolymer'+v(xv), 'repeat', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstancePolymerJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstancePolymer'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstancePolymerPropsJs(js, def, xv);
end;

procedure defineSubstanceProteinSubunitPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceProteinSubunit'+v(xv), 'subunit', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'SubstanceProteinSubunit'+v(xv), 'sequence', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceProteinSubunit'+v(xv), 'length', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'SubstanceProteinSubunit'+v(xv), 'sequenceAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceProteinSubunit'+v(xv), 'nTerminalModificationId', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceProteinSubunit'+v(xv), 'nTerminalModification', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceProteinSubunit'+v(xv), 'cTerminalModificationId', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceProteinSubunit'+v(xv), 'cTerminalModification', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineSubstanceProteinSubunitJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceProteinSubunit'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceProteinSubunitPropsJs(js, def, xv);
end;

procedure defineSubstanceProteinPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceProtein'+v(xv), 'sequenceType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceProtein'+v(xv), 'numberOfSubunits', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'SubstanceProtein'+v(xv), 'subunit', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceProteinJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceProtein'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceProteinPropsJs(js, def, xv);
end;

procedure defineSubstanceReferenceInformationGenePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceReferenceInformationGene'+v(xv), 'geneSequenceOrigin', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceReferenceInformationGene'+v(xv), 'gene', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceReferenceInformationGene'+v(xv), 'source', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceReferenceInformationGeneJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceReferenceInformationGene'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceReferenceInformationGenePropsJs(js, def, xv);
end;

procedure defineSubstanceReferenceInformationGeneElementPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceReferenceInformationGeneElement'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceReferenceInformationGeneElement'+v(xv), 'element', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceReferenceInformationGeneElement'+v(xv), 'source', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceReferenceInformationGeneElementJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceReferenceInformationGeneElement'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceReferenceInformationGeneElementPropsJs(js, def, xv);
end;

procedure defineSubstanceReferenceInformationTargetPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceReferenceInformationTarget'+v(xv), 'target', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceReferenceInformationTarget'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceReferenceInformationTarget'+v(xv), 'interaction', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceReferenceInformationTarget'+v(xv), 'organism', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceReferenceInformationTarget'+v(xv), 'organismType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceReferenceInformationTarget'+v(xv), 'amountQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceReferenceInformationTarget'+v(xv), 'amountRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceReferenceInformationTarget'+v(xv), 'amountString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceReferenceInformationTarget'+v(xv), 'amountType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceReferenceInformationTarget'+v(xv), 'source', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceReferenceInformationTargetJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceReferenceInformationTarget'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceReferenceInformationTargetPropsJs(js, def, xv);
end;

procedure defineSubstanceReferenceInformationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceReferenceInformation'+v(xv), 'comment', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceReferenceInformation'+v(xv), 'gene', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceReferenceInformation'+v(xv), 'geneElement', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceReferenceInformation'+v(xv), 'target', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceReferenceInformationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceReferenceInformation'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceReferenceInformationPropsJs(js, def, xv);
end;

procedure defineSubstanceSourceMaterialFractionDescriptionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceSourceMaterialFractionDescription'+v(xv), 'fraction', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceSourceMaterialFractionDescription'+v(xv), 'materialType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstanceSourceMaterialFractionDescriptionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceSourceMaterialFractionDescription'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceSourceMaterialFractionDescriptionPropsJs(js, def, xv);
end;

procedure defineSubstanceSourceMaterialOrganismPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceSourceMaterialOrganism'+v(xv), 'family', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganism'+v(xv), 'genus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganism'+v(xv), 'species', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganism'+v(xv), 'intraspecificType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganism'+v(xv), 'intraspecificDescription', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganism'+v(xv), 'author', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganism'+v(xv), 'hybrid', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganism'+v(xv), 'organismGeneral', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstanceSourceMaterialOrganismJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceSourceMaterialOrganism'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceSourceMaterialOrganismPropsJs(js, def, xv);
end;

procedure defineSubstanceSourceMaterialOrganismAuthorPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceSourceMaterialOrganismAuthor'+v(xv), 'authorType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganismAuthor'+v(xv), 'authorDescription', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineSubstanceSourceMaterialOrganismAuthorJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceSourceMaterialOrganismAuthor'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceSourceMaterialOrganismAuthorPropsJs(js, def, xv);
end;

procedure defineSubstanceSourceMaterialOrganismHybridPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceSourceMaterialOrganismHybrid'+v(xv), 'maternalOrganismId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganismHybrid'+v(xv), 'maternalOrganismName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganismHybrid'+v(xv), 'paternalOrganismId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganismHybrid'+v(xv), 'paternalOrganismName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganismHybrid'+v(xv), 'hybridType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstanceSourceMaterialOrganismHybridJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceSourceMaterialOrganismHybrid'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceSourceMaterialOrganismHybridPropsJs(js, def, xv);
end;

procedure defineSubstanceSourceMaterialOrganismOrganismGeneralPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceSourceMaterialOrganismOrganismGeneral'+v(xv), 'kingdom', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganismOrganismGeneral'+v(xv), 'phylum', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganismOrganismGeneral'+v(xv), 'class', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterialOrganismOrganismGeneral'+v(xv), 'order', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstanceSourceMaterialOrganismOrganismGeneralJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceSourceMaterialOrganismOrganismGeneral'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceSourceMaterialOrganismOrganismGeneralPropsJs(js, def, xv);
end;

procedure defineSubstanceSourceMaterialPartDescriptionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceSourceMaterialPartDescription'+v(xv), 'part', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterialPartDescription'+v(xv), 'partLocation', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSubstanceSourceMaterialPartDescriptionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceSourceMaterialPartDescription'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceSourceMaterialPartDescriptionPropsJs(js, def, xv);
end;

procedure defineSubstanceSourceMaterialPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'SubstanceSourceMaterial'+v(xv), 'sourceMaterialClass', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterial'+v(xv), 'sourceMaterialType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterial'+v(xv), 'sourceMaterialState', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterial'+v(xv), 'organismId', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterial'+v(xv), 'organismName', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SubstanceSourceMaterial'+v(xv), 'parentSubstanceId', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceSourceMaterial'+v(xv), 'countryOfOrigin', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceSourceMaterial'+v(xv), 'developmentStage', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterial'+v(xv), 'fractionDescription', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SubstanceSourceMaterial'+v(xv), 'organism', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SubstanceSourceMaterial'+v(xv), 'partDescription', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSubstanceSourceMaterialJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SubstanceSourceMaterial'+v(xv), nil, js.FHIRFactoryJs);
  defineSubstanceSourceMaterialPropsJs(js, def, xv);
end;

procedure defineSupplyDeliverySuppliedItemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SupplyDeliverySuppliedItem'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyDeliverySuppliedItem'+v(xv), 'itemCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyDeliverySuppliedItem'+v(xv), 'itemReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSupplyDeliverySuppliedItemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SupplyDeliverySuppliedItem'+v(xv), nil, js.FHIRFactoryJs);
  defineSupplyDeliverySuppliedItemPropsJs(js, def, xv);
end;

procedure defineSupplyDeliveryPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'SupplyDelivery'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SupplyDelivery'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SupplyDelivery'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SupplyDelivery'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SupplyDelivery'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyDelivery'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyDelivery'+v(xv), 'suppliedItem', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyDelivery'+v(xv), 'occurrenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SupplyDelivery'+v(xv), 'occurrencePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyDelivery'+v(xv), 'occurrenceTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyDelivery'+v(xv), 'supplier', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyDelivery'+v(xv), 'destination', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyDelivery'+v(xv), 'receiver', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineSupplyDeliveryJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SupplyDelivery'+v(xv), nil, js.FHIRFactoryJs);
  defineSupplyDeliveryPropsJs(js, def, xv);
end;

procedure defineSupplyRequestParameterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'SupplyRequestParameter'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyRequestParameter'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyRequestParameter'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyRequestParameter'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyRequestParameter'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineSupplyRequestParameterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SupplyRequestParameter'+v(xv), nil, js.FHIRFactoryJs);
  defineSupplyRequestParameterPropsJs(js, def, xv);
end;

procedure defineSupplyRequestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'category', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'priority', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'item', 'CodeableReference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'quantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'parameter', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'occurrenceDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'occurrencePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'occurrenceTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'authoredOn', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'requester', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'supplier', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'reason', 'CodeableReference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'deliverFrom', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'SupplyRequest'+v(xv), 'deliverTo', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineSupplyRequestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('SupplyRequest'+v(xv), nil, js.FHIRFactoryJs);
  defineSupplyRequestPropsJs(js, def, xv);
end;

procedure defineTaskRestrictionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TaskRestriction'+v(xv), 'repetitions', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TaskRestriction'+v(xv), 'period', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskRestriction'+v(xv), 'recipient', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineTaskRestrictionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TaskRestriction'+v(xv), nil, js.FHIRFactoryJs);
  defineTaskRestrictionPropsJs(js, def, xv);
end;

procedure defineTaskInputPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TaskInput'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueBase64Binary', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueCode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueInstant', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueInteger64', 'integer64'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueMarkdown', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueOid', 'oid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valuePositiveInt', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueUrl', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueUuid', 'uuid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueAnnotation', 'Annotation'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueContactPoint', 'ContactPoint'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueCount', 'Count'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueDistance', 'Distance'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueHumanName', 'HumanName'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valuePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueSampledData', 'SampledData'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueSignature', 'Signature'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueContactDetail', 'ContactDetail'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueContributor', 'Contributor'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueDataRequirement', 'DataRequirement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueExpression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueParameterDefinition', 'ParameterDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueRelatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueTriggerDefinition', 'TriggerDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueUsageContext', 'UsageContext'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueDosage', 'Dosage'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskInput'+v(xv), 'valueMeta', 'Meta'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTaskInputJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TaskInput'+v(xv), nil, js.FHIRFactoryJs);
  defineTaskInputPropsJs(js, def, xv);
end;

procedure defineTaskOutputPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TaskOutput'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueBase64Binary', 'base64Binary'+v(xv), js.getFHIRBinaryProp, js.setFHIRBinaryProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueCode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueInstant', 'instant'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueInteger64', 'integer64'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueMarkdown', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueOid', 'oid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valuePositiveInt', 'positiveInt'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueTime', 'time'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueUnsignedInt', 'unsignedInt'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueUrl', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueUuid', 'uuid'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueAddress', 'Address'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueAge', 'Age'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueAnnotation', 'Annotation'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueAttachment', 'Attachment'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueCodeableConcept', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueContactPoint', 'ContactPoint'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueCount', 'Count'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueDistance', 'Distance'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueDuration', 'Duration'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueHumanName', 'HumanName'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueMoney', 'Money'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valuePeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueQuantity', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueRange', 'Range'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueRatio', 'Ratio'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueSampledData', 'SampledData'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueSignature', 'Signature'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueTiming', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueContactDetail', 'ContactDetail'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueContributor', 'Contributor'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueDataRequirement', 'DataRequirement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueExpression', 'Expression'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueParameterDefinition', 'ParameterDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueRelatedArtifact', 'RelatedArtifact'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueTriggerDefinition', 'TriggerDefinition'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueUsageContext', 'UsageContext'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueDosage', 'Dosage'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TaskOutput'+v(xv), 'valueMeta', 'Meta'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTaskOutputJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TaskOutput'+v(xv), nil, js.FHIRFactoryJs);
  defineTaskOutputPropsJs(js, def, xv);
end;

procedure defineTaskPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'Task'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Task'+v(xv), 'instantiatesCanonical', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Task'+v(xv), 'instantiatesUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Task'+v(xv), 'basedOn', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Task'+v(xv), 'groupIdentifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'partOf', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Task'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Task'+v(xv), 'statusReason', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'businessStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'intent', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Task'+v(xv), 'priority', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Task'+v(xv), 'code', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'Task'+v(xv), 'focus', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'for', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'executionPeriod', 'Period'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'authoredOn', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Task'+v(xv), 'lastModified', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'Task'+v(xv), 'requester', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'performerType', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Task'+v(xv), 'owner', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'location', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'reasonCode', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'reasonReference', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'insurance', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Task'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Task'+v(xv), 'relevantHistory', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Task'+v(xv), 'restriction', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'Task'+v(xv), 'input', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'Task'+v(xv), 'output', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineTaskJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('Task'+v(xv), nil, js.FHIRFactoryJs);
  defineTaskPropsJs(js, def, xv);
end;

procedure defineTerminologyCapabilitiesSoftwarePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TerminologyCapabilitiesSoftware'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilitiesSoftware'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTerminologyCapabilitiesSoftwareJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TerminologyCapabilitiesSoftware'+v(xv), nil, js.FHIRFactoryJs);
  defineTerminologyCapabilitiesSoftwarePropsJs(js, def, xv);
end;

procedure defineTerminologyCapabilitiesImplementationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TerminologyCapabilitiesImplementation'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilitiesImplementation'+v(xv), 'url', 'url'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTerminologyCapabilitiesImplementationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TerminologyCapabilitiesImplementation'+v(xv), nil, js.FHIRFactoryJs);
  defineTerminologyCapabilitiesImplementationPropsJs(js, def, xv);
end;

procedure defineTerminologyCapabilitiesCodeSystemPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TerminologyCapabilitiesCodeSystem'+v(xv), 'uri', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilitiesCodeSystem'+v(xv), 'version', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TerminologyCapabilitiesCodeSystem'+v(xv), 'subsumption', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineTerminologyCapabilitiesCodeSystemJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TerminologyCapabilitiesCodeSystem'+v(xv), nil, js.FHIRFactoryJs);
  defineTerminologyCapabilitiesCodeSystemPropsJs(js, def, xv);
end;

procedure defineTerminologyCapabilitiesCodeSystemVersionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TerminologyCapabilitiesCodeSystemVersion'+v(xv), 'code', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilitiesCodeSystemVersion'+v(xv), 'isDefault', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TerminologyCapabilitiesCodeSystemVersion'+v(xv), 'compositional', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TerminologyCapabilitiesCodeSystemVersion'+v(xv), 'filter', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineTerminologyCapabilitiesCodeSystemVersionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TerminologyCapabilitiesCodeSystemVersion'+v(xv), nil, js.FHIRFactoryJs);
  defineTerminologyCapabilitiesCodeSystemVersionPropsJs(js, def, xv);
end;

procedure defineTerminologyCapabilitiesCodeSystemVersionFilterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TerminologyCapabilitiesCodeSystemVersionFilter'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTerminologyCapabilitiesCodeSystemVersionFilterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TerminologyCapabilitiesCodeSystemVersionFilter'+v(xv), nil, js.FHIRFactoryJs);
  defineTerminologyCapabilitiesCodeSystemVersionFilterPropsJs(js, def, xv);
end;

procedure defineTerminologyCapabilitiesExpansionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TerminologyCapabilitiesExpansion'+v(xv), 'hierarchical', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TerminologyCapabilitiesExpansion'+v(xv), 'paging', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TerminologyCapabilitiesExpansion'+v(xv), 'incomplete', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TerminologyCapabilitiesExpansion'+v(xv), 'parameter', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TerminologyCapabilitiesExpansion'+v(xv), 'textFilter', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTerminologyCapabilitiesExpansionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TerminologyCapabilitiesExpansion'+v(xv), nil, js.FHIRFactoryJs);
  defineTerminologyCapabilitiesExpansionPropsJs(js, def, xv);
end;

procedure defineTerminologyCapabilitiesExpansionParameterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TerminologyCapabilitiesExpansionParameter'+v(xv), 'name', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilitiesExpansionParameter'+v(xv), 'documentation', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTerminologyCapabilitiesExpansionParameterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TerminologyCapabilitiesExpansionParameter'+v(xv), nil, js.FHIRFactoryJs);
  defineTerminologyCapabilitiesExpansionParameterPropsJs(js, def, xv);
end;

procedure defineTerminologyCapabilitiesValidateCodePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TerminologyCapabilitiesValidateCode'+v(xv), 'translations', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineTerminologyCapabilitiesValidateCodeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TerminologyCapabilitiesValidateCode'+v(xv), nil, js.FHIRFactoryJs);
  defineTerminologyCapabilitiesValidateCodePropsJs(js, def, xv);
end;

procedure defineTerminologyCapabilitiesTranslationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TerminologyCapabilitiesTranslation'+v(xv), 'needsMap', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineTerminologyCapabilitiesTranslationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TerminologyCapabilitiesTranslation'+v(xv), nil, js.FHIRFactoryJs);
  defineTerminologyCapabilitiesTranslationPropsJs(js, def, xv);
end;

procedure defineTerminologyCapabilitiesClosurePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TerminologyCapabilitiesClosure'+v(xv), 'translation', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineTerminologyCapabilitiesClosureJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TerminologyCapabilitiesClosure'+v(xv), nil, js.FHIRFactoryJs);
  defineTerminologyCapabilitiesClosurePropsJs(js, def, xv);
end;

procedure defineTerminologyCapabilitiesPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'kind', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'software', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'implementation', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'lockedDate', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'codeSystem', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'expansion', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'codeSearch', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'validateCode', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'translation', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TerminologyCapabilities'+v(xv), 'closure', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTerminologyCapabilitiesJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TerminologyCapabilities'+v(xv), nil, js.FHIRFactoryJs);
  defineTerminologyCapabilitiesPropsJs(js, def, xv);
end;

procedure defineTestReportParticipantPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestReportParticipant'+v(xv), 'type_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestReportParticipant'+v(xv), 'uri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestReportParticipant'+v(xv), 'display', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTestReportParticipantJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestReportParticipant'+v(xv), nil, js.FHIRFactoryJs);
  defineTestReportParticipantPropsJs(js, def, xv);
end;

procedure defineTestReportSetupPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestReportSetup'+v(xv), 'action', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineTestReportSetupJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestReportSetup'+v(xv), nil, js.FHIRFactoryJs);
  defineTestReportSetupPropsJs(js, def, xv);
end;

procedure defineTestReportSetupActionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestReportSetupAction'+v(xv), 'operation', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TestReportSetupAction'+v(xv), 'assert', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTestReportSetupActionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestReportSetupAction'+v(xv), nil, js.FHIRFactoryJs);
  defineTestReportSetupActionPropsJs(js, def, xv);
end;

procedure defineTestReportSetupActionOperationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestReportSetupActionOperation'+v(xv), 'result', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestReportSetupActionOperation'+v(xv), 'message', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestReportSetupActionOperation'+v(xv), 'detail', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTestReportSetupActionOperationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestReportSetupActionOperation'+v(xv), nil, js.FHIRFactoryJs);
  defineTestReportSetupActionOperationPropsJs(js, def, xv);
end;

procedure defineTestReportSetupActionAssertPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestReportSetupActionAssert'+v(xv), 'result', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestReportSetupActionAssert'+v(xv), 'message', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestReportSetupActionAssert'+v(xv), 'detail', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTestReportSetupActionAssertJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestReportSetupActionAssert'+v(xv), nil, js.FHIRFactoryJs);
  defineTestReportSetupActionAssertPropsJs(js, def, xv);
end;

procedure defineTestReportTestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestReportTest'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestReportTest'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestReportTest'+v(xv), 'action', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineTestReportTestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestReportTest'+v(xv), nil, js.FHIRFactoryJs);
  defineTestReportTestPropsJs(js, def, xv);
end;

procedure defineTestReportTestActionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestReportTestAction'+v(xv), 'operation', '??'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TestReportTestAction'+v(xv), 'assert', '??'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTestReportTestActionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestReportTestAction'+v(xv), nil, js.FHIRFactoryJs);
  defineTestReportTestActionPropsJs(js, def, xv);
end;

procedure defineTestReportTeardownPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestReportTeardown'+v(xv), 'action', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineTestReportTeardownJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestReportTeardown'+v(xv), nil, js.FHIRFactoryJs);
  defineTestReportTeardownPropsJs(js, def, xv);
end;

procedure defineTestReportTeardownActionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestReportTeardownAction'+v(xv), 'operation', '??'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTestReportTeardownActionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestReportTeardownAction'+v(xv), nil, js.FHIRFactoryJs);
  defineTestReportTeardownActionPropsJs(js, def, xv);
end;

procedure defineTestReportPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'TestReport'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TestReport'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestReport'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestReport'+v(xv), 'testScript', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TestReport'+v(xv), 'result', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestReport'+v(xv), 'score', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'TestReport'+v(xv), 'tester', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestReport'+v(xv), 'issued', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'TestReport'+v(xv), 'participant', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TestReport'+v(xv), 'setup', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TestReport'+v(xv), 'test', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TestReport'+v(xv), 'teardown', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTestReportJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestReport'+v(xv), nil, js.FHIRFactoryJs);
  defineTestReportPropsJs(js, def, xv);
end;

procedure defineTestScriptOriginPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptOrigin'+v(xv), 'index', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TestScriptOrigin'+v(xv), 'profile', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTestScriptOriginJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptOrigin'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptOriginPropsJs(js, def, xv);
end;

procedure defineTestScriptDestinationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptDestination'+v(xv), 'index', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TestScriptDestination'+v(xv), 'profile', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTestScriptDestinationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptDestination'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptDestinationPropsJs(js, def, xv);
end;

procedure defineTestScriptMetadataPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptMetadata'+v(xv), 'link', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TestScriptMetadata'+v(xv), 'capability', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineTestScriptMetadataJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptMetadata'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptMetadataPropsJs(js, def, xv);
end;

procedure defineTestScriptMetadataLinkPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptMetadataLink'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptMetadataLink'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTestScriptMetadataLinkJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptMetadataLink'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptMetadataLinkPropsJs(js, def, xv);
end;

procedure defineTestScriptMetadataCapabilityPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptMetadataCapability'+v(xv), 'required', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TestScriptMetadataCapability'+v(xv), 'validated', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TestScriptMetadataCapability'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptMetadataCapability'+v(xv), 'destination', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TestScriptMetadataCapability'+v(xv), 'capabilities', 'canonical'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTestScriptMetadataCapabilityJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptMetadataCapability'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptMetadataCapabilityPropsJs(js, def, xv);
end;

procedure defineTestScriptFixturePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptFixture'+v(xv), 'autocreate', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TestScriptFixture'+v(xv), 'autodelete', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TestScriptFixture'+v(xv), 'resource', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTestScriptFixtureJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptFixture'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptFixturePropsJs(js, def, xv);
end;

procedure defineTestScriptVariablePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptVariable'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptVariable'+v(xv), 'defaultValue', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptVariable'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptVariable'+v(xv), 'expression', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptVariable'+v(xv), 'headerField', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptVariable'+v(xv), 'hint', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptVariable'+v(xv), 'path', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptVariable'+v(xv), 'sourceId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTestScriptVariableJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptVariable'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptVariablePropsJs(js, def, xv);
end;

procedure defineTestScriptSetupPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptSetup'+v(xv), 'action', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineTestScriptSetupJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptSetup'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptSetupPropsJs(js, def, xv);
end;

procedure defineTestScriptSetupActionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptSetupAction'+v(xv), 'operation', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TestScriptSetupAction'+v(xv), 'assert', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTestScriptSetupActionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptSetupAction'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptSetupActionPropsJs(js, def, xv);
end;

procedure defineTestScriptSetupActionOperationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'type', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'resource', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'label_', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'accept', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'contentType', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'destination', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'encodeRequestUrl', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'method', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'origin', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'params', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'requestHeader', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'requestId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'responseId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'sourceId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'targetId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionOperation'+v(xv), 'url', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTestScriptSetupActionOperationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptSetupActionOperation'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptSetupActionOperationPropsJs(js, def, xv);
end;

procedure defineTestScriptSetupActionOperationRequestHeaderPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptSetupActionOperationRequestHeader'+v(xv), 'field', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionOperationRequestHeader'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineTestScriptSetupActionOperationRequestHeaderJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptSetupActionOperationRequestHeader'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptSetupActionOperationRequestHeaderPropsJs(js, def, xv);
end;

procedure defineTestScriptSetupActionAssertPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'label_', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'direction', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'compareToSourceId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'compareToSourceExpression', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'compareToSourcePath', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'contentType', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'expression', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'headerField', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'minimumId', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'navigationLinks', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'operator', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'path', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'requestMethod', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'requestURL', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'resource', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'response', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'responseCode', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'sourceId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'validateProfileId', 'id'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptSetupActionAssert'+v(xv), 'warningOnly', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
end;

procedure defineTestScriptSetupActionAssertJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptSetupActionAssert'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptSetupActionAssertPropsJs(js, def, xv);
end;

procedure defineTestScriptTestPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptTest'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptTest'+v(xv), 'description', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScriptTest'+v(xv), 'action', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineTestScriptTestJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptTest'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptTestPropsJs(js, def, xv);
end;

procedure defineTestScriptTestActionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptTestAction'+v(xv), 'operation', '??'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TestScriptTestAction'+v(xv), 'assert', '??'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTestScriptTestActionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptTestAction'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptTestActionPropsJs(js, def, xv);
end;

procedure defineTestScriptTeardownPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptTeardown'+v(xv), 'action', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineTestScriptTeardownJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptTeardown'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptTeardownPropsJs(js, def, xv);
end;

procedure defineTestScriptTeardownActionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'TestScriptTeardownAction'+v(xv), 'operation', '??'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTestScriptTeardownActionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScriptTeardownAction'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptTeardownActionPropsJs(js, def, xv);
end;

procedure defineTestScriptPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'TestScript'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScript'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TestScript'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScript'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScript'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScript'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScript'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'TestScript'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'TestScript'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScript'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TestScript'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScript'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TestScript'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TestScript'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScript'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'TestScript'+v(xv), 'origin', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TestScript'+v(xv), 'destination', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TestScript'+v(xv), 'metadata', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TestScript'+v(xv), 'fixture', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TestScript'+v(xv), 'profile', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TestScript'+v(xv), 'variable', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TestScript'+v(xv), 'setup', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'TestScript'+v(xv), 'test', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'TestScript'+v(xv), 'teardown', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineTestScriptJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('TestScript'+v(xv), nil, js.FHIRFactoryJs);
  defineTestScriptPropsJs(js, def, xv);
end;

procedure defineValueSetComposePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ValueSetCompose'+v(xv), 'lockedDate', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ValueSetCompose'+v(xv), 'inactive', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ValueSetCompose'+v(xv), 'include', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ValueSetCompose'+v(xv), 'exclude', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineValueSetComposeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ValueSetCompose'+v(xv), nil, js.FHIRFactoryJs);
  defineValueSetComposePropsJs(js, def, xv);
end;

procedure defineValueSetComposeIncludePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ValueSetComposeInclude'+v(xv), 'system', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetComposeInclude'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetComposeInclude'+v(xv), 'concept', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ValueSetComposeInclude'+v(xv), 'filter', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineValueSetComposeIncludeJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ValueSetComposeInclude'+v(xv), nil, js.FHIRFactoryJs);
  defineValueSetComposeIncludePropsJs(js, def, xv);
end;

procedure defineValueSetComposeIncludeConceptPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ValueSetComposeIncludeConcept'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetComposeIncludeConcept'+v(xv), 'display', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetComposeIncludeConcept'+v(xv), 'designation', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineValueSetComposeIncludeConceptJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ValueSetComposeIncludeConcept'+v(xv), nil, js.FHIRFactoryJs);
  defineValueSetComposeIncludeConceptPropsJs(js, def, xv);
end;

procedure defineValueSetComposeIncludeConceptDesignationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ValueSetComposeIncludeConceptDesignation'+v(xv), 'language', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetComposeIncludeConceptDesignation'+v(xv), 'use', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ValueSetComposeIncludeConceptDesignation'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineValueSetComposeIncludeConceptDesignationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ValueSetComposeIncludeConceptDesignation'+v(xv), nil, js.FHIRFactoryJs);
  defineValueSetComposeIncludeConceptDesignationPropsJs(js, def, xv);
end;

procedure defineValueSetComposeIncludeFilterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ValueSetComposeIncludeFilter'+v(xv), 'property_', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetComposeIncludeFilter'+v(xv), 'op', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetComposeIncludeFilter'+v(xv), 'value', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineValueSetComposeIncludeFilterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ValueSetComposeIncludeFilter'+v(xv), nil, js.FHIRFactoryJs);
  defineValueSetComposeIncludeFilterPropsJs(js, def, xv);
end;

procedure defineValueSetExpansionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ValueSetExpansion'+v(xv), 'identifier', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetExpansion'+v(xv), 'timestamp', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ValueSetExpansion'+v(xv), 'total', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ValueSetExpansion'+v(xv), 'offset', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ValueSetExpansion'+v(xv), 'parameter', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ValueSetExpansion'+v(xv), 'property', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ValueSetExpansion'+v(xv), 'contains', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineValueSetExpansionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ValueSetExpansion'+v(xv), nil, js.FHIRFactoryJs);
  defineValueSetExpansionPropsJs(js, def, xv);
end;

procedure defineValueSetExpansionParameterPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ValueSetExpansionParameter'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetExpansionParameter'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetExpansionParameter'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ValueSetExpansionParameter'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ValueSetExpansionParameter'+v(xv), 'valueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'ValueSetExpansionParameter'+v(xv), 'valueUri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetExpansionParameter'+v(xv), 'valueCode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetExpansionParameter'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
end;

procedure defineValueSetExpansionParameterJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ValueSetExpansionParameter'+v(xv), nil, js.FHIRFactoryJs);
  defineValueSetExpansionParameterPropsJs(js, def, xv);
end;

procedure defineValueSetExpansionPropertyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ValueSetExpansionProperty'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetExpansionProperty'+v(xv), 'uri', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineValueSetExpansionPropertyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ValueSetExpansionProperty'+v(xv), nil, js.FHIRFactoryJs);
  defineValueSetExpansionPropertyPropsJs(js, def, xv);
end;

procedure defineValueSetExpansionContainsPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ValueSetExpansionContains'+v(xv), 'system', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetExpansionContains'+v(xv), 'abstract', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ValueSetExpansionContains'+v(xv), 'inactive', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ValueSetExpansionContains'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetExpansionContains'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetExpansionContains'+v(xv), 'display', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetExpansionContains'+v(xv), 'designation', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ValueSetExpansionContains'+v(xv), 'property', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ValueSetExpansionContains'+v(xv), 'contains', '??'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineValueSetExpansionContainsJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ValueSetExpansionContains'+v(xv), nil, js.FHIRFactoryJs);
  defineValueSetExpansionContainsPropsJs(js, def, xv);
end;

procedure defineValueSetExpansionContainsPropertyPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'ValueSetExpansionContainsProperty'+v(xv), 'code', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetExpansionContainsProperty'+v(xv), 'valueCode', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetExpansionContainsProperty'+v(xv), 'valueCoding', 'Coding'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ValueSetExpansionContainsProperty'+v(xv), 'valueString', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSetExpansionContainsProperty'+v(xv), 'valueInteger', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'ValueSetExpansionContainsProperty'+v(xv), 'valueBoolean', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ValueSetExpansionContainsProperty'+v(xv), 'valueDateTime', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ValueSetExpansionContainsProperty'+v(xv), 'valueDecimal', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
end;

procedure defineValueSetExpansionContainsPropertyJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ValueSetExpansionContainsProperty'+v(xv), nil, js.FHIRFactoryJs);
  defineValueSetExpansionContainsPropertyPropsJs(js, def, xv);
end;

procedure defineValueSetPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineCanonicalResourcePropsJs(js, def, xv);
  js.registerElement(def, 'ValueSet'+v(xv), 'url', 'uri'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'version', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'name', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'title', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'experimental', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'date', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'publisher', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'contact', 'ContactDetail'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'description', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'useContext', 'UsageContext'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'jurisdiction', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'immutable', 'boolean'+v(xv), js.getFHIRBooleanProp, js.setFHIRBooleanProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'purpose', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'copyright', 'markdown'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'compose', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'ValueSet'+v(xv), 'expansion', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineValueSetJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('ValueSet'+v(xv), nil, js.FHIRFactoryJs);
  defineValueSetPropsJs(js, def, xv);
end;

procedure defineVerificationResultPrimarySourcePropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'VerificationResultPrimarySource'+v(xv), 'who', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VerificationResultPrimarySource'+v(xv), 'type', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'VerificationResultPrimarySource'+v(xv), 'communicationMethod', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'VerificationResultPrimarySource'+v(xv), 'validationStatus', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VerificationResultPrimarySource'+v(xv), 'validationDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'VerificationResultPrimarySource'+v(xv), 'canPushUpdates', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VerificationResultPrimarySource'+v(xv), 'pushTypeAvailable', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineVerificationResultPrimarySourceJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('VerificationResultPrimarySource'+v(xv), nil, js.FHIRFactoryJs);
  defineVerificationResultPrimarySourcePropsJs(js, def, xv);
end;

procedure defineVerificationResultAttestationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'VerificationResultAttestation'+v(xv), 'who', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VerificationResultAttestation'+v(xv), 'onBehalfOf', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VerificationResultAttestation'+v(xv), 'communicationMethod', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VerificationResultAttestation'+v(xv), 'date', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'VerificationResultAttestation'+v(xv), 'sourceIdentityCertificate', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'VerificationResultAttestation'+v(xv), 'proxyIdentityCertificate', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'VerificationResultAttestation'+v(xv), 'proxySignature', 'Signature'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VerificationResultAttestation'+v(xv), 'sourceSignature', 'Signature'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineVerificationResultAttestationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('VerificationResultAttestation'+v(xv), nil, js.FHIRFactoryJs);
  defineVerificationResultAttestationPropsJs(js, def, xv);
end;

procedure defineVerificationResultValidatorPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'VerificationResultValidator'+v(xv), 'organization', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VerificationResultValidator'+v(xv), 'identityCertificate', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'VerificationResultValidator'+v(xv), 'attestationSignature', 'Signature'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
end;

procedure defineVerificationResultValidatorJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('VerificationResultValidator'+v(xv), nil, js.FHIRFactoryJs);
  defineVerificationResultValidatorPropsJs(js, def, xv);
end;

procedure defineVerificationResultPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'VerificationResult'+v(xv), 'target', 'Reference'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'VerificationResult'+v(xv), 'need', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VerificationResult'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'VerificationResult'+v(xv), 'statusDate', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'VerificationResult'+v(xv), 'validationType', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VerificationResult'+v(xv), 'validationProcess', 'CodeableConcept'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'VerificationResult'+v(xv), 'frequency', 'Timing'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VerificationResult'+v(xv), 'lastPerformed', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'VerificationResult'+v(xv), 'nextScheduled', 'date'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'VerificationResult'+v(xv), 'failureAction', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VerificationResult'+v(xv), 'primarySource', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'VerificationResult'+v(xv), 'attestation', 'BackboneElement'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VerificationResult'+v(xv), 'validator', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineVerificationResultJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('VerificationResult'+v(xv), nil, js.FHIRFactoryJs);
  defineVerificationResultPropsJs(js, def, xv);
end;

procedure defineVisionPrescriptionLensSpecificationPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'product', 'CodeableConcept'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'eye', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'sphere', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'cylinder', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'axis', 'integer'+v(xv), js.getFHIRIntegerProp, js.setFHIRIntegerProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'prism', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'add', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'power', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'backCurve', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'diameter', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'duration', 'Quantity'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'color', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'brand', 'string'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecification'+v(xv), 'note', 'Annotation'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineVisionPrescriptionLensSpecificationJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('VisionPrescriptionLensSpecification'+v(xv), nil, js.FHIRFactoryJs);
  defineVisionPrescriptionLensSpecificationPropsJs(js, def, xv);
end;

procedure defineVisionPrescriptionLensSpecificationPrismPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineBackboneElementPropsJs(js, def, xv);
  js.registerElement(def, 'VisionPrescriptionLensSpecificationPrism'+v(xv), 'amount', 'decimal'+v(xv), js.getFHIRDecimalProp, js.setFHIRDecimalProp);
  js.registerElement(def, 'VisionPrescriptionLensSpecificationPrism'+v(xv), 'base', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
end;

procedure defineVisionPrescriptionLensSpecificationPrismJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('VisionPrescriptionLensSpecificationPrism'+v(xv), nil, js.FHIRFactoryJs);
  defineVisionPrescriptionLensSpecificationPrismPropsJs(js, def, xv);
end;

procedure defineVisionPrescriptionPropsJs(js : TFHIRJavascript; def : TJavascriptClassDefinition; xv : boolean);
begin
  defineDomainResourcePropsJs(js, def, xv);
  js.registerElement(def, 'VisionPrescription'+v(xv), 'identifier', 'Identifier'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
  js.registerElement(def, 'VisionPrescription'+v(xv), 'status', 'code'+v(xv), js.getFHIRStringProp, js.setFHIRStringProp);
  js.registerElement(def, 'VisionPrescription'+v(xv), 'created', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'VisionPrescription'+v(xv), 'patient', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VisionPrescription'+v(xv), 'encounter', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VisionPrescription'+v(xv), 'dateWritten', 'dateTime'+v(xv), js.getFHIRDateTimeProp, js.setFHIRDateTimeProp);
  js.registerElement(def, 'VisionPrescription'+v(xv), 'prescriber', 'Reference'+v(xv), js.getFHIRObjectProp, js.setFHIRObjectProp);
  js.registerElement(def, 'VisionPrescription'+v(xv), 'lensSpecification', 'BackboneElement'+v(xv), js.getFHIRArrayProp, js.setFHIRArrayProp);
end;

procedure defineVisionPrescriptionJs(js : TFHIRJavascript; xv : boolean);
var
  def : TJavascriptClassDefinition;
begin
  def := js.defineClass('VisionPrescription'+v(xv), nil, js.FHIRFactoryJs);
  defineVisionPrescriptionPropsJs(js, def, xv);
end;



procedure registerFHIRTypesInt(js : TFHIRJavascript; vs : boolean);
begin
  defineAddressJs(js, vs); 
  defineAnnotationJs(js, vs); 
  defineAttachmentJs(js, vs); 
  defineCodeableConceptJs(js, vs); 
  defineCodeableReferenceJs(js, vs); 
  defineCodingJs(js, vs); 
  defineContactDetailJs(js, vs); 
  defineContactPointJs(js, vs); 
  defineContributorJs(js, vs); 
  defineDataRequirementCodeFilterJs(js, vs); 
  defineDataRequirementDateFilterJs(js, vs); 
  defineDataRequirementSortJs(js, vs); 
  defineDataRequirementJs(js, vs); 
  defineExpressionJs(js, vs); 
  defineExtensionJs(js, vs); 
  defineHumanNameJs(js, vs); 
  defineIdentifierJs(js, vs); 
  defineMetaJs(js, vs); 
  defineMoneyJs(js, vs); 
  defineNarrativeJs(js, vs); 
  defineParameterDefinitionJs(js, vs); 
  definePeriodJs(js, vs); 
  defineQuantityJs(js, vs); 
  defineRangeJs(js, vs); 
  defineRatioJs(js, vs); 
  defineReferenceJs(js, vs); 
  defineRelatedArtifactJs(js, vs); 
  defineSampledDataJs(js, vs); 
  defineSignatureJs(js, vs); 
  defineTriggerDefinitionJs(js, vs); 
  defineUsageContextJs(js, vs); 
  defineAgeJs(js, vs); 
  defineCountJs(js, vs); 
  defineDistanceJs(js, vs); 
  defineDosageDoseAndRateJs(js, vs); 
  defineDosageJs(js, vs); 
  defineDurationJs(js, vs); 
  defineElementDefinitionSlicingJs(js, vs); 
  defineElementDefinitionSlicingDiscriminatorJs(js, vs); 
  defineElementDefinitionBaseJs(js, vs); 
  defineElementDefinitionTypeJs(js, vs); 
  defineElementDefinitionExampleJs(js, vs); 
  defineElementDefinitionConstraintJs(js, vs); 
  defineElementDefinitionBindingJs(js, vs); 
  defineElementDefinitionMappingJs(js, vs); 
  defineElementDefinitionJs(js, vs); 
  defineMarketingStatusJs(js, vs); 
  defineOrderedDistributionIntervalJs(js, vs); 
  defineOrderedDistributionJs(js, vs); 
  definePopulationJs(js, vs); 
  defineProdCharacteristicJs(js, vs); 
  defineProductShelfLifeJs(js, vs); 
  defineStatisticSampleSizeJs(js, vs); 
  defineStatisticAttributeEstimateJs(js, vs); 
  defineStatisticAttributeEstimateAttributeEstimateJs(js, vs); 
  defineStatisticModelCharacteristicJs(js, vs); 
  defineStatisticModelCharacteristicVariableJs(js, vs); 
  defineStatisticJs(js, vs); 
  defineTimingRepeatJs(js, vs); 
  defineTimingJs(js, vs); 
  defineAccountCoverageJs(js, vs); 
  defineAccountGuarantorJs(js, vs); 
  defineAccountJs(js, vs); 
  defineActivityDefinitionParticipantJs(js, vs); 
  defineActivityDefinitionDynamicValueJs(js, vs); 
  defineActivityDefinitionJs(js, vs); 
  defineAdministrableProductDefinitionPropertyJs(js, vs); 
  defineAdministrableProductDefinitionRouteOfAdministrationJs(js, vs); 
  defineAdministrableProductDefinitionRouteOfAdministrationTargetSpeciesJs(js, vs); 
  defineAdministrableProductDefinitionRouteOfAdministrationTargetSpeciesWithdrawalPeriodJs(js, vs); 
  defineAdministrableProductDefinitionJs(js, vs); 
  defineAdverseEventParticipantJs(js, vs); 
  defineAdverseEventSuspectEntityJs(js, vs); 
  defineAdverseEventSuspectEntityCausalityJs(js, vs); 
  defineAdverseEventContributingFactorJs(js, vs); 
  defineAdverseEventPreventiveActionJs(js, vs); 
  defineAdverseEventMitigatingActionJs(js, vs); 
  defineAdverseEventSupportingInfoJs(js, vs); 
  defineAdverseEventJs(js, vs); 
  defineAllergyIntoleranceReactionJs(js, vs); 
  defineAllergyIntoleranceJs(js, vs); 
  defineAppointmentParticipantJs(js, vs); 
  defineAppointmentJs(js, vs); 
  defineAppointmentResponseJs(js, vs); 
  defineAuditEventAgentJs(js, vs); 
  defineAuditEventAgentNetworkJs(js, vs); 
  defineAuditEventSourceJs(js, vs); 
  defineAuditEventEntityJs(js, vs); 
  defineAuditEventEntityDetailJs(js, vs); 
  defineAuditEventJs(js, vs); 
  defineBasicJs(js, vs); 
  defineBinaryJs(js, vs); 
  defineBiologicallyDerivedProductCollectionJs(js, vs); 
  defineBiologicallyDerivedProductProcessingJs(js, vs); 
  defineBiologicallyDerivedProductManipulationJs(js, vs); 
  defineBiologicallyDerivedProductStorageJs(js, vs); 
  defineBiologicallyDerivedProductJs(js, vs); 
  defineBodyStructureJs(js, vs); 
  defineBundleLinkJs(js, vs); 
  defineBundleEntryJs(js, vs); 
  defineBundleEntrySearchJs(js, vs); 
  defineBundleEntryRequestJs(js, vs); 
  defineBundleEntryResponseJs(js, vs); 
  defineBundleJs(js, vs); 
  defineCapabilityStatementSoftwareJs(js, vs); 
  defineCapabilityStatementImplementationJs(js, vs); 
  defineCapabilityStatementRestJs(js, vs); 
  defineCapabilityStatementRestSecurityJs(js, vs); 
  defineCapabilityStatementRestResourceJs(js, vs); 
  defineCapabilityStatementRestResourceInteractionJs(js, vs); 
  defineCapabilityStatementRestResourceSearchParamJs(js, vs); 
  defineCapabilityStatementRestResourceOperationJs(js, vs); 
  defineCapabilityStatementRestInteractionJs(js, vs); 
  defineCapabilityStatementMessagingJs(js, vs); 
  defineCapabilityStatementMessagingEndpointJs(js, vs); 
  defineCapabilityStatementMessagingSupportedMessageJs(js, vs); 
  defineCapabilityStatementDocumentJs(js, vs); 
  defineCapabilityStatementJs(js, vs); 
  defineCapabilityStatement2SoftwareJs(js, vs); 
  defineCapabilityStatement2ImplementationJs(js, vs); 
  defineCapabilityStatement2RestJs(js, vs); 
  defineCapabilityStatement2RestResourceJs(js, vs); 
  defineCapabilityStatement2RestResourceInteractionJs(js, vs); 
  defineCapabilityStatement2RestResourceSearchParamJs(js, vs); 
  defineCapabilityStatement2RestResourceOperationJs(js, vs); 
  defineCapabilityStatement2RestInteractionJs(js, vs); 
  defineCapabilityStatement2Js(js, vs); 
  defineCarePlanActivityJs(js, vs); 
  defineCarePlanActivityDetailJs(js, vs); 
  defineCarePlanJs(js, vs); 
  defineCareTeamParticipantJs(js, vs); 
  defineCareTeamJs(js, vs); 
  defineCatalogEntryRelatedEntryJs(js, vs); 
  defineCatalogEntryJs(js, vs); 
  defineChargeItemPerformerJs(js, vs); 
  defineChargeItemJs(js, vs); 
  defineChargeItemDefinitionApplicabilityJs(js, vs); 
  defineChargeItemDefinitionPropertyGroupJs(js, vs); 
  defineChargeItemDefinitionPropertyGroupPriceComponentJs(js, vs); 
  defineChargeItemDefinitionJs(js, vs); 
  defineCitationSummaryJs(js, vs); 
  defineCitationVariantCitationJs(js, vs); 
  defineCitationJournalJs(js, vs); 
  defineCitationJournalJournalIssueJs(js, vs); 
  defineCitationJournalJournalIssuePublicationDateJs(js, vs); 
  defineCitationPublicationInfoJs(js, vs); 
  defineCitationPublicationInfoPublishedInJs(js, vs); 
  defineCitationAlternativeTitleJs(js, vs); 
  defineCitationPaginationJs(js, vs); 
  defineCitationArticleUrlJs(js, vs); 
  defineCitationAlternativeAbstractJs(js, vs); 
  defineCitationContributorshipJs(js, vs); 
  defineCitationContributorshipEntryJs(js, vs); 
  defineCitationContributorshipEntryAffiliationInfoJs(js, vs); 
  defineCitationContributorshipSummaryJs(js, vs); 
  defineCitationAlternativeFormJs(js, vs); 
  defineCitationAlternativeFormJournalIssueJs(js, vs); 
  defineCitationAlternativeFormJournalIssuePublicationDateJs(js, vs); 
  defineCitationAlternativeFormPaginationJs(js, vs); 
  defineCitationAlternativeFormPublicationInfoJs(js, vs); 
  defineCitationAlternativeFormPublicationInfoPublishedInJs(js, vs); 
  defineCitationKeywordListJs(js, vs); 
  defineCitationKeywordListKeywordJs(js, vs); 
  defineCitationMedlinePubMedJs(js, vs); 
  defineCitationMedlinePubMedPubMedPubDateJs(js, vs); 
  defineCitationMedlinePubMedRelatedArticleJs(js, vs); 
  defineCitationJs(js, vs); 
  defineClaimRelatedJs(js, vs); 
  defineClaimPayeeJs(js, vs); 
  defineClaimCareTeamJs(js, vs); 
  defineClaimSupportingInfoJs(js, vs); 
  defineClaimDiagnosisJs(js, vs); 
  defineClaimProcedureJs(js, vs); 
  defineClaimInsuranceJs(js, vs); 
  defineClaimAccidentJs(js, vs); 
  defineClaimItemJs(js, vs); 
  defineClaimItemDetailJs(js, vs); 
  defineClaimItemDetailSubDetailJs(js, vs); 
  defineClaimJs(js, vs); 
  defineClaimResponseItemJs(js, vs); 
  defineClaimResponseItemAdjudicationJs(js, vs); 
  defineClaimResponseItemDetailJs(js, vs); 
  defineClaimResponseItemDetailSubDetailJs(js, vs); 
  defineClaimResponseAddItemJs(js, vs); 
  defineClaimResponseAddItemDetailJs(js, vs); 
  defineClaimResponseAddItemDetailSubDetailJs(js, vs); 
  defineClaimResponseTotalJs(js, vs); 
  defineClaimResponsePaymentJs(js, vs); 
  defineClaimResponseProcessNoteJs(js, vs); 
  defineClaimResponseInsuranceJs(js, vs); 
  defineClaimResponseErrorJs(js, vs); 
  defineClaimResponseJs(js, vs); 
  defineClinicalImpressionFindingJs(js, vs); 
  defineClinicalImpressionJs(js, vs); 
  defineClinicalUseIssueContraindicationJs(js, vs); 
  defineClinicalUseIssueContraindicationOtherTherapyJs(js, vs); 
  defineClinicalUseIssueIndicationJs(js, vs); 
  defineClinicalUseIssueInteractionJs(js, vs); 
  defineClinicalUseIssueInteractionInteractantJs(js, vs); 
  defineClinicalUseIssueUndesirableEffectJs(js, vs); 
  defineClinicalUseIssueJs(js, vs); 
  defineCodeSystemFilterJs(js, vs); 
  defineCodeSystemPropertyJs(js, vs); 
  defineCodeSystemConceptJs(js, vs); 
  defineCodeSystemConceptDesignationJs(js, vs); 
  defineCodeSystemConceptPropertyJs(js, vs); 
  defineCodeSystemJs(js, vs); 
  defineCommunicationPayloadJs(js, vs); 
  defineCommunicationJs(js, vs); 
  defineCommunicationRequestPayloadJs(js, vs); 
  defineCommunicationRequestJs(js, vs); 
  defineCompartmentDefinitionResourceJs(js, vs); 
  defineCompartmentDefinitionJs(js, vs); 
  defineCompositionAttesterJs(js, vs); 
  defineCompositionRelatesToJs(js, vs); 
  defineCompositionEventJs(js, vs); 
  defineCompositionSectionJs(js, vs); 
  defineCompositionJs(js, vs); 
  defineConceptMapGroupJs(js, vs); 
  defineConceptMapGroupElementJs(js, vs); 
  defineConceptMapGroupElementTargetJs(js, vs); 
  defineConceptMapGroupElementTargetDependsOnJs(js, vs); 
  defineConceptMapGroupUnmappedJs(js, vs); 
  defineConceptMapJs(js, vs); 
  defineConditionStageJs(js, vs); 
  defineConditionEvidenceJs(js, vs); 
  defineConditionJs(js, vs); 
  defineConditionDefinitionObservationJs(js, vs); 
  defineConditionDefinitionMedicationJs(js, vs); 
  defineConditionDefinitionPreconditionJs(js, vs); 
  defineConditionDefinitionQuestionnaireJs(js, vs); 
  defineConditionDefinitionPlanJs(js, vs); 
  defineConditionDefinitionJs(js, vs); 
  defineConsentPolicyJs(js, vs); 
  defineConsentVerificationJs(js, vs); 
  defineConsentProvisionJs(js, vs); 
  defineConsentProvisionActorJs(js, vs); 
  defineConsentProvisionDataJs(js, vs); 
  defineConsentJs(js, vs); 
  defineContractContentDefinitionJs(js, vs); 
  defineContractTermJs(js, vs); 
  defineContractTermSecurityLabelJs(js, vs); 
  defineContractTermOfferJs(js, vs); 
  defineContractTermOfferPartyJs(js, vs); 
  defineContractTermOfferAnswerJs(js, vs); 
  defineContractTermAssetJs(js, vs); 
  defineContractTermAssetContextJs(js, vs); 
  defineContractTermAssetValuedItemJs(js, vs); 
  defineContractTermActionJs(js, vs); 
  defineContractTermActionSubjectJs(js, vs); 
  defineContractSignerJs(js, vs); 
  defineContractFriendlyJs(js, vs); 
  defineContractLegalJs(js, vs); 
  defineContractRuleJs(js, vs); 
  defineContractJs(js, vs); 
  defineCoverageClassJs(js, vs); 
  defineCoverageCostToBeneficiaryJs(js, vs); 
  defineCoverageCostToBeneficiaryExceptionJs(js, vs); 
  defineCoverageJs(js, vs); 
  defineCoverageEligibilityRequestSupportingInfoJs(js, vs); 
  defineCoverageEligibilityRequestInsuranceJs(js, vs); 
  defineCoverageEligibilityRequestItemJs(js, vs); 
  defineCoverageEligibilityRequestItemDiagnosisJs(js, vs); 
  defineCoverageEligibilityRequestJs(js, vs); 
  defineCoverageEligibilityResponseInsuranceJs(js, vs); 
  defineCoverageEligibilityResponseInsuranceItemJs(js, vs); 
  defineCoverageEligibilityResponseInsuranceItemBenefitJs(js, vs); 
  defineCoverageEligibilityResponseErrorJs(js, vs); 
  defineCoverageEligibilityResponseJs(js, vs); 
  defineDetectedIssueEvidenceJs(js, vs); 
  defineDetectedIssueMitigationJs(js, vs); 
  defineDetectedIssueJs(js, vs); 
  defineDeviceUdiCarrierJs(js, vs); 
  defineDeviceDeviceNameJs(js, vs); 
  defineDeviceSpecializationJs(js, vs); 
  defineDeviceVersionJs(js, vs); 
  defineDevicePropertyJs(js, vs); 
  defineDeviceOperationalStatusJs(js, vs); 
  defineDeviceAssociationStatusJs(js, vs); 
  defineDeviceJs(js, vs); 
  defineDeviceDefinitionUdiDeviceIdentifierJs(js, vs); 
  defineDeviceDefinitionDeviceNameJs(js, vs); 
  defineDeviceDefinitionSpecializationJs(js, vs); 
  defineDeviceDefinitionCapabilityJs(js, vs); 
  defineDeviceDefinitionPropertyJs(js, vs); 
  defineDeviceDefinitionMaterialJs(js, vs); 
  defineDeviceDefinitionJs(js, vs); 
  defineDeviceMetricCalibrationJs(js, vs); 
  defineDeviceMetricJs(js, vs); 
  defineDeviceRequestParameterJs(js, vs); 
  defineDeviceRequestJs(js, vs); 
  defineDeviceUseStatementJs(js, vs); 
  defineDiagnosticReportMediaJs(js, vs); 
  defineDiagnosticReportJs(js, vs); 
  defineDocumentManifestRelatedJs(js, vs); 
  defineDocumentManifestJs(js, vs); 
  defineDocumentReferenceAttesterJs(js, vs); 
  defineDocumentReferenceRelatesToJs(js, vs); 
  defineDocumentReferenceContentJs(js, vs); 
  defineDocumentReferenceJs(js, vs); 
  defineEncounterStatusHistoryJs(js, vs); 
  defineEncounterClassHistoryJs(js, vs); 
  defineEncounterParticipantJs(js, vs); 
  defineEncounterDiagnosisJs(js, vs); 
  defineEncounterHospitalizationJs(js, vs); 
  defineEncounterLocationJs(js, vs); 
  defineEncounterJs(js, vs); 
  defineEndpointJs(js, vs); 
  defineEnrollmentRequestJs(js, vs); 
  defineEnrollmentResponseJs(js, vs); 
  defineEpisodeOfCareStatusHistoryJs(js, vs); 
  defineEpisodeOfCareDiagnosisJs(js, vs); 
  defineEpisodeOfCareJs(js, vs); 
  defineEventDefinitionJs(js, vs); 
  defineEvidenceVariableDefinitionJs(js, vs); 
  defineEvidenceCertaintyJs(js, vs); 
  defineEvidenceCertaintyCertaintySubcomponentJs(js, vs); 
  defineEvidenceJs(js, vs); 
  defineEvidenceReportSubjectJs(js, vs); 
  defineEvidenceReportSubjectCharacteristicJs(js, vs); 
  defineEvidenceReportRelatesToJs(js, vs); 
  defineEvidenceReportSectionJs(js, vs); 
  defineEvidenceReportJs(js, vs); 
  defineEvidenceVariableCharacteristicJs(js, vs); 
  defineEvidenceVariableCharacteristicTimeFromStartJs(js, vs); 
  defineEvidenceVariableCategoryJs(js, vs); 
  defineEvidenceVariableJs(js, vs); 
  defineExampleScenarioActorJs(js, vs); 
  defineExampleScenarioInstanceJs(js, vs); 
  defineExampleScenarioInstanceVersionJs(js, vs); 
  defineExampleScenarioInstanceContainedInstanceJs(js, vs); 
  defineExampleScenarioProcessJs(js, vs); 
  defineExampleScenarioProcessStepJs(js, vs); 
  defineExampleScenarioProcessStepOperationJs(js, vs); 
  defineExampleScenarioProcessStepAlternativeJs(js, vs); 
  defineExampleScenarioJs(js, vs); 
  defineExplanationOfBenefitRelatedJs(js, vs); 
  defineExplanationOfBenefitPayeeJs(js, vs); 
  defineExplanationOfBenefitCareTeamJs(js, vs); 
  defineExplanationOfBenefitSupportingInfoJs(js, vs); 
  defineExplanationOfBenefitDiagnosisJs(js, vs); 
  defineExplanationOfBenefitProcedureJs(js, vs); 
  defineExplanationOfBenefitInsuranceJs(js, vs); 
  defineExplanationOfBenefitAccidentJs(js, vs); 
  defineExplanationOfBenefitItemJs(js, vs); 
  defineExplanationOfBenefitItemAdjudicationJs(js, vs); 
  defineExplanationOfBenefitItemDetailJs(js, vs); 
  defineExplanationOfBenefitItemDetailSubDetailJs(js, vs); 
  defineExplanationOfBenefitAddItemJs(js, vs); 
  defineExplanationOfBenefitAddItemDetailJs(js, vs); 
  defineExplanationOfBenefitAddItemDetailSubDetailJs(js, vs); 
  defineExplanationOfBenefitTotalJs(js, vs); 
  defineExplanationOfBenefitPaymentJs(js, vs); 
  defineExplanationOfBenefitProcessNoteJs(js, vs); 
  defineExplanationOfBenefitBenefitBalanceJs(js, vs); 
  defineExplanationOfBenefitBenefitBalanceFinancialJs(js, vs); 
  defineExplanationOfBenefitJs(js, vs); 
  defineFamilyMemberHistoryConditionJs(js, vs); 
  defineFamilyMemberHistoryProcedureJs(js, vs); 
  defineFamilyMemberHistoryJs(js, vs); 
  defineFlagJs(js, vs); 
  defineGoalTargetJs(js, vs); 
  defineGoalJs(js, vs); 
  defineGraphDefinitionLinkJs(js, vs); 
  defineGraphDefinitionLinkTargetJs(js, vs); 
  defineGraphDefinitionLinkTargetCompartmentJs(js, vs); 
  defineGraphDefinitionJs(js, vs); 
  defineGroupCharacteristicJs(js, vs); 
  defineGroupMemberJs(js, vs); 
  defineGroupJs(js, vs); 
  defineGuidanceResponseJs(js, vs); 
  defineHealthcareServiceEligibilityJs(js, vs); 
  defineHealthcareServiceAvailableTimeJs(js, vs); 
  defineHealthcareServiceNotAvailableJs(js, vs); 
  defineHealthcareServiceJs(js, vs); 
  defineImagingStudyProcedureJs(js, vs); 
  defineImagingStudySeriesJs(js, vs); 
  defineImagingStudySeriesPerformerJs(js, vs); 
  defineImagingStudySeriesInstanceJs(js, vs); 
  defineImagingStudyJs(js, vs); 
  defineImmunizationPerformerJs(js, vs); 
  defineImmunizationEducationJs(js, vs); 
  defineImmunizationReactionJs(js, vs); 
  defineImmunizationProtocolAppliedJs(js, vs); 
  defineImmunizationJs(js, vs); 
  defineImmunizationEvaluationJs(js, vs); 
  defineImmunizationRecommendationRecommendationJs(js, vs); 
  defineImmunizationRecommendationRecommendationDateCriterionJs(js, vs); 
  defineImmunizationRecommendationJs(js, vs); 
  defineImplementationGuideDependsOnJs(js, vs); 
  defineImplementationGuideGlobalJs(js, vs); 
  defineImplementationGuideDefinitionJs(js, vs); 
  defineImplementationGuideDefinitionGroupingJs(js, vs); 
  defineImplementationGuideDefinitionResourceJs(js, vs); 
  defineImplementationGuideDefinitionPageJs(js, vs); 
  defineImplementationGuideDefinitionParameterJs(js, vs); 
  defineImplementationGuideDefinitionTemplateJs(js, vs); 
  defineImplementationGuideManifestJs(js, vs); 
  defineImplementationGuideManifestResourceJs(js, vs); 
  defineImplementationGuideManifestPageJs(js, vs); 
  defineImplementationGuideJs(js, vs); 
  defineIngredientSubstanceJs(js, vs); 
  defineIngredientSubstanceStrengthJs(js, vs); 
  defineIngredientSubstanceStrengthReferenceStrengthJs(js, vs); 
  defineIngredientSpecifiedSubstanceJs(js, vs); 
  defineIngredientJs(js, vs); 
  defineInsurancePlanContactJs(js, vs); 
  defineInsurancePlanCoverageJs(js, vs); 
  defineInsurancePlanCoverageBenefitJs(js, vs); 
  defineInsurancePlanCoverageBenefitLimitJs(js, vs); 
  defineInsurancePlanPlanJs(js, vs); 
  defineInsurancePlanPlanGeneralCostJs(js, vs); 
  defineInsurancePlanPlanSpecificCostJs(js, vs); 
  defineInsurancePlanPlanSpecificCostBenefitJs(js, vs); 
  defineInsurancePlanPlanSpecificCostBenefitCostJs(js, vs); 
  defineInsurancePlanJs(js, vs); 
  defineInvoiceParticipantJs(js, vs); 
  defineInvoiceLineItemJs(js, vs); 
  defineInvoiceLineItemPriceComponentJs(js, vs); 
  defineInvoiceJs(js, vs); 
  defineLibraryJs(js, vs); 
  defineLinkageItemJs(js, vs); 
  defineLinkageJs(js, vs); 
  defineListEntryJs(js, vs); 
  defineListJs(js, vs); 
  defineLocationPositionJs(js, vs); 
  defineLocationHoursOfOperationJs(js, vs); 
  defineLocationJs(js, vs); 
  defineManufacturedItemDefinitionPropertyJs(js, vs); 
  defineManufacturedItemDefinitionJs(js, vs); 
  defineMeasureGroupJs(js, vs); 
  defineMeasureGroupPopulationJs(js, vs); 
  defineMeasureGroupStratifierJs(js, vs); 
  defineMeasureGroupStratifierComponentJs(js, vs); 
  defineMeasureSupplementalDataJs(js, vs); 
  defineMeasureJs(js, vs); 
  defineMeasureReportGroupJs(js, vs); 
  defineMeasureReportGroupPopulationJs(js, vs); 
  defineMeasureReportGroupStratifierJs(js, vs); 
  defineMeasureReportGroupStratifierStratumJs(js, vs); 
  defineMeasureReportGroupStratifierStratumComponentJs(js, vs); 
  defineMeasureReportGroupStratifierStratumPopulationJs(js, vs); 
  defineMeasureReportJs(js, vs); 
  defineMedicationIngredientJs(js, vs); 
  defineMedicationBatchJs(js, vs); 
  defineMedicationJs(js, vs); 
  defineMedicationAdministrationPerformerJs(js, vs); 
  defineMedicationAdministrationDosageJs(js, vs); 
  defineMedicationAdministrationJs(js, vs); 
  defineMedicationDispensePerformerJs(js, vs); 
  defineMedicationDispenseSubstitutionJs(js, vs); 
  defineMedicationDispenseJs(js, vs); 
  defineMedicationKnowledgeRelatedMedicationKnowledgeJs(js, vs); 
  defineMedicationKnowledgeMonographJs(js, vs); 
  defineMedicationKnowledgeIngredientJs(js, vs); 
  defineMedicationKnowledgeCostJs(js, vs); 
  defineMedicationKnowledgeMonitoringProgramJs(js, vs); 
  defineMedicationKnowledgeAdministrationGuidelineJs(js, vs); 
  defineMedicationKnowledgeAdministrationGuidelineDosageJs(js, vs); 
  defineMedicationKnowledgeAdministrationGuidelinePatientCharacteristicJs(js, vs); 
  defineMedicationKnowledgeMedicineClassificationJs(js, vs); 
  defineMedicationKnowledgePackagingJs(js, vs); 
  defineMedicationKnowledgeDrugCharacteristicJs(js, vs); 
  defineMedicationKnowledgeRegulatoryJs(js, vs); 
  defineMedicationKnowledgeRegulatorySubstitutionJs(js, vs); 
  defineMedicationKnowledgeRegulatoryMaxDispenseJs(js, vs); 
  defineMedicationKnowledgeKineticCharacteristicJs(js, vs); 
  defineMedicationKnowledgeJs(js, vs); 
  defineMedicationRequestDispenseRequestJs(js, vs); 
  defineMedicationRequestDispenseRequestInitialFillJs(js, vs); 
  defineMedicationRequestSubstitutionJs(js, vs); 
  defineMedicationRequestJs(js, vs); 
  defineMedicationUsageJs(js, vs); 
  defineMedicinalProductDefinitionContactJs(js, vs); 
  defineMedicinalProductDefinitionNameJs(js, vs); 
  defineMedicinalProductDefinitionNameNamePartJs(js, vs); 
  defineMedicinalProductDefinitionNameCountryLanguageJs(js, vs); 
  defineMedicinalProductDefinitionCrossReferenceJs(js, vs); 
  defineMedicinalProductDefinitionManufacturingBusinessOperationJs(js, vs); 
  defineMedicinalProductDefinitionJs(js, vs); 
  defineMessageDefinitionFocusJs(js, vs); 
  defineMessageDefinitionAllowedResponseJs(js, vs); 
  defineMessageDefinitionJs(js, vs); 
  defineMessageHeaderDestinationJs(js, vs); 
  defineMessageHeaderSourceJs(js, vs); 
  defineMessageHeaderResponseJs(js, vs); 
  defineMessageHeaderJs(js, vs); 
  defineMolecularSequenceReferenceSeqJs(js, vs); 
  defineMolecularSequenceVariantJs(js, vs); 
  defineMolecularSequenceQualityJs(js, vs); 
  defineMolecularSequenceQualityRocJs(js, vs); 
  defineMolecularSequenceRepositoryJs(js, vs); 
  defineMolecularSequenceStructureVariantJs(js, vs); 
  defineMolecularSequenceStructureVariantOuterJs(js, vs); 
  defineMolecularSequenceStructureVariantInnerJs(js, vs); 
  defineMolecularSequenceJs(js, vs); 
  defineNamingSystemUniqueIdJs(js, vs); 
  defineNamingSystemJs(js, vs); 
  defineNutritionIntakeConsumedItemJs(js, vs); 
  defineNutritionIntakeIngredientLabelJs(js, vs); 
  defineNutritionIntakePerformerJs(js, vs); 
  defineNutritionIntakeJs(js, vs); 
  defineNutritionOrderOralDietJs(js, vs); 
  defineNutritionOrderOralDietNutrientJs(js, vs); 
  defineNutritionOrderOralDietTextureJs(js, vs); 
  defineNutritionOrderSupplementJs(js, vs); 
  defineNutritionOrderEnteralFormulaJs(js, vs); 
  defineNutritionOrderEnteralFormulaAdministrationJs(js, vs); 
  defineNutritionOrderJs(js, vs); 
  defineNutritionProductNutrientJs(js, vs); 
  defineNutritionProductIngredientJs(js, vs); 
  defineNutritionProductProductCharacteristicJs(js, vs); 
  defineNutritionProductInstanceJs(js, vs); 
  defineNutritionProductJs(js, vs); 
  defineObservationReferenceRangeJs(js, vs); 
  defineObservationComponentJs(js, vs); 
  defineObservationJs(js, vs); 
  defineObservationDefinitionQuantitativeDetailsJs(js, vs); 
  defineObservationDefinitionQualifiedIntervalJs(js, vs); 
  defineObservationDefinitionComponentJs(js, vs); 
  defineObservationDefinitionJs(js, vs); 
  defineOperationDefinitionParameterJs(js, vs); 
  defineOperationDefinitionParameterBindingJs(js, vs); 
  defineOperationDefinitionParameterReferencedFromJs(js, vs); 
  defineOperationDefinitionOverloadJs(js, vs); 
  defineOperationDefinitionJs(js, vs); 
  defineOperationOutcomeIssueJs(js, vs); 
  defineOperationOutcomeJs(js, vs); 
  defineOrganizationContactJs(js, vs); 
  defineOrganizationJs(js, vs); 
  defineOrganizationAffiliationJs(js, vs); 
  definePackagedProductDefinitionBatchIdentifierJs(js, vs); 
  definePackagedProductDefinitionPackageJs(js, vs); 
  definePackagedProductDefinitionPackagePropertyJs(js, vs); 
  definePackagedProductDefinitionPackageContainedItemJs(js, vs); 
  definePackagedProductDefinitionJs(js, vs); 
  defineParametersParameterJs(js, vs); 
  defineParametersJs(js, vs); 
  definePatientContactJs(js, vs); 
  definePatientCommunicationJs(js, vs); 
  definePatientLinkJs(js, vs); 
  definePatientJs(js, vs); 
  definePaymentNoticeJs(js, vs); 
  definePaymentReconciliationDetailJs(js, vs); 
  definePaymentReconciliationProcessNoteJs(js, vs); 
  definePaymentReconciliationJs(js, vs); 
  definePermissionProcessingActivityJs(js, vs); 
  definePermissionJustificationJs(js, vs); 
  definePermissionJs(js, vs); 
  definePersonLinkJs(js, vs); 
  definePersonJs(js, vs); 
  definePlanDefinitionGoalJs(js, vs); 
  definePlanDefinitionGoalTargetJs(js, vs); 
  definePlanDefinitionActionJs(js, vs); 
  definePlanDefinitionActionConditionJs(js, vs); 
  definePlanDefinitionActionRelatedActionJs(js, vs); 
  definePlanDefinitionActionParticipantJs(js, vs); 
  definePlanDefinitionActionDynamicValueJs(js, vs); 
  definePlanDefinitionJs(js, vs); 
  definePractitionerQualificationJs(js, vs); 
  definePractitionerJs(js, vs); 
  definePractitionerRoleAvailableTimeJs(js, vs); 
  definePractitionerRoleNotAvailableJs(js, vs); 
  definePractitionerRoleJs(js, vs); 
  defineProcedurePerformerJs(js, vs); 
  defineProcedureFocalDeviceJs(js, vs); 
  defineProcedureJs(js, vs); 
  defineProvenanceAgentJs(js, vs); 
  defineProvenanceEntityJs(js, vs); 
  defineProvenanceJs(js, vs); 
  defineQuestionnaireItemJs(js, vs); 
  defineQuestionnaireItemEnableWhenJs(js, vs); 
  defineQuestionnaireItemAnswerOptionJs(js, vs); 
  defineQuestionnaireItemInitialJs(js, vs); 
  defineQuestionnaireJs(js, vs); 
  defineQuestionnaireResponseItemJs(js, vs); 
  defineQuestionnaireResponseItemAnswerJs(js, vs); 
  defineQuestionnaireResponseJs(js, vs); 
  defineRegulatedAuthorizationRelatedDateJs(js, vs); 
  defineRegulatedAuthorizationCaseJs(js, vs); 
  defineRegulatedAuthorizationJs(js, vs); 
  defineRelatedPersonCommunicationJs(js, vs); 
  defineRelatedPersonJs(js, vs); 
  defineRequestGroupActionJs(js, vs); 
  defineRequestGroupActionConditionJs(js, vs); 
  defineRequestGroupActionRelatedActionJs(js, vs); 
  defineRequestGroupJs(js, vs); 
  defineResearchStudyArmJs(js, vs); 
  defineResearchStudyObjectiveJs(js, vs); 
  defineResearchStudyJs(js, vs); 
  defineResearchSubjectProgressJs(js, vs); 
  defineResearchSubjectJs(js, vs); 
  defineRiskAssessmentPredictionJs(js, vs); 
  defineRiskAssessmentJs(js, vs); 
  defineScheduleJs(js, vs); 
  defineSearchParameterComponentJs(js, vs); 
  defineSearchParameterJs(js, vs); 
  defineServiceRequestJs(js, vs); 
  defineSlotJs(js, vs); 
  defineSpecimenCollectionJs(js, vs); 
  defineSpecimenProcessingJs(js, vs); 
  defineSpecimenContainerJs(js, vs); 
  defineSpecimenJs(js, vs); 
  defineSpecimenDefinitionTypeTestedJs(js, vs); 
  defineSpecimenDefinitionTypeTestedContainerJs(js, vs); 
  defineSpecimenDefinitionTypeTestedContainerAdditiveJs(js, vs); 
  defineSpecimenDefinitionTypeTestedHandlingJs(js, vs); 
  defineSpecimenDefinitionJs(js, vs); 
  defineStructureDefinitionMappingJs(js, vs); 
  defineStructureDefinitionContextJs(js, vs); 
  defineStructureDefinitionSnapshotJs(js, vs); 
  defineStructureDefinitionDifferentialJs(js, vs); 
  defineStructureDefinitionJs(js, vs); 
  defineStructureMapStructureJs(js, vs); 
  defineStructureMapGroupJs(js, vs); 
  defineStructureMapGroupInputJs(js, vs); 
  defineStructureMapGroupRuleJs(js, vs); 
  defineStructureMapGroupRuleSourceJs(js, vs); 
  defineStructureMapGroupRuleTargetJs(js, vs); 
  defineStructureMapGroupRuleTargetParameterJs(js, vs); 
  defineStructureMapGroupRuleDependentJs(js, vs); 
  defineStructureMapJs(js, vs); 
  defineSubscriptionFilterByJs(js, vs); 
  defineSubscriptionJs(js, vs); 
  defineSubscriptionStatusJs(js, vs); 
  defineSubscriptionTopicResourceTriggerJs(js, vs); 
  defineSubscriptionTopicResourceTriggerQueryCriteriaJs(js, vs); 
  defineSubscriptionTopicCanFilterByJs(js, vs); 
  defineSubscriptionTopicJs(js, vs); 
  defineSubstanceInstanceJs(js, vs); 
  defineSubstanceIngredientJs(js, vs); 
  defineSubstanceJs(js, vs); 
  defineSubstanceDefinitionMoietyJs(js, vs); 
  defineSubstanceDefinitionPropertyJs(js, vs); 
  defineSubstanceDefinitionStructureJs(js, vs); 
  defineSubstanceDefinitionStructureIsotopeJs(js, vs); 
  defineSubstanceDefinitionStructureIsotopeMolecularWeightJs(js, vs); 
  defineSubstanceDefinitionStructureRepresentationJs(js, vs); 
  defineSubstanceDefinitionCodeJs(js, vs); 
  defineSubstanceDefinitionNameJs(js, vs); 
  defineSubstanceDefinitionNameOfficialJs(js, vs); 
  defineSubstanceDefinitionRelationshipJs(js, vs); 
  defineSubstanceDefinitionJs(js, vs); 
  defineSubstanceNucleicAcidSubunitJs(js, vs); 
  defineSubstanceNucleicAcidSubunitLinkageJs(js, vs); 
  defineSubstanceNucleicAcidSubunitSugarJs(js, vs); 
  defineSubstanceNucleicAcidJs(js, vs); 
  defineSubstancePolymerMonomerSetJs(js, vs); 
  defineSubstancePolymerMonomerSetStartingMaterialJs(js, vs); 
  defineSubstancePolymerRepeatJs(js, vs); 
  defineSubstancePolymerRepeatRepeatUnitJs(js, vs); 
  defineSubstancePolymerRepeatRepeatUnitDegreeOfPolymerisationJs(js, vs); 
  defineSubstancePolymerRepeatRepeatUnitStructuralRepresentationJs(js, vs); 
  defineSubstancePolymerJs(js, vs); 
  defineSubstanceProteinSubunitJs(js, vs); 
  defineSubstanceProteinJs(js, vs); 
  defineSubstanceReferenceInformationGeneJs(js, vs); 
  defineSubstanceReferenceInformationGeneElementJs(js, vs); 
  defineSubstanceReferenceInformationTargetJs(js, vs); 
  defineSubstanceReferenceInformationJs(js, vs); 
  defineSubstanceSourceMaterialFractionDescriptionJs(js, vs); 
  defineSubstanceSourceMaterialOrganismJs(js, vs); 
  defineSubstanceSourceMaterialOrganismAuthorJs(js, vs); 
  defineSubstanceSourceMaterialOrganismHybridJs(js, vs); 
  defineSubstanceSourceMaterialOrganismOrganismGeneralJs(js, vs); 
  defineSubstanceSourceMaterialPartDescriptionJs(js, vs); 
  defineSubstanceSourceMaterialJs(js, vs); 
  defineSupplyDeliverySuppliedItemJs(js, vs); 
  defineSupplyDeliveryJs(js, vs); 
  defineSupplyRequestParameterJs(js, vs); 
  defineSupplyRequestJs(js, vs); 
  defineTaskRestrictionJs(js, vs); 
  defineTaskInputJs(js, vs); 
  defineTaskOutputJs(js, vs); 
  defineTaskJs(js, vs); 
  defineTerminologyCapabilitiesSoftwareJs(js, vs); 
  defineTerminologyCapabilitiesImplementationJs(js, vs); 
  defineTerminologyCapabilitiesCodeSystemJs(js, vs); 
  defineTerminologyCapabilitiesCodeSystemVersionJs(js, vs); 
  defineTerminologyCapabilitiesCodeSystemVersionFilterJs(js, vs); 
  defineTerminologyCapabilitiesExpansionJs(js, vs); 
  defineTerminologyCapabilitiesExpansionParameterJs(js, vs); 
  defineTerminologyCapabilitiesValidateCodeJs(js, vs); 
  defineTerminologyCapabilitiesTranslationJs(js, vs); 
  defineTerminologyCapabilitiesClosureJs(js, vs); 
  defineTerminologyCapabilitiesJs(js, vs); 
  defineTestReportParticipantJs(js, vs); 
  defineTestReportSetupJs(js, vs); 
  defineTestReportSetupActionJs(js, vs); 
  defineTestReportSetupActionOperationJs(js, vs); 
  defineTestReportSetupActionAssertJs(js, vs); 
  defineTestReportTestJs(js, vs); 
  defineTestReportTestActionJs(js, vs); 
  defineTestReportTeardownJs(js, vs); 
  defineTestReportTeardownActionJs(js, vs); 
  defineTestReportJs(js, vs); 
  defineTestScriptOriginJs(js, vs); 
  defineTestScriptDestinationJs(js, vs); 
  defineTestScriptMetadataJs(js, vs); 
  defineTestScriptMetadataLinkJs(js, vs); 
  defineTestScriptMetadataCapabilityJs(js, vs); 
  defineTestScriptFixtureJs(js, vs); 
  defineTestScriptVariableJs(js, vs); 
  defineTestScriptSetupJs(js, vs); 
  defineTestScriptSetupActionJs(js, vs); 
  defineTestScriptSetupActionOperationJs(js, vs); 
  defineTestScriptSetupActionOperationRequestHeaderJs(js, vs); 
  defineTestScriptSetupActionAssertJs(js, vs); 
  defineTestScriptTestJs(js, vs); 
  defineTestScriptTestActionJs(js, vs); 
  defineTestScriptTeardownJs(js, vs); 
  defineTestScriptTeardownActionJs(js, vs); 
  defineTestScriptJs(js, vs); 
  defineValueSetComposeJs(js, vs); 
  defineValueSetComposeIncludeJs(js, vs); 
  defineValueSetComposeIncludeConceptJs(js, vs); 
  defineValueSetComposeIncludeConceptDesignationJs(js, vs); 
  defineValueSetComposeIncludeFilterJs(js, vs); 
  defineValueSetExpansionJs(js, vs); 
  defineValueSetExpansionParameterJs(js, vs); 
  defineValueSetExpansionPropertyJs(js, vs); 
  defineValueSetExpansionContainsJs(js, vs); 
  defineValueSetExpansionContainsPropertyJs(js, vs); 
  defineValueSetJs(js, vs); 
  defineVerificationResultPrimarySourceJs(js, vs); 
  defineVerificationResultAttestationJs(js, vs); 
  defineVerificationResultValidatorJs(js, vs); 
  defineVerificationResultJs(js, vs); 
  defineVisionPrescriptionLensSpecificationJs(js, vs); 
  defineVisionPrescriptionLensSpecificationPrismJs(js, vs); 
  defineVisionPrescriptionJs(js, vs); 

end;

procedure registerFHIRTypes(js : TFHIRJavascript);
begin
  registerFHIRTypesInt(js, false);
end;

procedure registerFHIRTypesDef(js : TFHIRJavascript);
begin
  registerFHIRTypesInt(js, true);
end;

end.

